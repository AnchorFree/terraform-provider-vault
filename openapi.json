{"openapi":"3.0.2","info":{"title":"HashiCorp Vault API","description":"HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.","version":"1.0.0","license":{"name":"Mozilla Public License 2.0","url":"https://www.mozilla.org/en-US/MPL/2.0"}},"paths":{"/ad/config":{"description":"Configure the AD server to connect to, along with password options.","get":{"summary":"Configure the AD server to connect to, along with password options.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configure the AD server to connect to, along with password options.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"binddn":{"type":"string","description":"LDAP DN for searching for the user DN (optional)"},"bindpass":{"type":"string","description":"LDAP password for searching for the user DN (optional)"},"case_sensitive_names":{"type":"boolean","description":"If true, case sensitivity will be used when comparing usernames and groups for matching policies."},"certificate":{"type":"string","description":"CA certificate to use when verifying LDAP server certificate, must be x509 PEM encoded (optional)"},"deny_null_bind":{"type":"boolean","description":"Denies an unauthenticated LDAP bind request if the user's password is empty; defaults to true"},"discoverdn":{"type":"boolean","description":"Use anonymous bind to discover the bind DN of a user (optional)"},"formatter":{"type":"string","description":"Text to insert the password into, ex. \"customPrefix{{PASSWORD}}customSuffix\"."},"groupattr":{"type":"string","description":"LDAP attribute to follow on objects returned by \u003cgroupfilter\u003e in order to enumerate user group membership. Examples: \"cn\" or \"memberOf\", etc. Default: cn"},"groupdn":{"type":"string","description":"LDAP search base to use for group membership search (eg: ou=Groups,dc=example,dc=org)"},"groupfilter":{"type":"string","description":"Go template for querying group membership of user (optional) The template can access the following context variables: UserDN, Username Example: (\u0026(objectClass=group)(member:1.2.840.113556.1.4.1941:={{.UserDN}})) Default: (|(memberUid={{.Username}})(member={{.UserDN}})(uniqueMember={{.UserDN}}))"},"insecure_tls":{"type":"boolean","description":"Skip LDAP server SSL Certificate verification - VERY insecure (optional)"},"length":{"type":"number","description":"The desired length of passwords that Vault generates."},"max_ttl":{"type":"number","description":"In seconds, the maximum password time-to-live.","format":"seconds"},"starttls":{"type":"boolean","description":"Issue a StartTLS command after establishing unencrypted connection (optional)"},"tls_max_version":{"type":"string","description":"Maximum TLS version to use. Accepted values are 'tls10', 'tls11' or 'tls12'. Defaults to 'tls12'"},"tls_min_version":{"type":"string","description":"Minimum TLS version to use. Accepted values are 'tls10', 'tls11' or 'tls12'. Defaults to 'tls12'"},"ttl":{"type":"number","description":"In seconds, the default password time-to-live.","format":"seconds"},"upndomain":{"type":"string","description":"Enables userPrincipalDomain login with [username]@UPNDomain (optional)"},"url":{"type":"string","description":"LDAP URL to connect to (default: ldap://127.0.0.1). Multiple URLs can be specified by concatenating them with commas; they will be tried in-order."},"use_token_groups":{"type":"boolean","description":"If true, use the Active Directory tokenGroups constructed attribute of the user to find the group memberships. This will find all security groups including nested ones."},"userattr":{"type":"string","description":"Attribute used for users (default: cn)"},"userdn":{"type":"string","description":"LDAP domain to use for users (eg: ou=People,dc=example,dc=org)"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Configure the AD server to connect to, along with password options.","tags":["secrets"],"responses":{"204":{"description":"empty body"}}}},"/ad/creds/{name}":{"description":"Retrieve a role's creds by role name.","parameters":[{"name":"name","description":"Name of the role","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Retrieve a role's creds by role name.","tags":["secrets"],"responses":{"200":{"description":"OK"}}}},"/ad/roles":{"description":"List the name of each role currently stored.","get":{"summary":"List the name of each role currently stored.","tags":["secrets"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/ad/roles/{name}":{"description":"Manage roles to build links between Vault and Active Directory service accounts.","parameters":[{"name":"name","description":"Name of the role","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Manage roles to build links between Vault and Active Directory service accounts.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Manage roles to build links between Vault and Active Directory service accounts.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"service_account_name":{"type":"string","description":"The username/logon name for the service account with which this role will be associated."},"ttl":{"type":"number","description":"In seconds, the default password time-to-live.","format":"seconds"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Manage roles to build links between Vault and Active Directory service accounts.","tags":["secrets"],"responses":{"204":{"description":"empty body"}}}},"/ad/rotate-root":{"description":"Request to rotate the root credentials.","get":{"summary":"Request to rotate the root credentials.","tags":["secrets"],"responses":{"200":{"description":"OK"}}}},"/alicloud/config":{"description":"Configure the access key and secret to use for RAM and STS calls.","get":{"summary":"Configure the access key and secret to use for RAM and STS calls.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configure the access key and secret to use for RAM and STS calls.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"access_key":{"type":"string","description":"Access key with appropriate permissions."},"secret_key":{"type":"string","description":"Secret key with appropriate permissions."}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Configure the access key and secret to use for RAM and STS calls.","tags":["secrets"],"responses":{"204":{"description":"empty body"}}}},"/alicloud/creds/{name}":{"description":"Generate an API key or STS credential using the given role's configuration.'","parameters":[{"name":"name","description":"The name of the role.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Generate an API key or STS credential using the given role's configuration.'","tags":["secrets"],"responses":{"200":{"description":"OK"}}}},"/alicloud/role":{"description":"List the existing roles in this backend.","get":{"summary":"List the existing roles in this backend.","tags":["secrets"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/alicloud/role/{name}":{"description":"Read, write and reference policies and roles that API keys or STS credentials can be made for.","parameters":[{"name":"name","description":"The name of the role.","in":"path","schema":{"type":"string"},"required":true}],"x-vault-create-supported":true,"get":{"summary":"Read, write and reference policies and roles that API keys or STS credentials can be made for.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Read, write and reference policies and roles that API keys or STS credentials can be made for.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"inline_policies":{"type":"string","description":"JSON of policies to be dynamically applied to users of this role."},"max_ttl":{"type":"number","description":"The maximum allowed lifetime of tokens issued using this role.","format":"seconds"},"remote_policies":{"type":"array","description":"The name and type of each remote policy to be applied. Example: \"name:AliyunRDSReadOnlyAccess,type:System\".","items":{"type":"string"}},"role_arn":{"type":"string","description":"ARN of the role to be assumed. If provided, inline_policies and remote_policies should be blank. At creation time, this role must have configured trusted actors, and the access key and secret that will be used to assume the role (in /config) must qualify as a trusted actor."},"ttl":{"type":"number","description":"Duration in seconds after which the issued token should expire. Defaults to 0, in which case the value will fallback to the system/mount defaults.","format":"seconds"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Read, write and reference policies and roles that API keys or STS credentials can be made for.","tags":["secrets"],"responses":{"204":{"description":"empty body"}}}},"/auth/alicloud/login":{"description":"Authenticates an RAM entity with Vault.","parameters":[{"name":"identity_request_headers","description":"The request headers. This must include the headers over which AliCloud has included a signature.","in":"header","schema":{"type":"string"}}],"x-vault-unauthenticated":true,"post":{"summary":"Authenticates an RAM entity with Vault.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"identity_request_url":{"type":"string","description":"Base64-encoded full URL against which to make the AliCloud request."},"role":{"type":"string","description":"Name of the role against which the login is being attempted. If 'role' is not specified, then the login endpoint looks for a role name in the ARN returned by the GetCallerIdentity request. If a matching role is not found, login fails."}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/alicloud/role":{"description":"Lists all the roles that are registered with Vault.","get":{"summary":"Lists all the roles that are registered with Vault.","tags":["auth"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/auth/alicloud/role/{role}":{"description":"Create a role and associate policies to it.","parameters":[{"name":"role","description":"The name of the role as it should appear in Vault.","in":"path","schema":{"type":"string"},"required":true}],"x-vault-create-supported":true,"get":{"summary":"Create a role and associate policies to it.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Create a role and associate policies to it.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"arn":{"type":"string","description":"ARN of the RAM to bind to this role."},"bound_cidrs":{"type":"array","description":"Comma separated string or list of CIDR blocks. If set, specifies the blocks of IP addresses which can perform the login operation.","items":{"type":"string"}},"max_ttl":{"type":"number","description":"The maximum allowed lifetime of tokens issued using this role.","format":"seconds"},"period":{"type":"number","description":"If set, indicates that the token generated using this role should never expire. The token should be renewed within the duration specified by this value. At each renewal, the token's TTL will be set to the value of this parameter.","format":"seconds"},"policies":{"type":"array","description":"Policies to be set on tokens issued using this role.","items":{"type":"string"}},"ttl":{"type":"number","description":"Duration in seconds after which the issued token should expire. Defaults to 0, in which case the value will fallback to the system/mount defaults.","format":"seconds"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Create a role and associate policies to it.","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/alicloud/roles":{"description":"Lists all the roles that are registered with Vault.","get":{"summary":"Lists all the roles that are registered with Vault.","tags":["auth"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/auth/app-id/login":{"description":"Log in with an App ID and User ID.","x-vault-unauthenticated":true,"post":{"summary":"Log in with an App ID and User ID.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"app_id":{"type":"string","description":"The unique app ID"},"user_id":{"type":"string","description":"The unique user ID"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/app-id/login/{app_id}":{"description":"Log in with an App ID and User ID.","parameters":[{"name":"app_id","description":"The unique app ID","in":"path","schema":{"type":"string"},"required":true}],"x-vault-unauthenticated":true,"post":{"summary":"Log in with an App ID and User ID.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"user_id":{"type":"string","description":"The unique user ID"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/app-id/map/app-id":{"description":"Read mappings for app-id","get":{"summary":"Read mappings for app-id","tags":["auth"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/auth/app-id/map/app-id/{key}":{"description":"Read/write/delete a single app-id mapping","parameters":[{"name":"key","description":"Key for the app-id mapping","in":"path","schema":{"type":"string"},"required":true}],"x-vault-create-supported":true,"get":{"summary":"Read/write/delete a single app-id mapping","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Read/write/delete a single app-id mapping","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"display_name":{"type":"string","description":"A name to map to this app ID for logs."},"value":{"type":"string","description":"Policies for the app ID."}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Read/write/delete a single app-id mapping","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/app-id/map/user-id":{"description":"Read mappings for user-id","get":{"summary":"Read mappings for user-id","tags":["auth"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/auth/app-id/map/user-id/{key}":{"description":"Read/write/delete a single user-id mapping","parameters":[{"name":"key","description":"Key for the user-id mapping","in":"path","schema":{"type":"string"},"required":true}],"x-vault-create-supported":true,"get":{"summary":"Read/write/delete a single user-id mapping","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Read/write/delete a single user-id mapping","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"cidr_block":{"type":"string","description":"If not blank, restricts auth by this CIDR block"},"value":{"type":"string","description":"App IDs that this user associates with."}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Read/write/delete a single user-id mapping","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/approle/login":{"description":"Issue a token based on the credentials supplied","x-vault-unauthenticated":true,"post":{"summary":"Issue a token based on the credentials supplied","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"role_id":{"type":"string","description":"Unique identifier of the Role. Required to be supplied when the 'bind_secret_id' constraint is set."},"secret_id":{"type":"string","description":"SecretID belong to the App role"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/approle/role":{"description":"Lists all the roles registered with the backend.","get":{"summary":"Lists all the roles registered with the backend.","tags":["auth"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/auth/approle/role/{role_name}":{"description":"Register an role with the backend.","parameters":[{"name":"role_name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"x-vault-create-supported":true,"get":{"summary":"Register an role with the backend.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Register an role with the backend.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"bind_secret_id":{"type":"boolean","description":"Impose secret_id to be presented when logging in using this role. Defaults to 'true'."},"bound_cidr_list":{"type":"array","description":"Deprecated: Please use \"secret_id_bound_cidrs\" instead. Comma separated string or list of CIDR blocks. If set, specifies the blocks of IP addresses which can perform the login operation.","items":{"type":"string"}},"local_secret_ids":{"type":"boolean","description":"If set, the secret IDs generated using this role will be cluster local. This can only be set during role creation and once set, it can't be reset later."},"period":{"type":"number","description":"If set, indicates that the token generated using this role should never expire. The token should be renewed within the duration specified by this value. At each renewal, the token's TTL will be set to the value of this parameter.","format":"seconds"},"policies":{"type":"array","description":"Comma separated list of policies on the role.","items":{"type":"string"}},"role_id":{"type":"string","description":"Identifier of the role. Defaults to a UUID."},"secret_id_bound_cidrs":{"type":"array","description":"Comma separated string or list of CIDR blocks. If set, specifies the blocks of IP addresses which can perform the login operation.","items":{"type":"string"}},"secret_id_num_uses":{"type":"number","description":"Number of times a SecretID can access the role, after which the SecretID will expire. Defaults to 0 meaning that the the secret_id is of unlimited use."},"secret_id_ttl":{"type":"number","description":"Duration in seconds after which the issued SecretID should expire. Defaults to 0, meaning no expiration.","format":"seconds"},"token_bound_cidrs":{"type":"array","description":"Comma separated string or list of CIDR blocks. If set, specifies the blocks of IP addresses which can use the returned token.","items":{"type":"string"}},"token_max_ttl":{"type":"number","description":"Duration in seconds after which the issued token should not be allowed to be renewed. Defaults to 0, in which case the value will fall back to the system/mount defaults.","format":"seconds"},"token_num_uses":{"type":"number","description":"Number of times issued tokens can be used"},"token_ttl":{"type":"number","description":"Duration in seconds after which the issued token should expire. Defaults to 0, in which case the value will fall back to the system/mount defaults.","format":"seconds"},"token_type":{"type":"string","description":"The type of token to generate (\"service\" or \"batch\"), or \"default\" to use the default"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Register an role with the backend.","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/approle/role/{role_name}/bind-secret-id":{"description":"Impose secret_id to be presented during login using this role.","parameters":[{"name":"role_name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Impose secret_id to be presented during login using this role.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Impose secret_id to be presented during login using this role.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"bind_secret_id":{"type":"boolean","description":"Impose secret_id to be presented when logging in using this role."}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Impose secret_id to be presented during login using this role.","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/approle/role/{role_name}/bound-cidr-list":{"description":"Deprecated: Comma separated list of CIDR blocks, if set, specifies blocks of IP addresses which can perform the login operation","parameters":[{"name":"role_name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Deprecated: Comma separated list of CIDR blocks, if set, specifies blocks of IP\naddresses which can perform the login operation","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Deprecated: Comma separated list of CIDR blocks, if set, specifies blocks of IP\naddresses which can perform the login operation","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"bound_cidr_list":{"type":"array","description":"Deprecated: Please use \"secret_id_bound_cidrs\" instead. Comma separated string or list of CIDR blocks. If set, specifies the blocks of IP addresses which can perform the login operation.","items":{"type":"string"}}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Deprecated: Comma separated list of CIDR blocks, if set, specifies blocks of IP\naddresses which can perform the login operation","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/approle/role/{role_name}/custom-secret-id":{"description":"Assign a SecretID of choice against the role.","parameters":[{"name":"role_name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Assign a SecretID of choice against the role.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"cidr_list":{"type":"array","description":"Comma separated string or list of CIDR blocks enforcing secret IDs to be used from specific set of IP addresses. If 'bound_cidr_list' is set on the role, then the list of CIDR blocks listed here should be a subset of the CIDR blocks listed on the role.","items":{"type":"string"}},"metadata":{"type":"string","description":"Metadata to be tied to the SecretID. This should be a JSON formatted string containing metadata in key value pairs."},"secret_id":{"type":"string","description":"SecretID to be attached to the role."},"token_bound_cidrs":{"type":"array","description":"Comma separated string or list of CIDR blocks. If set, specifies the blocks of IP addresses which can use the returned token. Should be a subset of the token CIDR blocks listed on the role, if any.","items":{"type":"string"}}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/approle/role/{role_name}/local-secret-ids":{"description":"Enables cluster local secret IDs","parameters":[{"name":"role_name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Enables cluster local secret IDs","tags":["auth"],"responses":{"200":{"description":"OK"}}}},"/auth/approle/role/{role_name}/period":{"description":"Updates the value of 'period' on the role","parameters":[{"name":"role_name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Updates the value of 'period' on the role","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Updates the value of 'period' on the role","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"period":{"type":"number","description":"If set, indicates that the token generated using this role should never expire. The token should be renewed within the duration specified by this value. At each renewal, the token's TTL will be set to the value of this parameter.","format":"seconds"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Updates the value of 'period' on the role","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/approle/role/{role_name}/policies":{"description":"Policies of the role.","parameters":[{"name":"role_name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Policies of the role.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Policies of the role.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"policies":{"type":"array","description":"Comma separated list of policies on the role.","items":{"type":"string"}}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Policies of the role.","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/approle/role/{role_name}/role-id":{"description":"Returns the 'role_id' of the role.","parameters":[{"name":"role_name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Returns the 'role_id' of the role.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Returns the 'role_id' of the role.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"role_id":{"type":"string","description":"Identifier of the role. Defaults to a UUID."}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/approle/role/{role_name}/secret-id":{"description":"Generate a SecretID against this role.","parameters":[{"name":"role_name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Generate a SecretID against this role.","tags":["auth"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Generate a SecretID against this role.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"cidr_list":{"type":"array","description":"Comma separated string or list of CIDR blocks enforcing secret IDs to be used from specific set of IP addresses. If 'bound_cidr_list' is set on the role, then the list of CIDR blocks listed here should be a subset of the CIDR blocks listed on the role.","items":{"type":"string"}},"metadata":{"type":"string","description":"Metadata to be tied to the SecretID. This should be a JSON formatted string containing the metadata in key value pairs."},"token_bound_cidrs":{"type":"array","description":"Comma separated string or list of CIDR blocks. If set, specifies the blocks of IP addresses which can use the returned token. Should be a subset of the token CIDR blocks listed on the role, if any.","items":{"type":"string"}}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/approle/role/{role_name}/secret-id-accessor/destroy":{"parameters":[{"name":"role_name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"post":{"tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"secret_id_accessor":{"type":"string","description":"Accessor of the SecretID"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/approle/role/{role_name}/secret-id-accessor/lookup":{"parameters":[{"name":"role_name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"post":{"tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"secret_id_accessor":{"type":"string","description":"Accessor of the SecretID"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/approle/role/{role_name}/secret-id-bound-cidrs":{"description":"Comma separated list of CIDR blocks, if set, specifies blocks of IP addresses which can perform the login operation","parameters":[{"name":"role_name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Comma separated list of CIDR blocks, if set, specifies blocks of IP\naddresses which can perform the login operation","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Comma separated list of CIDR blocks, if set, specifies blocks of IP\naddresses which can perform the login operation","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"secret_id_bound_cidrs":{"type":"array","description":"Comma separated string or list of CIDR blocks. If set, specifies the blocks of IP addresses which can perform the login operation.","items":{"type":"string"}}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Comma separated list of CIDR blocks, if set, specifies blocks of IP\naddresses which can perform the login operation","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/approle/role/{role_name}/secret-id-num-uses":{"description":"Use limit of the SecretID generated against the role.","parameters":[{"name":"role_name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Use limit of the SecretID generated against the role.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Use limit of the SecretID generated against the role.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"secret_id_num_uses":{"type":"number","description":"Number of times a SecretID can access the role, after which the SecretID will expire."}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Use limit of the SecretID generated against the role.","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/approle/role/{role_name}/secret-id-ttl":{"description":"Duration in seconds, representing the lifetime of the SecretIDs that are generated against the role using 'role/\u003crole_name\u003e/secret-id' or 'role/\u003crole_name\u003e/custom-secret-id' endpoints.","parameters":[{"name":"role_name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Duration in seconds, representing the lifetime of the SecretIDs\nthat are generated against the role using 'role/\u003crole_name\u003e/secret-id' or\n'role/\u003crole_name\u003e/custom-secret-id' endpoints.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Duration in seconds, representing the lifetime of the SecretIDs\nthat are generated against the role using 'role/\u003crole_name\u003e/secret-id' or\n'role/\u003crole_name\u003e/custom-secret-id' endpoints.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"secret_id_ttl":{"type":"number","description":"Duration in seconds after which the issued SecretID should expire. Defaults to 0, meaning no expiration.","format":"seconds"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Duration in seconds, representing the lifetime of the SecretIDs\nthat are generated against the role using 'role/\u003crole_name\u003e/secret-id' or\n'role/\u003crole_name\u003e/custom-secret-id' endpoints.","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/approle/role/{role_name}/secret-id/destroy":{"description":"Invalidate an issued secret_id","parameters":[{"name":"role_name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Invalidate an issued secret_id","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"secret_id":{"type":"string","description":"SecretID attached to the role."}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Invalidate an issued secret_id","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/approle/role/{role_name}/secret-id/lookup":{"description":"Read the properties of an issued secret_id","parameters":[{"name":"role_name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Read the properties of an issued secret_id","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"secret_id":{"type":"string","description":"SecretID attached to the role."}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/approle/role/{role_name}/token-bound-cidrs":{"description":"Comma separated string or list of CIDR blocks. If set, specifies the blocks of IP addresses which can use the returned token.","parameters":[{"name":"role_name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Comma separated string or list of CIDR blocks. If set, specifies the blocks of\nIP addresses which can use the returned token.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Comma separated string or list of CIDR blocks. If set, specifies the blocks of\nIP addresses which can use the returned token.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"token_bound_cidrs":{"type":"array","description":"Comma separated string or list of CIDR blocks. If set, specifies the blocks of IP addresses which can use the returned token.","items":{"type":"string"}}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Comma separated string or list of CIDR blocks. If set, specifies the blocks of\nIP addresses which can use the returned token.","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/approle/role/{role_name}/token-max-ttl":{"description":"Duration in seconds, the maximum lifetime of the tokens issued by using the SecretIDs that were generated against this role, after which the tokens are not allowed to be renewed.","parameters":[{"name":"role_name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Duration in seconds, the maximum lifetime of the tokens issued by using\nthe SecretIDs that were generated against this role, after which the\ntokens are not allowed to be renewed.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Duration in seconds, the maximum lifetime of the tokens issued by using\nthe SecretIDs that were generated against this role, after which the\ntokens are not allowed to be renewed.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"token_max_ttl":{"type":"number","description":"Duration in seconds after which the issued token should not be allowed to be renewed. Defaults to 0, in which case the value will fall back to the system/mount defaults.","format":"seconds"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Duration in seconds, the maximum lifetime of the tokens issued by using\nthe SecretIDs that were generated against this role, after which the\ntokens are not allowed to be renewed.","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/approle/role/{role_name}/token-num-uses":{"description":"Number of times issued tokens can be used","parameters":[{"name":"role_name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Number of times issued tokens can be used","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Number of times issued tokens can be used","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"token_num_uses":{"type":"number","description":"Number of times issued tokens can be used"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Number of times issued tokens can be used","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/approle/role/{role_name}/token-ttl":{"description":"Duration in seconds, the lifetime of the token issued by using the SecretID that is generated against this role, before which the token needs to be renewed.","parameters":[{"name":"role_name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Duration in seconds, the lifetime of the token issued by using the SecretID that\nis generated against this role, before which the token needs to be renewed.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Duration in seconds, the lifetime of the token issued by using the SecretID that\nis generated against this role, before which the token needs to be renewed.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"token_ttl":{"type":"number","description":"Duration in seconds after which the issued token should expire. Defaults to 0, in which case the value will fall back to the system/mount defaults.","format":"seconds"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Duration in seconds, the lifetime of the token issued by using the SecretID that\nis generated against this role, before which the token needs to be renewed.","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/approle/tidy/secret-id":{"description":"Trigger the clean-up of expired SecretID entries.","post":{"summary":"Trigger the clean-up of expired SecretID entries.","tags":["auth"],"responses":{"200":{"description":"OK"}}}},"/auth/aws/config/certificate/{cert_name}":{"description":"Adds the AWS Public Key that is used to verify the PKCS#7 signature of the identity document.","parameters":[{"name":"cert_name","description":"Name of the certificate.","in":"path","schema":{"type":"string"},"required":true}],"x-vault-create-supported":true,"get":{"summary":"Adds the AWS Public Key that is used to verify the PKCS#7 signature of the identity document.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Adds the AWS Public Key that is used to verify the PKCS#7 signature of the identity document.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"aws_public_cert":{"type":"string","description":"Base64 encoded AWS Public cert required to verify PKCS7 signature of the EC2 instance metadata."},"type":{"type":"string","description":"Takes the value of either \"pkcs7\" or \"identity\", indicating the type of document which can be verified using the given certificate. The reason is that the PKCS#7 document will have a DSA digest and the identity signature will have an RSA signature, and accordingly the public certificates to verify those also vary. Defaults to \"pkcs7\"."}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Adds the AWS Public Key that is used to verify the PKCS#7 signature of the identity document.","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/aws/config/certificates":{"description":"Lists all the AWS public certificates that are registered with the backend.","get":{"summary":"Lists all the AWS public certificates that are registered with the backend.","tags":["auth"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/auth/aws/config/client":{"description":"Configure AWS IAM credentials that are used to query instance and role details from the AWS API.","x-vault-create-supported":true,"get":{"summary":"Configure AWS IAM credentials that are used to query instance and role details from the AWS API.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configure AWS IAM credentials that are used to query instance and role details from the AWS API.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"access_key":{"type":"string","description":"AWS Access Key ID for the account used to make AWS API requests."},"endpoint":{"type":"string","description":"URL to override the default generated endpoint for making AWS EC2 API calls."},"iam_endpoint":{"type":"string","description":"URL to override the default generated endpoint for making AWS IAM API calls."},"iam_server_id_header_value":{"type":"string","description":"Value to require in the X-Vault-AWS-IAM-Server-ID request header"},"max_retries":{"type":"number","description":"Maximum number of retries for recoverable exceptions of AWS APIs"},"secret_key":{"type":"string","description":"AWS Secret Access Key for the account used to make AWS API requests."},"sts_endpoint":{"type":"string","description":"URL to override the default generated endpoint for making AWS STS API calls."}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Configure AWS IAM credentials that are used to query instance and role details from the AWS API.","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/aws/config/identity":{"description":"Configure the way the AWS auth method interacts with the identity store","get":{"summary":"Configure the way the AWS auth method interacts with the identity store","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configure the way the AWS auth method interacts with the identity store","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"iam_alias":{"type":"string","description":"Configure how the AWS auth method generates entity aliases when using IAM auth. Valid values are \"unique_id\" and \"full_arn\""}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/aws/config/sts":{"description":"List all the AWS account/STS role relationships registered with Vault.","get":{"summary":"List all the AWS account/STS role relationships registered with Vault.","tags":["auth"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/auth/aws/config/sts/{account_id}":{"description":"Specify STS roles to be assumed for certain AWS accounts.","parameters":[{"name":"account_id","description":"AWS account ID to be associated with STS role. If set, Vault will use assumed credentials to verify any login attempts from EC2 instances in this account.","in":"path","schema":{"type":"string"},"required":true}],"x-vault-create-supported":true,"get":{"summary":"Specify STS roles to be assumed for certain AWS accounts.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Specify STS roles to be assumed for certain AWS accounts.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"sts_role":{"type":"string","description":"AWS ARN for STS role to be assumed when interacting with the account specified. The Vault server must have permissions to assume this role."}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Specify STS roles to be assumed for certain AWS accounts.","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/aws/config/tidy/identity-whitelist":{"description":"Configures the periodic tidying operation of the whitelisted identity entries.","x-vault-create-supported":true,"get":{"summary":"Configures the periodic tidying operation of the whitelisted identity entries.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configures the periodic tidying operation of the whitelisted identity entries.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"disable_periodic_tidy":{"type":"boolean","description":"If set to 'true', disables the periodic tidying of the 'identity-whitelist/\u003cinstance_id\u003e' entries."},"safety_buffer":{"type":"number","description":"The amount of extra time that must have passed beyond the identity's expiration, before it is removed from the backend storage.","format":"seconds"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Configures the periodic tidying operation of the whitelisted identity entries.","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/aws/config/tidy/roletag-blacklist":{"description":"Configures the periodic tidying operation of the blacklisted role tag entries.","x-vault-create-supported":true,"get":{"summary":"Configures the periodic tidying operation of the blacklisted role tag entries.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configures the periodic tidying operation of the blacklisted role tag entries.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"disable_periodic_tidy":{"type":"boolean","description":"If set to 'true', disables the periodic tidying of blacklisted entries."},"safety_buffer":{"type":"number","description":"The amount of extra time that must have passed beyond the roletag expiration, before it is removed from the backend storage. Defaults to 4320h (180 days).","format":"seconds"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Configures the periodic tidying operation of the blacklisted role tag entries.","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/aws/identity-whitelist":{"description":"Lists the items present in the identity whitelist.","get":{"summary":"Lists the items present in the identity whitelist.","tags":["auth"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/auth/aws/identity-whitelist/{instance_id}":{"description":"Read or delete entries in the identity whitelist.","parameters":[{"name":"instance_id","description":"EC2 instance ID. A successful login operation from an EC2 instance gets cached in this whitelist, keyed off of instance ID.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Read or delete entries in the identity whitelist.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Read or delete entries in the identity whitelist.","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/aws/login":{"description":"Authenticates an EC2 instance with Vault.","parameters":[{"name":"iam_request_headers","description":"Key/value pairs of headers for use in the sts:GetCallerIdentity HTTP requests headers when auth_type is iam. Can be either a Base64-encoded, JSON-serialized string, or a JSON object of key/value pairs. This must at a minimum include the headers over which AWS has included a signature.","in":"header","schema":{"type":"string"}}],"x-vault-unauthenticated":true,"post":{"summary":"Authenticates an EC2 instance with Vault.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"iam_http_request_method":{"type":"string","description":"HTTP method to use for the AWS request when auth_type is iam. This must match what has been signed in the presigned request. Currently, POST is the only supported value"},"iam_request_body":{"type":"string","description":"Base64-encoded request body when auth_type is iam. This must match the request body included in the signature."},"iam_request_url":{"type":"string","description":"Base64-encoded full URL against which to make the AWS request when using iam auth_type."},"identity":{"type":"string","description":"Base64 encoded EC2 instance identity document. This needs to be supplied along with the 'signature' parameter. If using 'curl' for fetching the identity document, consider using the option '-w 0' while piping the output to 'base64' binary."},"nonce":{"type":"string","description":"The nonce to be used for subsequent login requests when auth_type is ec2. If this parameter is not specified at all and if reauthentication is allowed, then the backend will generate a random nonce, attaches it to the instance's identity-whitelist entry and returns the nonce back as part of auth metadata. This value should be used with further login requests, to establish client authenticity. Clients can choose to set a custom nonce if preferred, in which case, it is recommended that clients provide a strong nonce. If a nonce is provided but with an empty value, it indicates intent to disable reauthentication. Note that, when 'disallow_reauthentication' option is enabled on either the role or the role tag, the 'nonce' holds no significance."},"pkcs7":{"type":"string","description":"PKCS7 signature of the identity document when using an auth_type of ec2."},"role":{"type":"string","description":"Name of the role against which the login is being attempted. If 'role' is not specified, then the login endpoint looks for a role bearing the name of the AMI ID of the EC2 instance that is trying to login. If a matching role is not found, login fails."},"signature":{"type":"string","description":"Base64 encoded SHA256 RSA signature of the instance identity document. This needs to be supplied along with 'identity' parameter."}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/aws/role":{"description":"Lists all the roles that are registered with Vault.","get":{"summary":"Lists all the roles that are registered with Vault.","tags":["auth"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/auth/aws/role/{role}":{"description":"Create a role and associate policies to it.","parameters":[{"name":"role","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"x-vault-create-supported":true,"get":{"summary":"Create a role and associate policies to it.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Create a role and associate policies to it.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"allow_instance_migration":{"type":"boolean","description":"If set, allows migration of the underlying instance where the client resides. This keys off of pendingTime in the metadata document, so essentially, this disables the client nonce check whenever the instance is migrated to a new host and pendingTime is newer than the previously-remembered time. Use with caution. This is only checked when auth_type is ec2."},"auth_type":{"type":"string","description":"The auth_type permitted to authenticate to this role. Must be one of iam or ec2 and cannot be changed after role creation."},"bound_account_id":{"type":"array","description":"If set, defines a constraint on the EC2 instances that the account ID in its identity document to match one of the IDs specified by this parameter. This is only applicable when auth_type is ec2 or inferred_entity_type is ec2_instance.","items":{"type":"string"}},"bound_ami_id":{"type":"array","description":"If set, defines a constraint on the EC2 instances that they should be using one of the AMI IDs specified by this parameter. This is only applicable when auth_type is ec2 or inferred_entity_type is ec2_instance.","items":{"type":"string"}},"bound_ec2_instance_id":{"type":"array","description":"If set, defines a constraint on the EC2 instances to have one of the given instance IDs. Can be a list or comma-separated string of EC2 instance IDs. This is only applicable when auth_type is ec2 or inferred_entity_type is ec2_instance.","items":{"type":"string"}},"bound_iam_instance_profile_arn":{"type":"array","description":"If set, defines a constraint on the EC2 instances to be associated with an IAM instance profile ARN which has a prefix that matches one of the values specified by this parameter. The value is prefix-matched (as though it were a glob ending in '*'). This is only applicable when auth_type is ec2 or inferred_entity_type is ec2_instance.","items":{"type":"string"}},"bound_iam_principal_arn":{"type":"array","description":"ARN of the IAM principals to bind to this role. Only applicable when auth_type is iam.","items":{"type":"string"}},"bound_iam_role_arn":{"type":"array","description":"If set, defines a constraint on the authenticating EC2 instance that it must match one of the IAM role ARNs specified by this parameter. The value is prefix-matched (as though it were a glob ending in '*'). The configured IAM user or EC2 instance role must be allowed to execute the 'iam:GetInstanceProfile' action if this is specified. This is only applicable when auth_type is ec2 or inferred_entity_type is ec2_instance.","items":{"type":"string"}},"bound_region":{"type":"array","description":"If set, defines a constraint on the EC2 instances that the region in its identity document match one of the regions specified by this parameter. This is only applicable when auth_type is ec2.","items":{"type":"string"}},"bound_subnet_id":{"type":"array","description":"If set, defines a constraint on the EC2 instance to be associated with the subnet ID that matches one of the values specified by this parameter. This is only applicable when auth_type is ec2 or inferred_entity_type is ec2_instance.","items":{"type":"string"}},"bound_vpc_id":{"type":"array","description":"If set, defines a constraint on the EC2 instance to be associated with a VPC ID that matches one of the value specified by this parameter. This is only applicable when auth_type is ec2 or inferred_entity_type is ec2_instance.","items":{"type":"string"}},"disallow_reauthentication":{"type":"boolean","description":"If set, only allows a single token to be granted per instance ID. In order to perform a fresh login, the entry in whitelist for the instance ID needs to be cleared using 'auth/aws-ec2/identity-whitelist/\u003cinstance_id\u003e' endpoint. This is only applicable when auth_type is ec2."},"inferred_aws_region":{"type":"string","description":"When auth_type is iam and inferred_entity_type is set, the region to assume the inferred entity exists in."},"inferred_entity_type":{"type":"string","description":"When auth_type is iam, the AWS entity type to infer from the authenticated principal. The only supported value is ec2_instance, which will extract the EC2 instance ID from the authenticated role and apply the following restrictions specific to EC2 instances: bound_ami_id, bound_account_id, bound_iam_role_arn, bound_iam_instance_profile_arn, bound_vpc_id, bound_subnet_id. The configured EC2 client must be able to find the inferred instance ID in the results, and the instance must be running. If unable to determine the EC2 instance ID or unable to find the EC2 instance ID among running instances, then authentication will fail."},"max_ttl":{"type":"number","description":"The maximum allowed lifetime of tokens issued using this role.","format":"seconds"},"period":{"type":"number","description":"If set, indicates that the token generated using this role should never expire. The token should be renewed within the duration specified by this value. At each renewal, the token's TTL will be set to the value of this parameter.","format":"seconds"},"policies":{"type":"array","description":"Policies to be set on tokens issued using this role.","items":{"type":"string"}},"resolve_aws_unique_ids":{"type":"boolean","description":"If set, resolve all AWS IAM ARNs into AWS's internal unique IDs. When an IAM entity (e.g., user, role, or instance profile) is deleted, then all references to it within the role will be invalidated, which prevents a new IAM entity from being created with the same name and matching the role's IAM binds. Once set, this cannot be unset."},"role_tag":{"type":"string","description":"If set, enables the role tags for this role. The value set for this field should be the 'key' of the tag on the EC2 instance. The 'value' of the tag should be generated using 'role/\u003crole\u003e/tag' endpoint. Defaults to an empty string, meaning that role tags are disabled. This is only allowed if auth_type is ec2."},"ttl":{"type":"number","description":"Duration in seconds after which the issued token should expire. Defaults to 0, in which case the value will fallback to the system/mount defaults.","format":"seconds"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Create a role and associate policies to it.","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/aws/role/{role}/tag":{"description":"Create a tag on a role in order to be able to further restrict the capabilities of a role.","parameters":[{"name":"role","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Create a tag on a role in order to be able to further restrict the capabilities of a role.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"allow_instance_migration":{"type":"boolean","description":"If set, allows migration of the underlying instance where the client resides. This keys off of pendingTime in the metadata document, so essentially, this disables the client nonce check whenever the instance is migrated to a new host and pendingTime is newer than the previously-remembered time. Use with caution."},"disallow_reauthentication":{"type":"boolean","description":"If set, only allows a single token to be granted per instance ID. In order to perform a fresh login, the entry in whitelist for the instance ID needs to be cleared using the 'auth/aws-ec2/identity-whitelist/\u003cinstance_id\u003e' endpoint."},"instance_id":{"type":"string","description":"Instance ID for which this tag is intended for. If set, the created tag can only be used by the instance with the given ID."},"max_ttl":{"type":"number","description":"If set, specifies the maximum allowed token lifetime.","format":"seconds"},"policies":{"type":"array","description":"Policies to be associated with the tag. If set, must be a subset of the role's policies. If set, but set to an empty value, only the 'default' policy will be given to issued tokens.","items":{"type":"string"}}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/aws/roles":{"description":"Lists all the roles that are registered with Vault.","get":{"summary":"Lists all the roles that are registered with Vault.","tags":["auth"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/auth/aws/roletag-blacklist":{"description":"Lists the blacklisted role tags.","get":{"summary":"Lists the blacklisted role tags.","tags":["auth"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/auth/aws/roletag-blacklist/{role_tag}":{"description":"Blacklist a previously created role tag.","parameters":[{"name":"role_tag","description":"Role tag to be blacklisted. The tag can be supplied as-is. In order to avoid any encoding problems, it can be base64 encoded.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Blacklist a previously created role tag.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Blacklist a previously created role tag.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Blacklist a previously created role tag.","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/aws/tidy/identity-whitelist":{"description":"Clean-up the whitelist instance identity entries.","post":{"summary":"Clean-up the whitelist instance identity entries.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"safety_buffer":{"type":"number","description":"The amount of extra time that must have passed beyond the identity's expiration, before it is removed from the backend storage.","format":"seconds"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/aws/tidy/roletag-blacklist":{"description":"Clean-up the blacklist role tag entries.","post":{"summary":"Clean-up the blacklist role tag entries.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"safety_buffer":{"type":"number","description":"The amount of extra time that must have passed beyond the roletag expiration, before it is removed from the backend storage.","format":"seconds"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/azure/config":{"description":"Configures the Azure authentication backend.","x-vault-create-supported":true,"get":{"summary":"Configures the Azure authentication backend.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configures the Azure authentication backend.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"client_id":{"type":"string","description":"The OAuth2 client id to connection to Azure. This value can also be provided with the AZURE_CLIENT_ID environment variable."},"client_secret":{"type":"string","description":"The OAuth2 client secret to connection to Azure. This value can also be provided with the AZURE_CLIENT_SECRET environment variable."},"environment":{"type":"string","description":"The Azure environment name. If not provided, AzurePublicCloud is used. This value can also be provided with the AZURE_ENVIRONMENT environment variable."},"resource":{"type":"string","description":"The resource URL for the vault application in Azure Active Directory. This value can also be provided with the AZURE_AD_RESOURCE environment variable."},"tenant_id":{"type":"string","description":"The tenant id for the Azure Active Directory. This is sometimes referred to as Directory ID in AD. This value can also be provided with the AZURE_TENANT_ID environment variable."}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Configures the Azure authentication backend.","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/azure/login":{"description":"Authenticates Azure Managed Service Identities with Vault.","x-vault-unauthenticated":true,"post":{"summary":"Authenticates Azure Managed Service Identities with Vault.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"jwt":{"type":"string","description":"A signed JWT"},"resource_group_name":{"type":"string","description":"The resource group from the instance."},"role":{"type":"string","description":"The token role."},"subscription_id":{"type":"string","description":"The subscription id for the instance."},"vm_name":{"type":"string","description":"The name of the virtual machine. This value is ignored if vmss_name is specified."},"vmss_name":{"type":"string","description":"The name of the virtual machine scale set the instance is in."}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/azure/role":{"description":"Lists all the roles registered with the backend.","get":{"summary":"Lists all the roles registered with the backend.","tags":["auth"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/auth/azure/role/{name}":{"description":"Register an role with the backend.","parameters":[{"name":"name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"x-vault-create-supported":true,"get":{"summary":"Register an role with the backend.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Register an role with the backend.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"bound_group_ids":{"type":"array","description":"Comma-separated list of group ids that login is restricted to.","items":{"type":"string"}},"bound_locations":{"type":"array","description":"Comma-separated list of locations that login is restricted to.","items":{"type":"string"}},"bound_resource_groups":{"type":"array","description":"Comma-separated list of resource groups that login is restricted to.","items":{"type":"string"}},"bound_scale_sets":{"type":"array","description":"Comma-separated list of scale sets that login is restricted to.","items":{"type":"string"}},"bound_service_principal_ids":{"type":"array","description":"Comma-separated list of service principal ids that login is restricted to.","items":{"type":"string"}},"bound_subscription_ids":{"type":"array","description":"Comma-separated list of subscription ids that login is restricted to.","items":{"type":"string"}},"max_ttl":{"type":"number","description":"Duration in seconds after which the issued token should not be allowed to be renewed. Defaults to 0, in which case the value will fall back to the system/mount defaults.","format":"seconds"},"num_uses":{"type":"number","description":"Number of times issued tokens can be used"},"period":{"type":"number","description":"If set, indicates that the token generated using this role should never expire. The token should be renewed within the duration specified by this value. At each renewal, the token's TTL will be set to the value of this parameter.","format":"seconds"},"policies":{"type":"array","description":"List of policies on the role.","items":{"type":"string"}},"ttl":{"type":"number","description":"Duration in seconds after which the issued token should expire. Defaults to 0, in which case the value will fall back to the system/mount defaults.","format":"seconds"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Register an role with the backend.","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/centrify/config":{"description":"This path allows you to configure the centrify auth provider to interact with the Centrify Identity Services Platform for authenticating users.","x-vault-create-supported":true,"get":{"summary":"This path allows you to configure the centrify auth provider to interact with the Centrify Identity Services Platform\nfor authenticating users.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"This path allows you to configure the centrify auth provider to interact with the Centrify Identity Services Platform\nfor authenticating users.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"app_id":{"type":"string","description":"OAuth2 App ID"},"client_id":{"type":"string","description":"OAuth2 Client ID"},"client_secret":{"type":"string","description":"OAuth2 Client Secret"},"policies":{"type":"array","description":"Comma-separated list of policies all authenticated users inherit","items":{"type":"string"}},"scope":{"type":"string","description":"OAuth2 App Scope"},"service_url":{"type":"string","description":"Service URL (https://\u003ctenant\u003e.my.centrify.com)"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/centrify/login":{"description":"Log in with a username and password.","x-vault-unauthenticated":true,"post":{"summary":"Log in with a username and password.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"mode":{"type":"string","description":"Auth mode ('ro' for resource owner, 'cc' for credential client)."},"password":{"type":"string","description":"Password for this user."},"username":{"type":"string","description":"Username of the user."}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/cert/certs":{"description":"Manage trusted certificates used for authentication.","get":{"summary":"Manage trusted certificates used for authentication.","tags":["auth"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/auth/cert/certs/{name}":{"description":"Manage trusted certificates used for authentication.","parameters":[{"name":"name","description":"The name of the certificate","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Manage trusted certificates used for authentication.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Manage trusted certificates used for authentication.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"allowed_common_names":{"type":"array","description":"A comma-separated list of names. At least one must exist in the Common Name. Supports globbing.","items":{"type":"string"}},"allowed_dns_sans":{"type":"array","description":"A comma-separated list of DNS names. At least one must exist in the SANs. Supports globbing.","items":{"type":"string"}},"allowed_email_sans":{"type":"array","description":"A comma-separated list of Email Addresses. At least one must exist in the SANs. Supports globbing.","items":{"type":"string"}},"allowed_names":{"type":"array","description":"A comma-separated list of names. At least one must exist in either the Common Name or SANs. Supports globbing. This parameter is deprecated, please use allowed_common_names, allowed_dns_sans, allowed_email_sans, allowed_uri_sans.","items":{"type":"string"}},"allowed_organizational_units":{"type":"array","description":"A comma-separated list of Organizational Units names. At least one must exist in the OU field.","items":{"type":"string"}},"allowed_uri_sans":{"type":"array","description":"A comma-separated list of URIs. At least one must exist in the SANs. Supports globbing.","items":{"type":"string"}},"bound_cidrs":{"type":"array","description":"Comma separated string or list of CIDR blocks. If set, specifies the blocks of IP addresses which can perform the login operation.","items":{"type":"string"}},"certificate":{"type":"string","description":"The public certificate that should be trusted. Must be x509 PEM encoded."},"display_name":{"type":"string","description":"The display name to use for clients using this certificate."},"lease":{"type":"number","description":"Deprecated: use \"ttl\" instead. TTL time in seconds. Defaults to system/backend default TTL."},"max_ttl":{"type":"number","description":"Duration in either an integer number of seconds (3600) or an integer time unit (60m) after which the issued token can no longer be renewed.","format":"seconds"},"period":{"type":"number","description":"If set, indicates that the token generated using this role should never expire. The token should be renewed within the duration specified by this value. At each renewal, the token's TTL will be set to the value of this parameter.","format":"seconds"},"policies":{"type":"array","description":"Comma-separated list of policies.","items":{"type":"string"}},"required_extensions":{"type":"array","description":"A comma-separated string or array of extensions formatted as \"oid:value\". Expects the extension value to be some type of ASN1 encoded string. All values much match. Supports globbing on \"value\".","items":{"type":"string"}},"ttl":{"type":"number","description":"TTL for tokens issued by this backend. Defaults to system/backend default TTL time.","format":"seconds"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Manage trusted certificates used for authentication.","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/cert/config":{"post":{"tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"disable_binding":{"type":"boolean","description":"If set, during renewal, skips the matching of presented client identity with the client identity used during login. Defaults to false."}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/cert/crls/{name}":{"description":"Manage Certificate Revocation Lists checked during authentication.","parameters":[{"name":"name","description":"The name of the certificate","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Manage Certificate Revocation Lists checked during authentication.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Manage Certificate Revocation Lists checked during authentication.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"crl":{"type":"string","description":"The public certificate that should be trusted. May be DER or PEM encoded. Note: the expiration time is ignored; if the CRL is no longer valid, delete it using the same name as specified here."}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Manage Certificate Revocation Lists checked during authentication.","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/cert/login":{"x-vault-unauthenticated":true,"post":{"tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"The name of the certificate role to authenticate against."}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/gcp/config":{"description":"Configure credentials used to query the GCP IAM API to verify authenticating service accounts","get":{"summary":"Configure credentials used to query the GCP IAM API to verify authenticating service accounts","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configure credentials used to query the GCP IAM API to verify authenticating service accounts","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"credentials":{"type":"string","description":"Google credentials JSON that Vault will use to verify users against GCP APIs. If not specified, will use application default credentials"},"google_certs_endpoint":{"type":"string","description":"Base endpoint url that Vault will use to get Google certificates. If not specified, will use the OAuth2 library default. Useful for testing."}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/gcp/login":{"description":"Authenticates Google Cloud Platform entities with Vault.","x-vault-unauthenticated":true,"post":{"summary":"Authenticates Google Cloud Platform entities with Vault.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"jwt":{"type":"string","description":"A signed JWT. This is either a self-signed service account JWT ('iam' roles only) or a GCE identity metadata token ('iam', 'gce' roles)."},"role":{"type":"string","description":"Name of the role against which the login is being attempted. Required."}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/gcp/role":{"description":"Lists all the roles that are registered with Vault.","get":{"summary":"Lists all the roles that are registered with Vault.","tags":["auth"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/auth/gcp/role/{name}":{"description":"Create a GCP role with associated policies and required attributes.","parameters":[{"name":"name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"x-vault-create-supported":true,"get":{"summary":"Create a GCP role with associated policies and required attributes.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Create a GCP role with associated policies and required attributes.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"allow_gce_inference":{"type":"boolean","description":"'iam' roles only. If false, Vault will not not allow GCE instances to login in against this role"},"bound_instance_group":{"type":"string","description":"Deprecated: use \"bound_instance_groups\" instead."},"bound_instance_groups":{"type":"array","description":"Comma-separated list of permitted instance groups to which the GCE instance must belong. This option only applies to \"gce\" roles.","items":{"type":"string"}},"bound_labels":{"type":"array","description":"Comma-separated list of GCP labels formatted as\"key:value\" strings that must be present on the GCE instance in order to authenticate. This option only applies to \"gce\" roles.","items":{"type":"string"}},"bound_region":{"type":"string","description":"Deprecated: use \"bound_regions\" instead."},"bound_regions":{"type":"array","description":"Comma-separated list of permitted regions to which the GCE instance must belong. If a group is provided, it is assumed to be a regional group. If \"zone\" is provided, this option is ignored. This can be a self-link or region name. This option only applies to \"gce\" roles.","items":{"type":"string"}},"bound_service_accounts":{"type":"array","description":"Can be set for both 'iam' and 'gce' roles (required for 'iam'). A comma-seperated list of authorized service accounts. If the single value \"*\" is given, this is assumed to be all service accounts under the role's project. If this is set on a GCE role, the inferred service account from the instance metadata token will be used.","items":{"type":"string"}},"bound_zone":{"type":"string","description":"Deprecated: use \"bound_zones\" instead."},"bound_zones":{"type":"array","description":"Comma-separated list of permitted zones to which the GCE instance must belong. If a group is provided, it is assumed to be a zonal group. This can be a self-link or zone name. This option only applies to \"gce\" roles.","items":{"type":"string"}},"max_jwt_exp":{"type":"number","description":"Currently enabled for 'iam' only. Duration in seconds from time of validation that a JWT must expire within.","format":"seconds"},"max_ttl":{"type":"number","description":"The maximum allowed lifetime of tokens issued using this role.","format":"seconds"},"period":{"type":"number","description":"If set, indicates that the token generated using this role should never expire. The token should be renewed within the duration specified by this value. At each renewal, the token's TTL will be set to the value of this parameter.","format":"seconds"},"policies":{"type":"array","description":"Policies to be set on tokens issued using this role.","items":{"type":"string"}},"project_id":{"type":"string","description":"The id of the project that authorized instances must belong to for this role."},"service_accounts":{"type":"array","description":"Deprecated, use bound_service_accounts instead.","items":{"type":"string"}},"ttl":{"type":"number","description":"Duration in seconds after which the issued token should expire. Defaults to 0, in which case the value will fallback to the system/mount defaults.","format":"seconds"},"type":{"type":"string","description":"Type of the role. Currently supported: iam, gce"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Create a GCP role with associated policies and required attributes.","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/gcp/role/{name}/labels":{"description":"Add or remove labels for an existing 'gce' role","parameters":[{"name":"name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Add or remove labels for an existing 'gce' role","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"add":{"type":"array","description":"BoundLabels to add (in $key:$value)","items":{"type":"string"}},"remove":{"type":"array","description":"Label key values to remove","items":{"type":"string"}}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/gcp/role/{name}/service-accounts":{"description":"Add or remove service accounts for an existing `iam` role","parameters":[{"name":"name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Add or remove service accounts for an existing `iam` role","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"add":{"type":"array","description":"Service-account emails or IDs to add.","items":{"type":"string"}},"remove":{"type":"array","description":"Service-account emails or IDs to remove.","items":{"type":"string"}}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/gcp/roles":{"description":"Lists all the roles that are registered with Vault.","get":{"summary":"Lists all the roles that are registered with Vault.","tags":["auth"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/auth/github/config":{"get":{"tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"base_url":{"type":"string","description":"The API endpoint to use. Useful if you are running GitHub Enterprise or an API-compatible authentication server."},"max_ttl":{"type":"string","description":"Maximum duration after which authentication will be expired"},"organization":{"type":"string","description":"The organization users must be part of"},"ttl":{"type":"string","description":"Duration after which authentication will be expired"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/github/duo/access":{"description":"Configure the access keys and host for Duo API connections.","x-vault-sudo":true,"post":{"summary":"Configure the access keys and host for Duo API connections.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"host":{"type":"string","description":"Duo api host"},"ikey":{"type":"string","description":"Duo integration key"},"skey":{"type":"string","description":"Duo secret key"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/github/duo/config":{"description":"Configure Duo second factor behavior.","x-vault-sudo":true,"get":{"summary":"Configure Duo second factor behavior.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configure Duo second factor behavior.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"push_info":{"type":"string","description":"A string of URL-encoded key/value pairs that provides additional context about the authentication attempt in the Duo Mobile app"},"user_agent":{"type":"string","description":"User agent to connect to Duo (default \"\")"},"username_format":{"type":"string","description":"Format string given auth method username as argument to create Duo username (default '%s')"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/github/login":{"x-vault-unauthenticated":true,"post":{"tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","description":"Multi-factor auth method to use (optional)"},"passcode":{"type":"string","description":"One time passcode (optional)"},"token":{"type":"string","description":"GitHub personal API token"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/github/map/teams":{"description":"Read mappings for teams","get":{"summary":"Read mappings for teams","tags":["auth"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/auth/github/map/teams/{key}":{"description":"Read/write/delete a single teams mapping","parameters":[{"name":"key","description":"Key for the teams mapping","in":"path","schema":{"type":"string"},"required":true}],"x-vault-create-supported":true,"get":{"summary":"Read/write/delete a single teams mapping","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Read/write/delete a single teams mapping","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"value":{"type":"string","description":"Value for teams mapping"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Read/write/delete a single teams mapping","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/github/map/users":{"description":"Read mappings for users","get":{"summary":"Read mappings for users","tags":["auth"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/auth/github/map/users/{key}":{"description":"Read/write/delete a single users mapping","parameters":[{"name":"key","description":"Key for the users mapping","in":"path","schema":{"type":"string"},"required":true}],"x-vault-create-supported":true,"get":{"summary":"Read/write/delete a single users mapping","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Read/write/delete a single users mapping","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"value":{"type":"string","description":"Value for users mapping"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Read/write/delete a single users mapping","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/github/mfa_config":{"description":"Configure multi factor backend.","x-vault-sudo":true,"get":{"summary":"Configure multi factor backend.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configure multi factor backend.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"type":{"type":"string","description":"Enables MFA with given backend (available: duo)"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/jwt/config":{"description":"Configures the JWT authentication backend.","get":{"summary":"Configures the JWT authentication backend.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configures the JWT authentication backend.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"bound_issuer":{"type":"string","description":"The value against which to match the 'iss' claim in a JWT. Optional."},"jwt_validation_pubkeys":{"type":"array","description":"A list of PEM-encoded public keys to use to authenticate signatures locally. Cannot be used with \"oidc_discovery_url\".","items":{"type":"string"}},"oidc_discovery_ca_pem":{"type":"string","description":"The CA certificate or chain of certificates, in PEM format, to use to validate conections to the OIDC Discovery URL. If not set, system certificates are used."},"oidc_discovery_url":{"type":"string","description":"OIDC Discovery URL, without any .well-known component (base path). Cannot be used with \"jwt_validation_pubkeys\"."}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/jwt/login":{"description":"Authenticates to Vault using a JWT (or OIDC) token.","x-vault-unauthenticated":true,"post":{"summary":"Authenticates to Vault using a JWT (or OIDC) token.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"jwt":{"type":"string","description":"The signed JWT to validate."},"role":{"type":"string","description":"The role to log in against.","format":"lowercase"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/jwt/role":{"description":"Lists all the roles registered with the backend.","get":{"summary":"Lists all the roles registered with the backend.","tags":["auth"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/auth/jwt/role/{name}":{"description":"Register an role with the backend.","parameters":[{"name":"name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"x-vault-create-supported":true,"get":{"summary":"Register an role with the backend.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Register an role with the backend.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"bound_audiences":{"type":"array","description":"Comma-separated list of 'aud' claims that are valid for login; any match is sufficient","items":{"type":"string"}},"bound_cidrs":{"type":"array","description":"Comma-separated list of IP CIDRS that are allowed to authenticate against this role","items":{"type":"string"}},"bound_subject":{"type":"string","description":"The 'sub' claim that is valid for login. Optional."},"groups_claim":{"type":"string","description":"The claim to use for the Identity group alias names"},"groups_claim_delimiter_pattern":{"type":"string","description":"A pattern of delimiters used to allow the groups_claim to live outside of the top-level JWT structure. For instance, a \"groups_claim\" of \"meta/user.name/groups\" with this field set to \"//\" will expect nested structures named \"meta\", \"user.name\", and \"groups\". If this field was set to \"/./\" the groups information would expect to be via nested structures of \"meta\", \"user\", \"name\", and \"groups\"."},"max_ttl":{"type":"number","description":"Duration in seconds after which the issued token should not be allowed to be renewed. Defaults to 0, in which case the value will fall back to the system/mount defaults.","format":"seconds"},"num_uses":{"type":"number","description":"Number of times issued tokens can be used"},"period":{"type":"number","description":"If set, indicates that the token generated using this role should never expire. The token should be renewed within the duration specified by this value. At each renewal, the token's TTL will be set to the value of this parameter.","format":"seconds"},"policies":{"type":"array","description":"List of policies on the role.","items":{"type":"string"}},"ttl":{"type":"number","description":"Duration in seconds after which the issued token should expire. Defaults to 0, in which case the value will fall back to the system/mount defaults.","format":"seconds"},"user_claim":{"type":"string","description":"The claim to use for the Identity entity alias name"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Register an role with the backend.","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/kubernetes/config":{"description":"Configures the JWT Public Key and Kubernetes API information.","x-vault-create-supported":true,"get":{"summary":"Configures the JWT Public Key and Kubernetes API information.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configures the JWT Public Key and Kubernetes API information.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"kubernetes_ca_cert":{"type":"string","description":"PEM encoded CA cert for use by the TLS client used to talk with the API."},"kubernetes_host":{"type":"string","description":"Host must be a host string, a host:port pair, or a URL to the base of the Kubernetes API server."},"pem_keys":{"type":"array","description":"Optional list of PEM-formated public keys or certificates used to verify the signatures of kubernetes service account JWTs. If a certificate is given, its public key will be extracted. Not every installation of Kuberentes exposes these keys.","items":{"type":"string"}},"token_reviewer_jwt":{"type":"string","description":"A service account JWT used to access the TokenReview API to validate other JWTs during login. If not set the JWT used for login will be used to access the API."}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/kubernetes/login":{"description":"Authenticates Kubernetes service accounts with Vault.","x-vault-unauthenticated":true,"post":{"summary":"Authenticates Kubernetes service accounts with Vault.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"jwt":{"type":"string","description":"A signed JWT for authenticating a service account. This field is required."},"role":{"type":"string","description":"Name of the role against which the login is being attempted. This field is required"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/kubernetes/role":{"description":"Lists all the roles registered with the backend.","get":{"summary":"Lists all the roles registered with the backend.","tags":["auth"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/auth/kubernetes/role/{name}":{"description":"Register an role with the backend.","parameters":[{"name":"name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"x-vault-create-supported":true,"get":{"summary":"Register an role with the backend.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Register an role with the backend.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"bound_cidrs":{"type":"array","description":"Comma separated string or list of CIDR blocks. If set, specifies the blocks of IP addresses which can perform the login operation.","items":{"type":"string"}},"bound_service_account_names":{"type":"array","description":"List of service account names able to access this role. If set to \"*\" all names are allowed, both this and bound_service_account_namespaces can not be \"*\"","items":{"type":"string"}},"bound_service_account_namespaces":{"type":"array","description":"List of namespaces allowed to access this role. If set to \"*\" all namespaces are allowed, both this and bound_service_account_names can not be set to \"*\"","items":{"type":"string"}},"max_ttl":{"type":"number","description":"Duration in seconds after which the issued token should not be allowed to be renewed. Defaults to 0, in which case the value will fall back to the system/mount defaults.","format":"seconds"},"num_uses":{"type":"number","description":"Number of times issued tokens can be used"},"period":{"type":"number","description":"If set, indicates that the token generated using this role should never expire. The token should be renewed within the duration specified by this value. At each renewal, the token's TTL will be set to the value of this parameter.","format":"seconds"},"policies":{"type":"array","description":"List of policies on the role.","items":{"type":"string"}},"ttl":{"type":"number","description":"Duration in seconds after which the issued token should expire. Defaults to 0, in which case the value will fall back to the system/mount defaults.","format":"seconds"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Register an role with the backend.","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/ldap/config":{"description":"Configure the LDAP server to connect to, along with its options.","get":{"summary":"Configure the LDAP server to connect to, along with its options.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configure the LDAP server to connect to, along with its options.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"binddn":{"type":"string","description":"LDAP DN for searching for the user DN (optional)"},"bindpass":{"type":"string","description":"LDAP password for searching for the user DN (optional)"},"case_sensitive_names":{"type":"boolean","description":"If true, case sensitivity will be used when comparing usernames and groups for matching policies."},"certificate":{"type":"string","description":"CA certificate to use when verifying LDAP server certificate, must be x509 PEM encoded (optional)"},"deny_null_bind":{"type":"boolean","description":"Denies an unauthenticated LDAP bind request if the user's password is empty; defaults to true"},"discoverdn":{"type":"boolean","description":"Use anonymous bind to discover the bind DN of a user (optional)"},"groupattr":{"type":"string","description":"LDAP attribute to follow on objects returned by \u003cgroupfilter\u003e in order to enumerate user group membership. Examples: \"cn\" or \"memberOf\", etc. Default: cn"},"groupdn":{"type":"string","description":"LDAP search base to use for group membership search (eg: ou=Groups,dc=example,dc=org)"},"groupfilter":{"type":"string","description":"Go template for querying group membership of user (optional) The template can access the following context variables: UserDN, Username Example: (\u0026(objectClass=group)(member:1.2.840.113556.1.4.1941:={{.UserDN}})) Default: (|(memberUid={{.Username}})(member={{.UserDN}})(uniqueMember={{.UserDN}}))"},"insecure_tls":{"type":"boolean","description":"Skip LDAP server SSL Certificate verification - VERY insecure (optional)"},"starttls":{"type":"boolean","description":"Issue a StartTLS command after establishing unencrypted connection (optional)"},"tls_max_version":{"type":"string","description":"Maximum TLS version to use. Accepted values are 'tls10', 'tls11' or 'tls12'. Defaults to 'tls12'"},"tls_min_version":{"type":"string","description":"Minimum TLS version to use. Accepted values are 'tls10', 'tls11' or 'tls12'. Defaults to 'tls12'"},"upndomain":{"type":"string","description":"Enables userPrincipalDomain login with [username]@UPNDomain (optional)"},"url":{"type":"string","description":"LDAP URL to connect to (default: ldap://127.0.0.1). Multiple URLs can be specified by concatenating them with commas; they will be tried in-order."},"use_token_groups":{"type":"boolean","description":"If true, use the Active Directory tokenGroups constructed attribute of the user to find the group memberships. This will find all security groups including nested ones."},"userattr":{"type":"string","description":"Attribute used for users (default: cn)"},"userdn":{"type":"string","description":"LDAP domain to use for users (eg: ou=People,dc=example,dc=org)"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/ldap/duo/access":{"description":"Configure the access keys and host for Duo API connections.","x-vault-sudo":true,"post":{"summary":"Configure the access keys and host for Duo API connections.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"host":{"type":"string","description":"Duo api host"},"ikey":{"type":"string","description":"Duo integration key"},"skey":{"type":"string","description":"Duo secret key"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/ldap/duo/config":{"description":"Configure Duo second factor behavior.","x-vault-sudo":true,"get":{"summary":"Configure Duo second factor behavior.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configure Duo second factor behavior.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"push_info":{"type":"string","description":"A string of URL-encoded key/value pairs that provides additional context about the authentication attempt in the Duo Mobile app"},"user_agent":{"type":"string","description":"User agent to connect to Duo (default \"\")"},"username_format":{"type":"string","description":"Format string given auth method username as argument to create Duo username (default '%s')"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/ldap/groups":{"description":"Manage users allowed to authenticate.","get":{"summary":"Manage users allowed to authenticate.","tags":["auth"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/auth/ldap/groups/{name}":{"description":"Manage users allowed to authenticate.","parameters":[{"name":"name","description":"Name of the LDAP group.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Manage users allowed to authenticate.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Manage users allowed to authenticate.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"policies":{"type":"array","description":"Comma-separated list of policies associated to the group.","items":{"type":"string"}}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Manage users allowed to authenticate.","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/ldap/login/{username}":{"description":"Log in with a username and password.","parameters":[{"name":"username","description":"DN (distinguished name) to be used for login.","in":"path","schema":{"type":"string"},"required":true}],"x-vault-unauthenticated":true,"post":{"summary":"Log in with a username and password.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","description":"Multi-factor auth method to use (optional)"},"passcode":{"type":"string","description":"One time passcode (optional)"},"password":{"type":"string","description":"Password for this user."}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/ldap/mfa_config":{"description":"Configure multi factor backend.","x-vault-sudo":true,"get":{"summary":"Configure multi factor backend.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configure multi factor backend.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"type":{"type":"string","description":"Enables MFA with given backend (available: duo)"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/ldap/users":{"description":"Manage additional groups for users allowed to authenticate.","get":{"summary":"Manage additional groups for users allowed to authenticate.","tags":["auth"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/auth/ldap/users/{name}":{"description":"Manage additional groups for users allowed to authenticate.","parameters":[{"name":"name","description":"Name of the LDAP user.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Manage additional groups for users allowed to authenticate.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Manage additional groups for users allowed to authenticate.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"groups":{"type":"string","description":"Comma-separated list of additional groups associated with the user."},"policies":{"type":"array","description":"Comma-separated list of policies associated with the user.","items":{"type":"string"}}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Manage additional groups for users allowed to authenticate.","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/okta/config":{"description":"This endpoint allows you to configure the Okta and its configuration options. The Okta organization are the characters at the front of the URL for Okta. Example https://ORG.okta.com","x-vault-create-supported":true,"get":{"summary":"This endpoint allows you to configure the Okta and its\nconfiguration options.\n\nThe Okta organization are the characters at the front of the URL for Okta.\nExample https://ORG.okta.com","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"This endpoint allows you to configure the Okta and its\nconfiguration options.\n\nThe Okta organization are the characters at the front of the URL for Okta.\nExample https://ORG.okta.com","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"api_token":{"type":"string","description":"Okta API key."},"base_url":{"type":"string","description":"The base domain to use for the Okta API. When not specified in the configuration, \"okta.com\" is used."},"bypass_okta_mfa":{"type":"boolean","description":"When set true, requests by Okta for a MFA check will be bypassed. This also disallows certain status checks on the account, such as whether the password is expired."},"max_ttl":{"type":"number","description":"Maximum duration after which authentication will be expired","format":"seconds"},"org_name":{"type":"string","description":"Name of the organization to be used in the Okta API."},"organization":{"type":"string","description":"(DEPRECATED) Okta organization to authenticate against. Use org_name instead."},"production":{"type":"boolean","description":"(DEPRECATED) Use base_url."},"token":{"type":"string","description":"(DEPRECATED) Okta admin API token. Use api_token instead."},"ttl":{"type":"number","description":"Duration after which authentication will be expired","format":"seconds"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/okta/duo/access":{"description":"Configure the access keys and host for Duo API connections.","x-vault-sudo":true,"post":{"summary":"Configure the access keys and host for Duo API connections.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"host":{"type":"string","description":"Duo api host"},"ikey":{"type":"string","description":"Duo integration key"},"skey":{"type":"string","description":"Duo secret key"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/okta/duo/config":{"description":"Configure Duo second factor behavior.","x-vault-sudo":true,"get":{"summary":"Configure Duo second factor behavior.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configure Duo second factor behavior.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"push_info":{"type":"string","description":"A string of URL-encoded key/value pairs that provides additional context about the authentication attempt in the Duo Mobile app"},"user_agent":{"type":"string","description":"User agent to connect to Duo (default \"\")"},"username_format":{"type":"string","description":"Format string given auth method username as argument to create Duo username (default '%s')"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/okta/groups":{"description":"Manage users allowed to authenticate.","get":{"summary":"Manage users allowed to authenticate.","tags":["auth"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/auth/okta/groups/{name}":{"description":"Manage users allowed to authenticate.","parameters":[{"name":"name","description":"Name of the Okta group.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Manage users allowed to authenticate.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Manage users allowed to authenticate.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"policies":{"type":"array","description":"Comma-separated list of policies associated to the group.","items":{"type":"string"}}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Manage users allowed to authenticate.","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/okta/login/{username}":{"description":"Log in with a username and password.","parameters":[{"name":"username","description":"Username to be used for login.","in":"path","schema":{"type":"string"},"required":true}],"x-vault-unauthenticated":true,"post":{"summary":"Log in with a username and password.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","description":"Multi-factor auth method to use (optional)"},"passcode":{"type":"string","description":"One time passcode (optional)"},"password":{"type":"string","description":"Password for this user."}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/okta/mfa_config":{"description":"Configure multi factor backend.","x-vault-sudo":true,"get":{"summary":"Configure multi factor backend.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configure multi factor backend.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"type":{"type":"string","description":"Enables MFA with given backend (available: duo)"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/okta/users":{"description":"Manage additional groups for users allowed to authenticate.","get":{"summary":"Manage additional groups for users allowed to authenticate.","tags":["auth"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/auth/okta/users/{name}":{"description":"Manage additional groups for users allowed to authenticate.","parameters":[{"name":"name","description":"Name of the user.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Manage additional groups for users allowed to authenticate.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Manage additional groups for users allowed to authenticate.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"groups":{"type":"array","description":"List of groups associated with the user.","items":{"type":"string"}},"policies":{"type":"array","description":"List of policies associated with the user.","items":{"type":"string"}}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Manage additional groups for users allowed to authenticate.","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/radius/config":{"description":"Configure the RADIUS server to connect to, along with its options.","x-vault-create-supported":true,"get":{"summary":"Configure the RADIUS server to connect to, along with its options.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configure the RADIUS server to connect to, along with its options.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"dial_timeout":{"type":"number","description":"Number of seconds before connect times out (default: 10)","format":"seconds"},"host":{"type":"string","description":"RADIUS server host"},"nas_identifier":{"type":"string","description":"RADIUS NAS Identifier field (optional)"},"nas_port":{"type":"number","description":"RADIUS NAS port field (default: 10)"},"port":{"type":"number","description":"RADIUS server port (default: 1812)"},"read_timeout":{"type":"number","description":"Number of seconds before response times out (default: 10)","format":"seconds"},"secret":{"type":"string","description":"Secret shared with the RADIUS server"},"unregistered_user_policies":{"type":"string","description":"Comma-separated list of policies to grant upon successful RADIUS authentication of an unregisted user (default: emtpy)"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/radius/duo/access":{"description":"Configure the access keys and host for Duo API connections.","x-vault-sudo":true,"post":{"summary":"Configure the access keys and host for Duo API connections.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"host":{"type":"string","description":"Duo api host"},"ikey":{"type":"string","description":"Duo integration key"},"skey":{"type":"string","description":"Duo secret key"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/radius/duo/config":{"description":"Configure Duo second factor behavior.","x-vault-sudo":true,"get":{"summary":"Configure Duo second factor behavior.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configure Duo second factor behavior.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"push_info":{"type":"string","description":"A string of URL-encoded key/value pairs that provides additional context about the authentication attempt in the Duo Mobile app"},"user_agent":{"type":"string","description":"User agent to connect to Duo (default \"\")"},"username_format":{"type":"string","description":"Format string given auth method username as argument to create Duo username (default '%s')"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/radius/login":{"description":"Log in with a username and password.","x-vault-unauthenticated":true,"post":{"summary":"Log in with a username and password.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","description":"Multi-factor auth method to use (optional)"},"passcode":{"type":"string","description":"One time passcode (optional)"},"password":{"type":"string","description":"Password for this user."},"urlusername":{"type":"string","description":"Username to be used for login. (URL parameter)"},"username":{"type":"string","description":"Username to be used for login. (POST request body)"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/radius/login/{urlusername}":{"description":"Log in with a username and password.","parameters":[{"name":"urlusername","description":"Username to be used for login. (URL parameter)","in":"path","schema":{"type":"string"},"required":true}],"x-vault-unauthenticated":true,"post":{"summary":"Log in with a username and password.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","description":"Multi-factor auth method to use (optional)"},"passcode":{"type":"string","description":"One time passcode (optional)"},"password":{"type":"string","description":"Password for this user."},"username":{"type":"string","description":"Username to be used for login. (POST request body)"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/radius/mfa_config":{"description":"Configure multi factor backend.","x-vault-sudo":true,"get":{"summary":"Configure multi factor backend.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configure multi factor backend.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"type":{"type":"string","description":"Enables MFA with given backend (available: duo)"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/radius/users":{"description":"Manage users allowed to authenticate.","get":{"summary":"Manage users allowed to authenticate.","tags":["auth"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/auth/radius/users/{name}":{"description":"Manage users allowed to authenticate.","parameters":[{"name":"name","description":"Name of the RADIUS user.","in":"path","schema":{"type":"string"},"required":true}],"x-vault-create-supported":true,"get":{"summary":"Manage users allowed to authenticate.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Manage users allowed to authenticate.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"policies":{"type":"array","description":"Comma-separated list of policies associated to the user.","items":{"type":"string"}}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Manage users allowed to authenticate.","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/token/accessors/":{"description":"List token accessors, which can then be be used to iterate and discover their properties or revoke them. Because this can be used to cause a denial of service, this endpoint requires 'sudo' capability in addition to 'list'.","x-vault-sudo":true,"get":{"summary":"List token accessors, which can then be\nbe used to iterate and discover their properties\nor revoke them. Because this can be used to\ncause a denial of service, this endpoint\nrequires 'sudo' capability in addition to\n'list'.","tags":["auth"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/auth/token/create":{"description":"The token create path is used to create new tokens.","post":{"summary":"The token create path is used to create new tokens.","tags":["auth"],"responses":{"200":{"description":"OK"}}}},"/auth/token/create-orphan":{"description":"The token create path is used to create new orphan tokens.","post":{"summary":"The token create path is used to create new orphan tokens.","tags":["auth"],"responses":{"200":{"description":"OK"}}}},"/auth/token/create/{role_name}":{"description":"This token create path is used to create new tokens adhering to the given role.","parameters":[{"name":"role_name","description":"Name of the role","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"This token create path is used to create new tokens adhering to the given role.","tags":["auth"],"responses":{"200":{"description":"OK"}}}},"/auth/token/lookup":{"description":"This endpoint will lookup a token and its properties.","get":{"summary":"This endpoint will lookup a token and its properties.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"This endpoint will lookup a token and its properties.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"token":{"type":"string","description":"Token to lookup (POST request body)"},"urltoken":{"type":"string","description":"DEPRECATED: Token to lookup (URL parameter). Do not use this; use the POST version instead with the token in the body."}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/token/lookup-accessor":{"description":"This endpoint will lookup a token associated with the given accessor and its properties. Response will not contain the token ID.","post":{"summary":"This endpoint will lookup a token associated with the given accessor and its properties. Response will not contain the token ID.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"accessor":{"type":"string","description":"Accessor of the token to look up (request body)"},"urlaccessor":{"type":"string","description":"DEPRECATED: Accessor of the token to lookup (URL parameter). Do not use this; use the POST version instead with the accessor in the body."}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/token/lookup-accessor/{urlaccessor}":{"description":"This endpoint will lookup a token associated with the given accessor and its properties. Response will not contain the token ID.","parameters":[{"name":"urlaccessor","description":"DEPRECATED: Accessor of the token to lookup (URL parameter). Do not use this; use the POST version instead with the accessor in the body.","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"This endpoint will lookup a token associated with the given accessor and its properties. Response will not contain the token ID.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"accessor":{"type":"string","description":"Accessor of the token to look up (request body)"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/token/lookup-self":{"description":"This endpoint will lookup a token and its properties.","get":{"summary":"This endpoint will lookup a token and its properties.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"This endpoint will lookup a token and its properties.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"token":{"type":"string","description":"Token to look up (unused, does not need to be set)"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/token/lookup/{urltoken}":{"description":"This endpoint will lookup a token and its properties.","parameters":[{"name":"urltoken","description":"DEPRECATED: Token to lookup (URL parameter). Do not use this; use the POST version instead with the token in the body.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"This endpoint will lookup a token and its properties.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"This endpoint will lookup a token and its properties.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"token":{"type":"string","description":"Token to lookup (POST request body)"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/token/renew":{"description":"This endpoint will renew the given token and prevent expiration.","post":{"summary":"This endpoint will renew the given token and prevent expiration.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"increment":{"type":"number","description":"The desired increment in seconds to the token expiration","format":"seconds"},"token":{"type":"string","description":"Token to renew (request body)"},"urltoken":{"type":"string","description":"DEPRECATED: Token to renew (URL parameter). Do not use this; use the POST version instead with the token in the body."}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/token/renew-self":{"description":"This endpoint will renew the token used to call it and prevent expiration.","post":{"summary":"This endpoint will renew the token used to call it and prevent expiration.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"increment":{"type":"number","description":"The desired increment in seconds to the token expiration","format":"seconds"},"token":{"type":"string","description":"Token to renew (unused, does not need to be set)"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/token/renew/{urltoken}":{"description":"This endpoint will renew the given token and prevent expiration.","parameters":[{"name":"urltoken","description":"DEPRECATED: Token to renew (URL parameter). Do not use this; use the POST version instead with the token in the body.","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"This endpoint will renew the given token and prevent expiration.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"increment":{"type":"number","description":"The desired increment in seconds to the token expiration","format":"seconds"},"token":{"type":"string","description":"Token to renew (request body)"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/token/revoke":{"description":"This endpoint will delete the given token and all of its child tokens.","post":{"summary":"This endpoint will delete the given token and all of its child tokens.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"token":{"type":"string","description":"Token to revoke (request body)"},"urltoken":{"type":"string","description":"DEPRECATED: Token to revoke (URL parameter). Do not use this; use the POST version instead with the token in the body."}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/token/revoke-accessor":{"description":"This endpoint will delete the token associated with the accessor and all of its child tokens.","post":{"summary":"This endpoint will delete the token associated with the accessor and all of its child tokens.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"accessor":{"type":"string","description":"Accessor of the token (request body)"},"urlaccessor":{"type":"string","description":"DEPRECATED: Accessor of the token to revoke (URL parameter). Do not use this; use the POST version instead with the accessor in the body."}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/token/revoke-accessor/{urlaccessor}":{"description":"This endpoint will delete the token associated with the accessor and all of its child tokens.","parameters":[{"name":"urlaccessor","description":"DEPRECATED: Accessor of the token to revoke (URL parameter). Do not use this; use the POST version instead with the accessor in the body.","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"This endpoint will delete the token associated with the accessor and all of its child tokens.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"accessor":{"type":"string","description":"Accessor of the token (request body)"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/token/revoke-orphan":{"description":"This endpoint will delete the token and orphan its child tokens.","post":{"summary":"This endpoint will delete the token and orphan its child tokens.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"token":{"type":"string","description":"Token to revoke (request body)"},"urltoken":{"type":"string","description":"DEPRECATED: Token to revoke (URL parameter). Do not use this; use the POST version instead with the token in the body."}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/token/revoke-orphan/{urltoken}":{"description":"This endpoint will delete the token and orphan its child tokens.","parameters":[{"name":"urltoken","description":"DEPRECATED: Token to revoke (URL parameter). Do not use this; use the POST version instead with the token in the body.","in":"path","schema":{"type":"string"},"required":true}],"x-vault-sudo":true,"post":{"summary":"This endpoint will delete the token and orphan its child tokens.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"token":{"type":"string","description":"Token to revoke (request body)"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/token/revoke-self":{"description":"This endpoint will delete the token used to call it and all of its child tokens.","post":{"summary":"This endpoint will delete the token used to call it and all of its child tokens.","tags":["auth"],"responses":{"200":{"description":"OK"}}}},"/auth/token/revoke/{urltoken}":{"description":"This endpoint will delete the given token and all of its child tokens.","parameters":[{"name":"urltoken","description":"DEPRECATED: Token to revoke (URL parameter). Do not use this; use the POST version instead with the token in the body.","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"This endpoint will delete the given token and all of its child tokens.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"token":{"type":"string","description":"Token to revoke (request body)"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/token/roles":{"description":"This endpoint lists configured roles.","get":{"summary":"This endpoint lists configured roles.","tags":["auth"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/auth/token/roles/{role_name}":{"parameters":[{"name":"role_name","description":"Name of the role","in":"path","schema":{"type":"string"},"required":true}],"x-vault-create-supported":true,"get":{"tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"allowed_policies":{"type":"array","description":"If set, tokens can be created with any subset of the policies in this list, rather than the normal semantics of tokens being a subset of the calling token's policies. The parameter is a comma-delimited string of policy names.","items":{"type":"string"}},"bound_cidrs":{"type":"array","description":"Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.","items":{"type":"string"}},"disallowed_policies":{"type":"array","description":"If set, successful token creation via this role will require that no policies in the given list are requested. The parameter is a comma-delimited string of policy names.","items":{"type":"string"}},"explicit_max_ttl":{"type":"number","description":"If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.","format":"seconds"},"orphan":{"type":"boolean","description":"If true, tokens created via this role will be orphan tokens (have no parent)"},"path_suffix":{"type":"string","description":"If set, tokens created via this role will contain the given suffix as a part of their path. This can be used to assist use of the 'revoke-prefix' endpoint later on. The given suffix must match the regular expression.\\w[\\w-.]+\\w"},"period":{"type":"number","description":"If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").","format":"seconds"},"renewable":{"type":"boolean","description":"Tokens created via this role will be renewable or not according to this value. Defaults to \"true\"."},"token_type":{"type":"string","description":"The type of token to generate, service or batch"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/token/tidy":{"description":"This endpoint performs cleanup tasks that can be run if certain error conditions have occurred.","post":{"summary":"This endpoint performs cleanup tasks that can be run if certain error\nconditions have occurred.","tags":["auth"],"responses":{"200":{"description":"OK"}}}},"/auth/userpass/duo/access":{"description":"Configure the access keys and host for Duo API connections.","x-vault-sudo":true,"post":{"summary":"Configure the access keys and host for Duo API connections.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"host":{"type":"string","description":"Duo api host"},"ikey":{"type":"string","description":"Duo integration key"},"skey":{"type":"string","description":"Duo secret key"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/userpass/duo/config":{"description":"Configure Duo second factor behavior.","x-vault-sudo":true,"get":{"summary":"Configure Duo second factor behavior.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configure Duo second factor behavior.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"push_info":{"type":"string","description":"A string of URL-encoded key/value pairs that provides additional context about the authentication attempt in the Duo Mobile app"},"user_agent":{"type":"string","description":"User agent to connect to Duo (default \"\")"},"username_format":{"type":"string","description":"Format string given auth method username as argument to create Duo username (default '%s')"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/userpass/login/{username}":{"description":"Log in with a username and password.","parameters":[{"name":"username","description":"Username of the user.","in":"path","schema":{"type":"string"},"required":true}],"x-vault-unauthenticated":true,"post":{"summary":"Log in with a username and password.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"method":{"type":"string","description":"Multi-factor auth method to use (optional)"},"passcode":{"type":"string","description":"One time passcode (optional)"},"password":{"type":"string","description":"Password for this user."}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/userpass/mfa_config":{"description":"Configure multi factor backend.","x-vault-sudo":true,"get":{"summary":"Configure multi factor backend.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configure multi factor backend.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"type":{"type":"string","description":"Enables MFA with given backend (available: duo)"}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/userpass/users":{"description":"Manage users allowed to authenticate.","get":{"summary":"Manage users allowed to authenticate.","tags":["auth"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/auth/userpass/users/{username}":{"description":"Manage users allowed to authenticate.","parameters":[{"name":"username","description":"Username for this user.","in":"path","schema":{"type":"string"},"required":true}],"x-vault-create-supported":true,"get":{"summary":"Manage users allowed to authenticate.","tags":["auth"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Manage users allowed to authenticate.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"bound_cidrs":{"type":"array","description":"Comma separated string or list of CIDR blocks. If set, specifies the blocks of IP addresses which can perform the login operation.","items":{"type":"string"}},"max_ttl":{"type":"number","description":"Maximum duration after which authentication will be expired","format":"seconds"},"password":{"type":"string","description":"Password for this user."},"policies":{"type":"array","description":"Comma-separated list of policies","items":{"type":"string"}},"ttl":{"type":"number","description":"Duration after which authentication will be expired","format":"seconds"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Manage users allowed to authenticate.","tags":["auth"],"responses":{"204":{"description":"empty body"}}}},"/auth/userpass/users/{username}/password":{"description":"Reset user's password.","parameters":[{"name":"username","description":"Username for this user.","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Reset user's password.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"password":{"type":"string","description":"Password for this user."}}}}}},"responses":{"200":{"description":"OK"}}}},"/auth/userpass/users/{username}/policies":{"description":"Update the policies associated with the username.","parameters":[{"name":"username","description":"Username for this user.","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Update the policies associated with the username.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"policies":{"type":"array","description":"Comma-separated list of policies","items":{"type":"string"}}}}}}},"responses":{"200":{"description":"OK"}}}},"/aws/config/lease":{"description":"Configure the default lease information for generated credentials.","get":{"summary":"Configure the default lease information for generated credentials.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configure the default lease information for generated credentials.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"lease":{"type":"string","description":"Default lease for roles."},"lease_max":{"type":"string","description":"Maximum time a credential is valid for."}}}}}},"responses":{"200":{"description":"OK"}}}},"/aws/config/root":{"description":"Configure the root credentials that are used to manage IAM.","post":{"summary":"Configure the root credentials that are used to manage IAM.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"access_key":{"type":"string","description":"Access key with permission to create new keys."},"iam_endpoint":{"type":"string","description":"Endpoint to custom IAM server URL"},"max_retries":{"type":"number","description":"Maximum number of retries for recoverable exceptions of AWS APIs"},"region":{"type":"string","description":"Region for API calls."},"secret_key":{"type":"string","description":"Secret key with permission to create new keys."},"sts_endpoint":{"type":"string","description":"Endpoint to custom STS server URL"}}}}}},"responses":{"200":{"description":"OK"}}}},"/aws/config/rotate-root":{"description":"Request to rotate the AWS credentials used by Vault","post":{"summary":"Request to rotate the AWS credentials used by Vault","tags":["secrets"],"responses":{"200":{"description":"OK"}}}},"/aws/creds":{"description":"Generate AWS credentials from a specific Vault role.","get":{"summary":"Generate AWS credentials from a specific Vault role.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Generate AWS credentials from a specific Vault role.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"Name of the role"},"role_arn":{"type":"string","description":"ARN of role to assume when credential_type is assumed_role"},"ttl":{"type":"number","description":"Lifetime of the returned credentials in seconds","format":"seconds"}}}}}},"responses":{"200":{"description":"OK"}}}},"/aws/roles":{"description":"List the existing roles in this backend","get":{"summary":"List the existing roles in this backend","tags":["secrets"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/aws/roles/{name}":{"description":"Read, write and reference IAM policies that access keys can be made for.","parameters":[{"name":"name","description":"Name of the policy","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Read, write and reference IAM policies that access keys can be made for.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Read, write and reference IAM policies that access keys can be made for.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"arn":{"type":"string","description":"Deprecated; use role_arns or policy_arns instead. ARN Reference to a managed policy or IAM role to assume"},"credential_type":{"type":"string","description":"Type of credential to retrieve. Must be one of assumed_role, iam_user, or federation_token"},"default_sts_ttl":{"type":"number","description":"Default TTL for assumed_role and federation_token credential types when no TTL is explicitly requested with the credentials","format":"seconds"},"max_sts_ttl":{"type":"number","description":"Max allowed TTL for assumed_role and federation_token credential types","format":"seconds"},"policy":{"type":"string","description":"Deprecated; use policy_document instead. IAM policy document"},"policy_arns":{"type":"array","description":"ARNs of AWS policies to attach to IAM users. Only valid when credential_type is iam_user","items":{"type":"string"}},"policy_document":{"type":"string","description":"JSON-encoded IAM policy document. Behavior varies by credential_type. When credential_type is iam_user, then it will attach the contents of the policy_document to the IAM user generated. When credential_type is assumed_role or federation_token, this will be passed in as the Policy parameter to the AssumeRole or GetFederationToken API call, acting as a filter on permissions available."},"role_arns":{"type":"array","description":"ARNs of AWS roles allowed to be assumed. Only valid when credential_type is assumed_role","items":{"type":"string"}}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Read, write and reference IAM policies that access keys can be made for.","tags":["secrets"],"responses":{"204":{"description":"empty body"}}}},"/aws/sts/{name}":{"description":"Generate AWS credentials from a specific Vault role.","parameters":[{"name":"name","description":"Name of the role","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Generate AWS credentials from a specific Vault role.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Generate AWS credentials from a specific Vault role.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"role_arn":{"type":"string","description":"ARN of role to assume when credential_type is assumed_role"},"ttl":{"type":"number","description":"Lifetime of the returned credentials in seconds","format":"seconds"}}}}}},"responses":{"200":{"description":"OK"}}}},"/azure/config":{"description":"Configure the Azure Secret backend.","x-vault-create-supported":true,"get":{"summary":"Configure the Azure Secret backend.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configure the Azure Secret backend.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"client_id":{"type":"string","description":"The OAuth2 client id to connect to Azure. This value can also be provided with the AZURE_CLIENT_ID environment variable."},"client_secret":{"type":"string","description":"The OAuth2 client secret to connect to Azure. This value can also be provided with the AZURE_CLIENT_SECRET environment variable."},"environment":{"type":"string","description":"The Azure environment name. If not provided, AzurePublicCloud is used. This value can also be provided with the AZURE_ENVIRONMENT environment variable."},"subscription_id":{"type":"string","description":"The subscription id for the Azure Active Directory. This value can also be provided with the AZURE_SUBSCRIPTION_ID environment variable."},"tenant_id":{"type":"string","description":"The tenant id for the Azure Active Directory. This value can also be provided with the AZURE_TENANT_ID environment variable."}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Configure the Azure Secret backend.","tags":["secrets"],"responses":{"204":{"description":"empty body"}}}},"/azure/creds/{role}":{"description":"Request Service Principal credentials for a given Vault role.","parameters":[{"name":"role","description":"Name of the Vault role","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Request Service Principal credentials for a given Vault role.","tags":["secrets"],"responses":{"200":{"description":"OK"}}}},"/azure/roles":{"description":"List existing roles.","get":{"summary":"List existing roles.","tags":["secrets"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/azure/roles/{name}":{"description":"Manage the Vault roles used to generate Azure credentials.","parameters":[{"name":"name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"x-vault-create-supported":true,"get":{"summary":"Manage the Vault roles used to generate Azure credentials.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Manage the Vault roles used to generate Azure credentials.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"application_object_id":{"type":"string","description":"Application Object ID to use for static service principal credentials."},"azure_roles":{"type":"string","description":"JSON list of Azure roles to assign."},"max_ttl":{"type":"number","description":"Maximum time a service principal. If not set or set to 0, will use system default.","format":"seconds"},"ttl":{"type":"number","description":"Default lease for generated credentials. If not set or set to 0, will use system default.","format":"seconds"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Manage the Vault roles used to generate Azure credentials.","tags":["secrets"],"responses":{"204":{"description":"empty body"}}}},"/cassandra/config/connection":{"description":"Configure the connection information to talk to Cassandra.","get":{"summary":"Configure the connection information to talk to Cassandra.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configure the connection information to talk to Cassandra.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"connect_timeout":{"type":"number","description":"The connection timeout to use. Defaults to 5.","format":"seconds"},"hosts":{"type":"string","description":"Comma-separated list of hosts"},"insecure_tls":{"type":"boolean","description":"Whether to use TLS but skip verification; has no effect if a CA certificate is provided"},"password":{"type":"string","description":"The password to use for connecting to the cluster"},"pem_bundle":{"type":"string","description":"PEM-format, concatenated unencrypted secret key and certificate, with optional CA certificate"},"pem_json":{"type":"string","description":"JSON containing a PEM-format, unencrypted secret key and certificate, with optional CA certificate. The JSON output of a certificate issued with the PKI backend can be directly passed into this parameter. If both this and \"pem_bundle\" are specified, this will take precedence."},"protocol_version":{"type":"number","description":"The protocol version to use. Defaults to 2."},"tls":{"type":"boolean","description":"Whether to use TLS. If pem_bundle or pem_json are set, this is automatically set to true"},"tls_min_version":{"type":"string","description":"Minimum TLS version to use. Accepted values are 'tls10', 'tls11' or 'tls12'. Defaults to 'tls12'"},"username":{"type":"string","description":"The username to use for connecting to the cluster"}}}}}},"responses":{"200":{"description":"OK"}}}},"/cassandra/creds/{name}":{"description":"Request database credentials for a certain role.","parameters":[{"name":"name","description":"Name of the role","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Request database credentials for a certain role.","tags":["secrets"],"responses":{"200":{"description":"OK"}}}},"/cassandra/roles/{name}":{"description":"Manage the roles that can be created with this backend.","parameters":[{"name":"name","description":"Name of the role","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Manage the roles that can be created with this backend.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Manage the roles that can be created with this backend.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"consistency":{"type":"string","description":"The consistency level for the operations; defaults to Quorum."},"creation_cql":{"type":"string","description":"CQL to create a user and optionally grant authorization. If not supplied, a default that creates non-superuser accounts with the built-in password authenticator will be used; no authorization grants will be configured. Separate statements by semicolons; use @file to load from a file. Valid template values are '{{username}}' and '{{password}}' -- the single quotes are important!"},"lease":{"type":"string","description":"The lease length; defaults to 4 hours"},"rollback_cql":{"type":"string","description":"CQL to roll back an account operation. This will be used if there is an error during execution of a statement passed in via the \"creation_cql\" parameter parameter. The default simply drops the user, which should generally be sufficient. Separate statements by semicolons; use @file to load from a file. Valid template values are '{{username}}' and '{{password}}' -- the single quotes are important!"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Manage the roles that can be created with this backend.","tags":["secrets"],"responses":{"204":{"description":"empty body"}}}},"/consul/config/access":{"get":{"tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"address":{"type":"string","description":"Consul server address"},"scheme":{"type":"string","description":"URI scheme for the Consul address"},"token":{"type":"string","description":"Token for API calls"}}}}}},"responses":{"200":{"description":"OK"}}}},"/consul/creds/{role}":{"parameters":[{"name":"role","description":"Name of the role","in":"path","schema":{"type":"string"},"required":true}],"get":{"tags":["secrets"],"responses":{"200":{"description":"OK"}}}},"/consul/roles":{"get":{"tags":["secrets"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/consul/roles/{name}":{"parameters":[{"name":"name","description":"Name of the role","in":"path","schema":{"type":"string"},"required":true}],"get":{"tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"lease":{"type":"number","description":"DEPRECATED: Use ttl.","format":"seconds"},"local":{"type":"boolean","description":"Indicates that the token should not be replicated globally and instead be local to the current datacenter. Available in Consul 1.4 and above."},"max_ttl":{"type":"number","description":"Max TTL for the Consul token created from the role.","format":"seconds"},"policies":{"type":"array","description":"List of policies to attach to the token. Required for Consul 1.4 or above.","items":{"type":"string"}},"policy":{"type":"string","description":"Policy document, base64 encoded. Required for 'client' tokens. Required for Consul pre-1.4."},"token_type":{"type":"string","description":"Which type of token to create: 'client' or 'management'. If a 'management' token, the \"policy\" parameter is not required. Defaults to 'client'."},"ttl":{"type":"number","description":"TTL for the Consul token created from the role.","format":"seconds"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"tags":["secrets"],"responses":{"204":{"description":"empty body"}}}},"/cubbyhole/{path}":{"description":"Pass-through secret storage to a token-specific cubbyhole in the storage backend, allowing you to read/write arbitrary data into secret storage.","parameters":[{"name":"path","description":"Specifies the path of the secret.","in":"path","schema":{"type":"string"},"required":true}],"x-vault-create-supported":true,"get":{"summary":"Retrieve the secret at the specified location.","tags":["secrets"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Store a secret at the specified location.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Deletes the secret at the specified location.","tags":["secrets"],"responses":{"204":{"description":"empty body"}}}},"/database/config":{"description":"Configure connection details to a database plugin.","get":{"summary":"Configure connection details to a database plugin.","tags":["secrets"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/database/config/{name}":{"description":"Configure connection details to a database plugin.","parameters":[{"name":"name","description":"Name of this database connection","in":"path","schema":{"type":"string"},"required":true}],"x-vault-create-supported":true,"get":{"summary":"Configure connection details to a database plugin.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configure connection details to a database plugin.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"allowed_roles":{"type":"array","description":"Comma separated string or array of the role names allowed to get creds from this database connection. If empty no roles are allowed. If \"*\" all roles are allowed.","items":{"type":"string"}},"plugin_name":{"type":"string","description":"The name of a builtin or previously registered plugin known to vault. This endpoint will create an instance of that plugin type."},"root_rotation_statements":{"type":"array","description":"Specifies the database statements to be executed to rotate the root user's credentials. See the plugin's API page for more information on support and formatting for this parameter.","items":{"type":"string"}},"verify_connection":{"type":"boolean","description":"If true, the connection details are verified by actually connecting to the database. Defaults to true."}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Configure connection details to a database plugin.","tags":["secrets"],"responses":{"204":{"description":"empty body"}}}},"/database/creds/{name}":{"description":"Request database credentials for a certain role.","parameters":[{"name":"name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Request database credentials for a certain role.","tags":["secrets"],"responses":{"200":{"description":"OK"}}}},"/database/reset/{name}":{"description":"Resets a database plugin.","parameters":[{"name":"name","description":"Name of this database connection","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Resets a database plugin.","tags":["secrets"],"responses":{"200":{"description":"OK"}}}},"/database/roles":{"description":"Manage the roles that can be created with this backend.","get":{"summary":"Manage the roles that can be created with this backend.","tags":["secrets"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/database/roles/{name}":{"description":"Manage the roles that can be created with this backend.","parameters":[{"name":"name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"x-vault-create-supported":true,"get":{"summary":"Manage the roles that can be created with this backend.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Manage the roles that can be created with this backend.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"creation_statements":{"type":"array","description":"Specifies the database statements executed to create and configure a user. See the plugin's API page for more information on support and formatting for this parameter.","items":{"type":"string"}},"db_name":{"type":"string","description":"Name of the database this role acts on."},"default_ttl":{"type":"number","description":"Default ttl for role.","format":"seconds"},"max_ttl":{"type":"number","description":"Maximum time a credential is valid for","format":"seconds"},"renew_statements":{"type":"array","description":"Specifies the database statements to be executed to renew a user. Not every plugin type will support this functionality. See the plugin's API page for more information on support and formatting for this parameter.","items":{"type":"string"}},"revocation_statements":{"type":"array","description":"Specifies the database statements to be executed to revoke a user. See the plugin's API page for more information on support and formatting for this parameter.","items":{"type":"string"}},"rollback_statements":{"type":"array","description":"Specifies the database statements to be executed rollback a create operation in the event of an error. Not every plugin type will support this functionality. See the plugin's API page for more information on support and formatting for this parameter.","items":{"type":"string"}}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Manage the roles that can be created with this backend.","tags":["secrets"],"responses":{"204":{"description":"empty body"}}}},"/database/rotate-root/{name}":{"description":"Request database credentials for a certain role.","parameters":[{"name":"name","description":"Name of this database connection","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Request database credentials for a certain role.","tags":["secrets"],"responses":{"200":{"description":"OK"}}}},"/gcp/config":{"description":"Configure the GCP backend.","get":{"summary":"Configure the GCP backend.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configure the GCP backend.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"credentials":{"type":"string","description":"GCP IAM service account credentials JSON with permissions to create new service accounts and set IAM policies"},"max_ttl":{"type":"number","description":"Maximum time a service account key is valid for. If \u003c= 0, will use system default.","format":"seconds"},"ttl":{"type":"number","description":"Default lease for generated keys. If \u003c= 0, will use system default.","format":"seconds"}}}}}},"responses":{"200":{"description":"OK"}}}},"/gcp/key/{roleset}":{"description":"Generate an service account private key under a specific role set.","parameters":[{"name":"roleset","description":"Required. Name of the role set.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Generate an service account private key under a specific role set.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Generate an service account private key under a specific role set.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"key_algorithm":{"type":"string","description":"Private key algorithm for service account key - defaults to KEY_ALG_RSA_2048\""},"key_type":{"type":"string","description":"Private key type for service account key - defaults to TYPE_GOOGLE_CREDENTIALS_FILE\""}}}}}},"responses":{"200":{"description":"OK"}}}},"/gcp/roleset":{"description":"List existing rolesets.","get":{"summary":"List existing rolesets.","tags":["secrets"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/gcp/roleset/{name}":{"description":"Read/write sets of IAM roles to be given to generated credentials for specified GCP resources.","parameters":[{"name":"name","description":"Required. Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"x-vault-create-supported":true,"get":{"summary":"Read/write sets of IAM roles to be given to generated credentials for specified GCP resources.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Read/write sets of IAM roles to be given to generated credentials for specified GCP resources.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"bindings":{"type":"string","description":"Bindings configuration string."},"project":{"type":"string","description":"Name of the GCP project that this roleset's service account will belong to."},"secret_type":{"type":"string","description":"Type of secret generated for this role set. Defaults to 'access_token'"},"token_scopes":{"type":"array","description":"List of OAuth scopes to assign to credentials generated under this role set","items":{"type":"string"}}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Read/write sets of IAM roles to be given to generated credentials for specified GCP resources.","tags":["secrets"],"responses":{"204":{"description":"empty body"}}}},"/gcp/roleset/{name}/rotate":{"description":"Rotate the service account (and key for access token roleset) created and used to generate secrets","parameters":[{"name":"name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Rotate the service account (and key for access token roleset) created and used to generate secrets","tags":["secrets"],"responses":{"200":{"description":"OK"}}}},"/gcp/roleset/{name}/rotate-key":{"description":"Rotate only the service account key used by an access token roleset to generate tokens","parameters":[{"name":"name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Rotate only the service account key used by an access token roleset to generate tokens","tags":["secrets"],"responses":{"200":{"description":"OK"}}}},"/gcp/rolesets":{"description":"List existing rolesets.","get":{"summary":"List existing rolesets.","tags":["secrets"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/gcp/token/{roleset}":{"description":"Generate an OAuth2 access token under a specific role set.","parameters":[{"name":"roleset","description":"Required. Name of the role set.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Generate an OAuth2 access token under a specific role set.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Generate an OAuth2 access token under a specific role set.","tags":["secrets"],"responses":{"200":{"description":"OK"}}}},"/identity/alias":{"description":"Create a new alias.","post":{"summary":"Create a new alias.","tags":["identity"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"canonical_id":{"type":"string","description":"Entity ID to which this alias belongs to"},"entity_id":{"type":"string","description":"Entity ID to which this alias belongs to. This field is deprecated in favor of 'canonical_id'."},"id":{"type":"string","description":"ID of the alias"},"mount_accessor":{"type":"string","description":"Mount accessor to which this alias belongs to"},"name":{"type":"string","description":"Name of the alias"}}}}}},"responses":{"200":{"description":"OK"}}}},"/identity/alias/id":{"description":"List all the alias IDs.","get":{"summary":"List all the alias IDs.","tags":["identity"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/identity/alias/id/{id}":{"description":"Update, read or delete an alias ID.","parameters":[{"name":"id","description":"ID of the alias","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Update, read or delete an alias ID.","tags":["identity"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Update, read or delete an alias ID.","tags":["identity"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"canonical_id":{"type":"string","description":"Entity ID to which this alias should be tied to"},"entity_id":{"type":"string","description":"Entity ID to which this alias should be tied to. This field is deprecated in favor of 'canonical_id'."},"mount_accessor":{"type":"string","description":"Mount accessor to which this alias belongs to"},"name":{"type":"string","description":"Name of the alias"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Update, read or delete an alias ID.","tags":["identity"],"responses":{"204":{"description":"empty body"}}}},"/identity/entity":{"description":"Create a new entity","post":{"summary":"Create a new entity","tags":["identity"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"disabled":{"type":"boolean","description":"If set true, tokens tied to this identity will not be able to be used (but will not be revoked)."},"id":{"type":"string","description":"ID of the entity. If set, updates the corresponding existing entity."},"metadata":{"type":"object","description":"Metadata to be associated with the entity. In CLI, this parameter can be repeated multiple times, and it all gets merged together. For example: vault \u003ccommand\u003e \u003cpath\u003e metadata=key1=value1 metadata=key2=value2","format":"kvpairs"},"name":{"type":"string","description":"Name of the entity"},"policies":{"type":"array","description":"Policies to be tied to the entity.","items":{"type":"string"}}}}}}},"responses":{"200":{"description":"OK"}}}},"/identity/entity-alias":{"description":"Create a new alias.","post":{"summary":"Create a new alias.","tags":["identity"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"canonical_id":{"type":"string","description":"Entity ID to which this alias belongs"},"entity_id":{"type":"string","description":"Entity ID to which this alias belongs. This field is deprecated, use canonical_id."},"id":{"type":"string","description":"ID of the entity alias. If set, updates the corresponding entity alias."},"mount_accessor":{"type":"string","description":"Mount accessor to which this alias belongs to; unused for a modify"},"name":{"type":"string","description":"Name of the alias; unused for a modify"}}}}}},"responses":{"200":{"description":"OK"}}}},"/identity/entity-alias/id":{"description":"List all the alias IDs.","get":{"summary":"List all the alias IDs.","tags":["identity"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/identity/entity-alias/id/{id}":{"description":"Update, read or delete an alias ID.","parameters":[{"name":"id","description":"ID of the alias","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Update, read or delete an alias ID.","tags":["identity"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Update, read or delete an alias ID.","tags":["identity"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"canonical_id":{"type":"string","description":"Entity ID to which this alias should be tied to"},"entity_id":{"type":"string","description":"Entity ID to which this alias belongs to. This field is deprecated, use canonical_id."},"mount_accessor":{"type":"string","description":"(Unused)"},"name":{"type":"string","description":"(Unused)"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Update, read or delete an alias ID.","tags":["identity"],"responses":{"204":{"description":"empty body"}}}},"/identity/entity/id":{"description":"List all the entity IDs","get":{"summary":"List all the entity IDs","tags":["identity"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/identity/entity/id/{id}":{"description":"Update, read or delete an entity using entity ID","parameters":[{"name":"id","description":"ID of the entity. If set, updates the corresponding existing entity.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Update, read or delete an entity using entity ID","tags":["identity"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Update, read or delete an entity using entity ID","tags":["identity"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"disabled":{"type":"boolean","description":"If set true, tokens tied to this identity will not be able to be used (but will not be revoked)."},"metadata":{"type":"object","description":"Metadata to be associated with the entity. In CLI, this parameter can be repeated multiple times, and it all gets merged together. For example: vault \u003ccommand\u003e \u003cpath\u003e metadata=key1=value1 metadata=key2=value2","format":"kvpairs"},"name":{"type":"string","description":"Name of the entity"},"policies":{"type":"array","description":"Policies to be tied to the entity.","items":{"type":"string"}}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Update, read or delete an entity using entity ID","tags":["identity"],"responses":{"204":{"description":"empty body"}}}},"/identity/entity/merge":{"description":"Merge two or more entities together","post":{"summary":"Merge two or more entities together","tags":["identity"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"force":{"type":"boolean","description":"Setting this will follow the 'mine' strategy for merging MFA secrets. If there are secrets of the same type both in entities that are merged from and in entity into which all others are getting merged, secrets in the destination will be unaltered. If not set, this API will throw an error containing all the conflicts."},"from_entity_ids":{"type":"array","description":"Entity IDs which needs to get merged","items":{"type":"string"}},"to_entity_id":{"type":"string","description":"Entity ID into which all the other entities need to get merged"}}}}}},"responses":{"200":{"description":"OK"}}}},"/identity/entity/name":{"description":"List all the entity names","get":{"summary":"List all the entity names","tags":["identity"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/identity/entity/name/{name}":{"description":"Update, read or delete an entity using entity name","parameters":[{"name":"name","description":"Name of the entity","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Update, read or delete an entity using entity name","tags":["identity"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Update, read or delete an entity using entity name","tags":["identity"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"disabled":{"type":"boolean","description":"If set true, tokens tied to this identity will not be able to be used (but will not be revoked)."},"id":{"type":"string","description":"ID of the entity. If set, updates the corresponding existing entity."},"metadata":{"type":"object","description":"Metadata to be associated with the entity. In CLI, this parameter can be repeated multiple times, and it all gets merged together. For example: vault \u003ccommand\u003e \u003cpath\u003e metadata=key1=value1 metadata=key2=value2","format":"kvpairs"},"policies":{"type":"array","description":"Policies to be tied to the entity.","items":{"type":"string"}}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Update, read or delete an entity using entity name","tags":["identity"],"responses":{"204":{"description":"empty body"}}}},"/identity/group":{"description":"Create a new group.","post":{"summary":"Create a new group.","tags":["identity"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string","description":"ID of the group. If set, updates the corresponding existing group."},"member_entity_ids":{"type":"array","description":"Entity IDs to be assigned as group members.","items":{"type":"string"}},"member_group_ids":{"type":"array","description":"Group IDs to be assigned as group members.","items":{"type":"string"}},"metadata":{"type":"object","description":"Metadata to be associated with the group. In CLI, this parameter can be repeated multiple times, and it all gets merged together. For example: vault \u003ccommand\u003e \u003cpath\u003e metadata=key1=value1 metadata=key2=value2","format":"kvpairs"},"name":{"type":"string","description":"Name of the group."},"policies":{"type":"array","description":"Policies to be tied to the group.","items":{"type":"string"}},"type":{"type":"string","description":"Type of the group, 'internal' or 'external'. Defaults to 'internal'"}}}}}},"responses":{"200":{"description":"OK"}}}},"/identity/group-alias":{"description":"Creates a new group alias, or updates an existing one.","post":{"summary":"Creates a new group alias, or updates an existing one.","tags":["identity"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"canonical_id":{"type":"string","description":"ID of the group to which this is an alias."},"id":{"type":"string","description":"ID of the group alias."},"mount_accessor":{"type":"string","description":"Mount accessor to which this alias belongs to."},"name":{"type":"string","description":"Alias of the group."}}}}}},"responses":{"200":{"description":"OK"}}}},"/identity/group-alias/id":{"description":"List all the group alias IDs.","get":{"summary":"List all the group alias IDs.","tags":["identity"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/identity/group-alias/id/{id}":{"parameters":[{"name":"id","description":"ID of the group alias.","in":"path","schema":{"type":"string"},"required":true}],"get":{"tags":["identity"],"responses":{"200":{"description":"OK"}}},"post":{"tags":["identity"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"canonical_id":{"type":"string","description":"ID of the group to which this is an alias."},"mount_accessor":{"type":"string","description":"Mount accessor to which this alias belongs to."},"name":{"type":"string","description":"Alias of the group."}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"tags":["identity"],"responses":{"204":{"description":"empty body"}}}},"/identity/group/id":{"description":"List all the group IDs.","get":{"summary":"List all the group IDs.","tags":["identity"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/identity/group/id/{id}":{"description":"Update or delete an existing group using its ID.","parameters":[{"name":"id","description":"ID of the group. If set, updates the corresponding existing group.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Update or delete an existing group using its ID.","tags":["identity"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Update or delete an existing group using its ID.","tags":["identity"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"member_entity_ids":{"type":"array","description":"Entity IDs to be assigned as group members.","items":{"type":"string"}},"member_group_ids":{"type":"array","description":"Group IDs to be assigned as group members.","items":{"type":"string"}},"metadata":{"type":"object","description":"Metadata to be associated with the group. In CLI, this parameter can be repeated multiple times, and it all gets merged together. For example: vault \u003ccommand\u003e \u003cpath\u003e metadata=key1=value1 metadata=key2=value2","format":"kvpairs"},"name":{"type":"string","description":"Name of the group."},"policies":{"type":"array","description":"Policies to be tied to the group.","items":{"type":"string"}},"type":{"type":"string","description":"Type of the group, 'internal' or 'external'. Defaults to 'internal'"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Update or delete an existing group using its ID.","tags":["identity"],"responses":{"204":{"description":"empty body"}}}},"/identity/group/name":{"get":{"tags":["identity"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/identity/group/name/{name}":{"parameters":[{"name":"name","description":"Name of the group.","in":"path","schema":{"type":"string"},"required":true}],"get":{"tags":["identity"],"responses":{"200":{"description":"OK"}}},"post":{"tags":["identity"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string","description":"ID of the group. If set, updates the corresponding existing group."},"member_entity_ids":{"type":"array","description":"Entity IDs to be assigned as group members.","items":{"type":"string"}},"member_group_ids":{"type":"array","description":"Group IDs to be assigned as group members.","items":{"type":"string"}},"metadata":{"type":"object","description":"Metadata to be associated with the group. In CLI, this parameter can be repeated multiple times, and it all gets merged together. For example: vault \u003ccommand\u003e \u003cpath\u003e metadata=key1=value1 metadata=key2=value2","format":"kvpairs"},"policies":{"type":"array","description":"Policies to be tied to the group.","items":{"type":"string"}},"type":{"type":"string","description":"Type of the group, 'internal' or 'external'. Defaults to 'internal'"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"tags":["identity"],"responses":{"204":{"description":"empty body"}}}},"/identity/lookup/entity":{"description":"Query entities based on various properties.","post":{"summary":"Query entities based on various properties.","tags":["identity"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"alias_id":{"type":"string","description":"ID of the alias."},"alias_mount_accessor":{"type":"string","description":"Accessor of the mount to which the alias belongs to. This should be supplied in conjunction with 'alias_name'."},"alias_name":{"type":"string","description":"Name of the alias. This should be supplied in conjunction with 'alias_mount_accessor'."},"id":{"type":"string","description":"ID of the entity."},"name":{"type":"string","description":"Name of the entity."}}}}}},"responses":{"200":{"description":"OK"}}}},"/identity/lookup/group":{"description":"Query groups based on various properties.","post":{"summary":"Query groups based on various properties.","tags":["identity"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"alias_id":{"type":"string","description":"ID of the alias."},"alias_mount_accessor":{"type":"string","description":"Accessor of the mount to which the alias belongs to. This should be supplied in conjunction with 'alias_name'."},"alias_name":{"type":"string","description":"Name of the alias. This should be supplied in conjunction with 'alias_mount_accessor'."},"id":{"type":"string","description":"ID of the group."},"name":{"type":"string","description":"Name of the group."}}}}}},"responses":{"200":{"description":"OK"}}}},"/identity/persona":{"description":"Create a new alias.","post":{"summary":"Create a new alias.","tags":["identity"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"entity_id":{"type":"string","description":"Entity ID to which this persona belongs to"},"id":{"type":"string","description":"ID of the persona"},"metadata":{"type":"object","description":"Metadata to be associated with the persona. In CLI, this parameter can be repeated multiple times, and it all gets merged together. For example: vault \u003ccommand\u003e \u003cpath\u003e metadata=key1=value1 metadata=key2=value2","format":"kvpairs"},"mount_accessor":{"type":"string","description":"Mount accessor to which this persona belongs to"},"name":{"type":"string","description":"Name of the persona"}}}}}},"responses":{"200":{"description":"OK"}}}},"/identity/persona/id":{"description":"List all the alias IDs.","get":{"summary":"List all the alias IDs.","tags":["identity"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/identity/persona/id/{id}":{"description":"Update, read or delete an alias ID.","parameters":[{"name":"id","description":"ID of the persona","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Update, read or delete an alias ID.","tags":["identity"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Update, read or delete an alias ID.","tags":["identity"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"entity_id":{"type":"string","description":"Entity ID to which this persona should be tied to"},"metadata":{"type":"object","description":"Metadata to be associated with the persona. In CLI, this parameter can be repeated multiple times, and it all gets merged together. For example: vault \u003ccommand\u003e \u003cpath\u003e metadata=key1=value1 metadata=key2=value2","format":"kvpairs"},"mount_accessor":{"type":"string","description":"Mount accessor to which this persona belongs to"},"name":{"type":"string","description":"Name of the persona"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Update, read or delete an alias ID.","tags":["identity"],"responses":{"204":{"description":"empty body"}}}},"/kv/{path}":{"description":"Pass-through secret storage to the storage backend, allowing you to read/write arbitrary data into secret storage.","parameters":[{"name":"path","description":"Location of the secret.","in":"path","schema":{"type":"string"},"required":true}],"x-vault-create-supported":true,"get":{"summary":"Pass-through secret storage to the storage backend, allowing you to\nread/write arbitrary data into secret storage.","tags":["secrets"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Pass-through secret storage to the storage backend, allowing you to\nread/write arbitrary data into secret storage.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Pass-through secret storage to the storage backend, allowing you to\nread/write arbitrary data into secret storage.","tags":["secrets"],"responses":{"204":{"description":"empty body"}}}},"/mongodb/config/connection":{"description":"Configure the connection string to talk to MongoDB.","get":{"summary":"Configure the connection string to talk to MongoDB.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configure the connection string to talk to MongoDB.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"uri":{"type":"string","description":"MongoDB standard connection string (URI)"},"verify_connection":{"type":"boolean","description":"If set, uri is verified by actually connecting to the database"}}}}}},"responses":{"200":{"description":"OK"}}}},"/mongodb/config/lease":{"description":"Configure the default lease TTL settings for credentials generated by the mongodb backend.","get":{"summary":"Configure the default lease TTL settings for credentials\ngenerated by the mongodb backend.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configure the default lease TTL settings for credentials\ngenerated by the mongodb backend.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"max_ttl":{"type":"number","description":"Maximum time a set of credentials can be valid for.","format":"seconds"},"ttl":{"type":"number","description":"Default ttl for credentials.","format":"seconds"}}}}}},"responses":{"200":{"description":"OK"}}}},"/mongodb/creds/{name}":{"description":"Request MongoDB database credentials for a particular role.","parameters":[{"name":"name","description":"Name of the role to generate credentials for.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Request MongoDB database credentials for a particular role.","tags":["secrets"],"responses":{"200":{"description":"OK"}}}},"/mongodb/roles":{"description":"Manage the roles used to generate MongoDB credentials.","get":{"summary":"Manage the roles used to generate MongoDB credentials.","tags":["secrets"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/mongodb/roles/{name}":{"description":"Manage the roles used to generate MongoDB credentials.","parameters":[{"name":"name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Manage the roles used to generate MongoDB credentials.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Manage the roles used to generate MongoDB credentials.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"db":{"type":"string","description":"Name of the authentication database for users generated for this role."},"roles":{"type":"string","description":"MongoDB roles to assign to the users generated for this role."}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Manage the roles used to generate MongoDB credentials.","tags":["secrets"],"responses":{"204":{"description":"empty body"}}}},"/mssql/config/connection":{"description":"Configure the connection string to talk to Microsoft Sql Server.","get":{"summary":"Configure the connection string to talk to Microsoft Sql Server.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configure the connection string to talk to Microsoft Sql Server.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"connection_string":{"type":"string","description":"DB connection parameters"},"max_open_connections":{"type":"number","description":"Maximum number of open connections to database"},"verify_connection":{"type":"boolean","description":"If set, connection_string is verified by actually connecting to the database"}}}}}},"responses":{"200":{"description":"OK"}}}},"/mssql/config/lease":{"description":"Configure the default lease ttl for generated credentials.","get":{"summary":"Configure the default lease ttl for generated credentials.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configure the default lease ttl for generated credentials.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"max_ttl":{"type":"string","description":"Maximum time a credential is valid for."},"ttl":{"type":"string","description":"Default ttl for roles."},"ttl_max":{"type":"string","description":"Deprecated: use \"max_ttl\" instead. Maximum time a credential is valid for."}}}}}},"responses":{"200":{"description":"OK"}}}},"/mssql/creds/{name}":{"description":"Request database credentials for a certain role.","parameters":[{"name":"name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Request database credentials for a certain role.","tags":["secrets"],"responses":{"200":{"description":"OK"}}}},"/mssql/roles":{"description":"Manage the roles that can be created with this backend.","get":{"summary":"Manage the roles that can be created with this backend.","tags":["secrets"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/mssql/roles/{name}":{"description":"Manage the roles that can be created with this backend.","parameters":[{"name":"name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Manage the roles that can be created with this backend.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Manage the roles that can be created with this backend.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"sql":{"type":"string","description":"SQL string to create a role. See help for more info."}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Manage the roles that can be created with this backend.","tags":["secrets"],"responses":{"204":{"description":"empty body"}}}},"/mysql/config/connection":{"description":"Configure the connection string to talk to MySQL.","get":{"summary":"Configure the connection string to talk to MySQL.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configure the connection string to talk to MySQL.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"connection_url":{"type":"string","description":"DB connection string"},"max_idle_connections":{"type":"number","description":"Maximum number of idle connections to the database; a zero uses the value of max_open_connections and a negative value disables idle connections. If larger than max_open_connections it will be reduced to the same size."},"max_open_connections":{"type":"number","description":"Maximum number of open connections to database"},"value":{"type":"string","description":"DB connection string. Use 'connection_url' instead. This name is deprecated."},"verify_connection":{"type":"boolean","description":"If set, connection_url is verified by actually connecting to the database"}}}}}},"responses":{"200":{"description":"OK"}}}},"/mysql/config/lease":{"description":"Configure the default lease information for generated credentials.","get":{"summary":"Configure the default lease information for generated credentials.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configure the default lease information for generated credentials.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"lease":{"type":"string","description":"Default lease for roles."},"lease_max":{"type":"string","description":"Maximum time a credential is valid for."}}}}}},"responses":{"200":{"description":"OK"}}}},"/mysql/creds/{name}":{"description":"Request database credentials for a certain role.","parameters":[{"name":"name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Request database credentials for a certain role.","tags":["secrets"],"responses":{"200":{"description":"OK"}}}},"/mysql/roles":{"description":"Manage the roles that can be created with this backend.","get":{"summary":"Manage the roles that can be created with this backend.","tags":["secrets"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/mysql/roles/{name}":{"description":"Manage the roles that can be created with this backend.","parameters":[{"name":"name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Manage the roles that can be created with this backend.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Manage the roles that can be created with this backend.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"displayname_length":{"type":"number","description":"number of characters to truncate the displayname portion of generated mysql usernames to (default 4)"},"revocation_sql":{"type":"string","description":"SQL string to revoke a user. See help for more info."},"rolename_length":{"type":"number","description":"number of characters to truncate the rolename portion of generated mysql usernames to (default 4)"},"sql":{"type":"string","description":"SQL string to create a user. See help for more info."},"username_length":{"type":"number","description":"number of characters to truncate generated mysql usernames to (default 16)"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Manage the roles that can be created with this backend.","tags":["secrets"],"responses":{"204":{"description":"empty body"}}}},"/nomad/config/access":{"x-vault-create-supported":true,"get":{"tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"address":{"type":"string","description":"Nomad server address"},"max_token_name_length":{"type":"number","description":"Max length for name of generated Nomad tokens"},"token":{"type":"string","description":"Token for API calls"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"tags":["secrets"],"responses":{"204":{"description":"empty body"}}}},"/nomad/config/lease":{"description":"Configure the lease parameters for generated tokens","get":{"summary":"Configure the lease parameters for generated tokens","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configure the lease parameters for generated tokens","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"max_ttl":{"type":"number","description":"Duration after which the issued token should not be allowed to be renewed","format":"seconds"},"ttl":{"type":"number","description":"Duration before which the issued token needs renewal","format":"seconds"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Configure the lease parameters for generated tokens","tags":["secrets"],"responses":{"204":{"description":"empty body"}}}},"/nomad/creds/{name}":{"parameters":[{"name":"name","description":"Name of the role","in":"path","schema":{"type":"string"},"required":true}],"get":{"tags":["secrets"],"responses":{"200":{"description":"OK"}}}},"/nomad/role":{"get":{"tags":["secrets"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/nomad/role/{name}":{"parameters":[{"name":"name","description":"Name of the role","in":"path","schema":{"type":"string"},"required":true}],"x-vault-create-supported":true,"get":{"tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"global":{"type":"boolean","description":"Boolean value describing if the token should be global or not. Defaults to false."},"policies":{"type":"array","description":"Comma-separated string or list of policies as previously created in Nomad. Required for 'client' token.","items":{"type":"string"}},"type":{"type":"string","description":"Which type of token to create: 'client' or 'management'. If a 'management' token, the \"policies\" parameter is not required. Defaults to 'client'."}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"tags":["secrets"],"responses":{"204":{"description":"empty body"}}}},"/pki/ca":{"description":"Fetch a CA, CRL, CA Chain, or non-revoked certificate.","x-vault-unauthenticated":true,"get":{"summary":"Fetch a CA, CRL, CA Chain, or non-revoked certificate.","tags":["secrets"],"responses":{"200":{"description":"OK"}}}},"/pki/ca/pem":{"description":"Fetch a CA, CRL, CA Chain, or non-revoked certificate.","x-vault-unauthenticated":true,"get":{"summary":"Fetch a CA, CRL, CA Chain, or non-revoked certificate.","tags":["secrets"],"responses":{"200":{"description":"OK"}}}},"/pki/ca_chain":{"description":"Fetch a CA, CRL, CA Chain, or non-revoked certificate.","x-vault-unauthenticated":true,"get":{"summary":"Fetch a CA, CRL, CA Chain, or non-revoked certificate.","tags":["secrets"],"responses":{"200":{"description":"OK"}}}},"/pki/cert/ca_chain":{"description":"Fetch a CA, CRL, CA Chain, or non-revoked certificate.","x-vault-unauthenticated":true,"get":{"summary":"Fetch a CA, CRL, CA Chain, or non-revoked certificate.","tags":["secrets"],"responses":{"200":{"description":"OK"}}}},"/pki/cert/crl":{"description":"Fetch a CA, CRL, CA Chain, or non-revoked certificate.","x-vault-unauthenticated":true,"get":{"summary":"Fetch a CA, CRL, CA Chain, or non-revoked certificate.","tags":["secrets"],"responses":{"200":{"description":"OK"}}}},"/pki/cert/{serial}":{"description":"Fetch a CA, CRL, CA Chain, or non-revoked certificate.","parameters":[{"name":"serial","description":"Certificate serial number, in colon- or hyphen-separated octal","in":"path","schema":{"type":"string"},"required":true}],"x-vault-unauthenticated":true,"get":{"summary":"Fetch a CA, CRL, CA Chain, or non-revoked certificate.","tags":["secrets"],"responses":{"200":{"description":"OK"}}}},"/pki/certs":{"description":"Fetch a CA, CRL, CA Chain, or non-revoked certificate.","get":{"summary":"Fetch a CA, CRL, CA Chain, or non-revoked certificate.","tags":["secrets"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/pki/config/ca":{"description":"Set the CA certificate and private key used for generated credentials.","post":{"summary":"Set the CA certificate and private key used for generated credentials.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"pem_bundle":{"type":"string","description":"PEM-format, concatenated unencrypted secret key and certificate."}}}}}},"responses":{"200":{"description":"OK"}}}},"/pki/config/crl":{"description":"Configure the CRL expiration.","get":{"summary":"Configure the CRL expiration.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configure the CRL expiration.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"disable":{"type":"boolean","description":"If set to true, disables generating the CRL entirely."},"expiry":{"type":"string","description":"The amount of time the generated CRL should be valid; defaults to 72 hours"}}}}}},"responses":{"200":{"description":"OK"}}}},"/pki/config/urls":{"description":"Set the URLs for the issuing CA, CRL distribution points, and OCSP servers.","get":{"summary":"Set the URLs for the issuing CA, CRL distribution points, and OCSP servers.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Set the URLs for the issuing CA, CRL distribution points, and OCSP servers.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"crl_distribution_points":{"type":"array","description":"Comma-separated list of URLs to be used for the CRL distribution points attribute","items":{"type":"string"}},"issuing_certificates":{"type":"array","description":"Comma-separated list of URLs to be used for the issuing certificate attribute","items":{"type":"string"}},"ocsp_servers":{"type":"array","description":"Comma-separated list of URLs to be used for the OCSP servers attribute","items":{"type":"string"}}}}}}},"responses":{"200":{"description":"OK"}}}},"/pki/crl":{"description":"Fetch a CA, CRL, CA Chain, or non-revoked certificate.","x-vault-unauthenticated":true,"get":{"summary":"Fetch a CA, CRL, CA Chain, or non-revoked certificate.","tags":["secrets"],"responses":{"200":{"description":"OK"}}}},"/pki/crl/pem":{"description":"Fetch a CA, CRL, CA Chain, or non-revoked certificate.","x-vault-unauthenticated":true,"get":{"summary":"Fetch a CA, CRL, CA Chain, or non-revoked certificate.","tags":["secrets"],"responses":{"200":{"description":"OK"}}}},"/pki/crl/rotate":{"description":"Force a rebuild of the CRL.","get":{"summary":"Force a rebuild of the CRL.","tags":["secrets"],"responses":{"200":{"description":"OK"}}}},"/pki/intermediate/generate/{exported}":{"description":"Generate a new CSR and private key used for signing.","parameters":[{"name":"exported","description":"Must be \"internal\" or \"exported\". If set to \"exported\", the generated private key will be returned. This is your *only* chance to retrieve the private key!","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Generate a new CSR and private key used for signing.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"add_basic_constraints":{"type":"boolean","description":"Whether to add a Basic Constraints extension with CA: true. Only needed as a workaround in some compatibility scenarios with Active Directory Certificate Services."},"alt_names":{"type":"string","description":"The requested Subject Alternative Names, if any, in a comma-delimited list. May contain both DNS names and email addresses."},"common_name":{"type":"string","description":"The requested common name; if you want more than one, specify the alternative names in the alt_names map. If not specified when signing, the common name will be taken from the CSR; other names must still be specified in alt_names or ip_sans."},"country":{"type":"array","description":"If set, Country will be set to this value.","items":{"type":"string"}},"exclude_cn_from_sans":{"type":"boolean","description":"If true, the Common Name will not be included in DNS or Email Subject Alternate Names. Defaults to false (CN is included)."},"format":{"type":"string","description":"Format for returned data. Can be \"pem\", \"der\", or \"pem_bundle\". If \"pem_bundle\" any private key and issuing cert will be appended to the certificate pem. Defaults to \"pem\"."},"ip_sans":{"type":"array","description":"The requested IP SANs, if any, in a comma-delimited list","items":{"type":"string"}},"key_bits":{"type":"number","description":"The number of bits to use. You will almost certainly want to change this if you adjust the key_type."},"key_type":{"type":"string","description":"The type of key to use; defaults to RSA. \"rsa\" and \"ec\" are the only valid values."},"locality":{"type":"array","description":"If set, Locality will be set to this value.","items":{"type":"string"}},"organization":{"type":"array","description":"If set, O (Organization) will be set to this value.","items":{"type":"string"}},"other_sans":{"type":"array","description":"Requested other SANs, in an array with the format \u003coid\u003e;UTF8:\u003cutf8 string value\u003e for each entry.","items":{"type":"string"}},"ou":{"type":"array","description":"If set, OU (OrganizationalUnit) will be set to this value.","items":{"type":"string"}},"postal_code":{"type":"array","description":"If set, Postal Code will be set to this value.","items":{"type":"string"}},"private_key_format":{"type":"string","description":"Format for the returned private key. Generally the default will be controlled by the \"format\" parameter as either base64-encoded DER or PEM-encoded DER. However, this can be set to \"pkcs8\" to have the returned private key contain base64-encoded pkcs8 or PEM-encoded pkcs8 instead. Defaults to \"der\"."},"province":{"type":"array","description":"If set, Province will be set to this value.","items":{"type":"string"}},"serial_number":{"type":"string","description":"The requested serial number, if any. If you want more than one, specify alternative names in the alt_names map using OID 2.5.4.5."},"street_address":{"type":"array","description":"If set, Street Address will be set to this value.","items":{"type":"string"}},"ttl":{"type":"number","description":"The requested Time To Live for the certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be larger than the mount max TTL. Note: this only has an effect when generating a CA cert or signing a CA cert, not when generating a CSR for an intermediate CA.","format":"seconds"},"uri_sans":{"type":"array","description":"The requested URI SANs, if any, in a comma-delimited list.","items":{"type":"string"}}}}}}},"responses":{"200":{"description":"OK"}}}},"/pki/intermediate/set-signed":{"description":"Provide the signed intermediate CA cert.","post":{"summary":"Provide the signed intermediate CA cert.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"certificate":{"type":"string","description":"PEM-format certificate. This must be a CA certificate with a public key matching the previously-generated key from the generation endpoint."}}}}}},"responses":{"200":{"description":"OK"}}}},"/pki/issue/{role}":{"description":"Request a certificate using a certain role with the provided details.","parameters":[{"name":"role","description":"The desired role with configuration for this request","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Request a certificate using a certain role with the provided details.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"alt_names":{"type":"string","description":"The requested Subject Alternative Names, if any, in a comma-delimited list. If email protection is enabled for the role, this may contain email addresses."},"common_name":{"type":"string","description":"The requested common name; if you want more than one, specify the alternative names in the alt_names map. If email protection is enabled in the role, this may be an email address."},"exclude_cn_from_sans":{"type":"boolean","description":"If true, the Common Name will not be included in DNS or Email Subject Alternate Names. Defaults to false (CN is included)."},"format":{"type":"string","description":"Format for returned data. Can be \"pem\", \"der\", or \"pem_bundle\". If \"pem_bundle\" any private key and issuing cert will be appended to the certificate pem. Defaults to \"pem\"."},"ip_sans":{"type":"array","description":"The requested IP SANs, if any, in a comma-delimited list","items":{"type":"string"}},"other_sans":{"type":"array","description":"Requested other SANs, in an array with the format \u003coid\u003e;UTF8:\u003cutf8 string value\u003e for each entry.","items":{"type":"string"}},"private_key_format":{"type":"string","description":"Format for the returned private key. Generally the default will be controlled by the \"format\" parameter as either base64-encoded DER or PEM-encoded DER. However, this can be set to \"pkcs8\" to have the returned private key contain base64-encoded pkcs8 or PEM-encoded pkcs8 instead. Defaults to \"der\"."},"serial_number":{"type":"string","description":"The requested serial number, if any. If you want more than one, specify alternative names in the alt_names map using OID 2.5.4.5."},"ttl":{"type":"number","description":"The requested Time To Live for the certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be larger than the role max TTL.","format":"seconds"},"uri_sans":{"type":"array","description":"The requested URI SANs, if any, in a comma-delimited list.","items":{"type":"string"}}}}}}},"responses":{"200":{"description":"OK"}}}},"/pki/revoke":{"description":"Revoke a certificate by serial number.","post":{"summary":"Revoke a certificate by serial number.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"serial_number":{"type":"string","description":"Certificate serial number, in colon- or hyphen-separated octal"}}}}}},"responses":{"200":{"description":"OK"}}}},"/pki/roles":{"description":"List the existing roles in this backend","get":{"summary":"List the existing roles in this backend","tags":["secrets"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/pki/roles/{name}":{"description":"Manage the roles that can be created with this backend.","parameters":[{"name":"name","description":"Name of the role","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Manage the roles that can be created with this backend.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Manage the roles that can be created with this backend.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"allow_any_name":{"type":"boolean","description":"If set, clients can request certificates for any CN they like. See the documentation for more information."},"allow_bare_domains":{"type":"boolean","description":"If set, clients can request certificates for the base domains themselves, e.g. \"example.com\". This is a separate option as in some cases this can be considered a security threat."},"allow_glob_domains":{"type":"boolean","description":"If set, domains specified in \"allowed_domains\" can include glob patterns, e.g. \"ftp*.example.com\". See the documentation for more information."},"allow_ip_sans":{"type":"boolean","description":"If set, IP Subject Alternative Names are allowed. Any valid IP is accepted."},"allow_localhost":{"type":"boolean","description":"Whether to allow \"localhost\" as a valid common name in a request"},"allow_subdomains":{"type":"boolean","description":"If set, clients can request certificates for subdomains of the CNs allowed by the other role options, including wildcard subdomains. See the documentation for more information."},"allowed_domains":{"type":"array","description":"If set, clients can request certificates for subdomains directly beneath these domains, including the wildcard subdomains. See the documentation for more information. This parameter accepts a comma-separated string or list of domains.","items":{"type":"string"}},"allowed_other_sans":{"type":"array","description":"If set, an array of allowed other names to put in SANs. These values support globbing and must be in the format \u003coid\u003e;\u003ctype\u003e:\u003cvalue\u003e. Currently only \"utf8\" is a valid type. All values, including globbing values, must use this syntax, with the exception being a single \"*\" which allows any OID and any value (but type must still be utf8).","items":{"type":"string"}},"allowed_serial_numbers":{"type":"array","description":"If set, an array of allowed serial numbers to put in Subject. These values support globbing.","items":{"type":"string"}},"allowed_uri_sans":{"type":"array","description":"If set, an array of allowed URIs to put in the URI Subject Alternative Names. Any valid URI is accepted, these values support globbing.","items":{"type":"string"}},"basic_constraints_valid_for_non_ca":{"type":"boolean","description":"Mark Basic Constraints valid when issuing non-CA certificates."},"client_flag":{"type":"boolean","description":"If set, certificates are flagged for client auth use. Defaults to true."},"code_signing_flag":{"type":"boolean","description":"If set, certificates are flagged for code signing use. Defaults to false."},"country":{"type":"array","description":"If set, Country will be set to this value in certificates issued by this role.","items":{"type":"string"}},"email_protection_flag":{"type":"boolean","description":"If set, certificates are flagged for email protection use. Defaults to false."},"enforce_hostnames":{"type":"boolean","description":"If set, only valid host names are allowed for CN and SANs. Defaults to true."},"ext_key_usage":{"type":"array","description":"A comma-separated string or list of extended key usages. Valid values can be found at https://golang.org/pkg/crypto/x509/#ExtKeyUsage -- simply drop the \"ExtKeyUsage\" part of the name. To remove all key usages from being set, set this value to an empty list.","items":{"type":"string"}},"ext_key_usage_oids":{"type":"array","description":"A comma-separated string or list of extended key usage oids.","items":{"type":"string"}},"generate_lease":{"type":"boolean","description":"If set, certificates issued/signed against this role will have Vault leases attached to them. Defaults to \"false\". Certificates can be added to the CRL by \"vault revoke \u003clease_id\u003e\" when certificates are associated with leases. It can also be done using the \"pki/revoke\" endpoint. However, when lease generation is disabled, invoking \"pki/revoke\" would be the only way to add the certificates to the CRL. When large number of certificates are generated with long lifetimes, it is recommended that lease generation be disabled, as large amount of leases adversely affect the startup time of Vault."},"key_bits":{"type":"number","description":"The number of bits to use. You will almost certainly want to change this if you adjust the key_type."},"key_type":{"type":"string","description":"The type of key to use; defaults to RSA. \"rsa\" and \"ec\" are the only valid values."},"key_usage":{"type":"array","description":"A comma-separated string or list of key usages (not extended key usages). Valid values can be found at https://golang.org/pkg/crypto/x509/#KeyUsage -- simply drop the \"KeyUsage\" part of the name. To remove all key usages from being set, set this value to an empty list.","items":{"type":"string"}},"locality":{"type":"array","description":"If set, Locality will be set to this value in certificates issued by this role.","items":{"type":"string"}},"max_ttl":{"type":"number","description":"The maximum allowed lease duration","format":"seconds"},"no_store":{"type":"boolean","description":"If set, certificates issued/signed against this role will not be stored in the storage backend. This can improve performance when issuing large numbers of certificates. However, certificates issued in this way cannot be enumerated or revoked, so this option is recommended only for certificates that are non-sensitive, or extremely short-lived. This option implies a value of \"false\" for \"generate_lease\"."},"not_before_duration":{"type":"number","description":"The duration before now the cert needs to be created / signed.","format":"seconds"},"organization":{"type":"array","description":"If set, O (Organization) will be set to this value in certificates issued by this role.","items":{"type":"string"}},"ou":{"type":"array","description":"If set, OU (OrganizationalUnit) will be set to this value in certificates issued by this role.","items":{"type":"string"}},"policy_identifiers":{"type":"array","description":"A comma-separated string or list of policy oids.","items":{"type":"string"}},"postal_code":{"type":"array","description":"If set, Postal Code will be set to this value in certificates issued by this role.","items":{"type":"string"}},"province":{"type":"array","description":"If set, Province will be set to this value in certificates issued by this role.","items":{"type":"string"}},"require_cn":{"type":"boolean","description":"If set to false, makes the 'common_name' field optional while generating a certificate."},"server_flag":{"type":"boolean","description":"If set, certificates are flagged for server auth use. Defaults to true."},"street_address":{"type":"array","description":"If set, Street Address will be set to this value in certificates issued by this role.","items":{"type":"string"}},"ttl":{"type":"number","description":"The lease duration if no specific lease duration is requested. The lease duration controls the expiration of certificates issued by this backend. Defaults to the value of max_ttl.","format":"seconds"},"use_csr_common_name":{"type":"boolean","description":"If set, when used with a signing profile, the common name in the CSR will be used. This does *not* include any requested Subject Alternative Names. Defaults to true."},"use_csr_sans":{"type":"boolean","description":"If set, when used with a signing profile, the SANs in the CSR will be used. This does *not* include the Common Name (cn). Defaults to true."}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Manage the roles that can be created with this backend.","tags":["secrets"],"responses":{"204":{"description":"empty body"}}}},"/pki/root":{"description":"Deletes the root CA key to allow a new one to be generated.","x-vault-sudo":true,"delete":{"summary":"Deletes the root CA key to allow a new one to be generated.","tags":["secrets"],"responses":{"204":{"description":"empty body"}}}},"/pki/root/generate/{exported}":{"description":"Generate a new CA certificate and private key used for signing.","parameters":[{"name":"exported","description":"Must be \"internal\" or \"exported\". If set to \"exported\", the generated private key will be returned. This is your *only* chance to retrieve the private key!","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Generate a new CA certificate and private key used for signing.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"alt_names":{"type":"string","description":"The requested Subject Alternative Names, if any, in a comma-delimited list. May contain both DNS names and email addresses."},"common_name":{"type":"string","description":"The requested common name; if you want more than one, specify the alternative names in the alt_names map. If not specified when signing, the common name will be taken from the CSR; other names must still be specified in alt_names or ip_sans."},"country":{"type":"array","description":"If set, Country will be set to this value.","items":{"type":"string"}},"exclude_cn_from_sans":{"type":"boolean","description":"If true, the Common Name will not be included in DNS or Email Subject Alternate Names. Defaults to false (CN is included)."},"format":{"type":"string","description":"Format for returned data. Can be \"pem\", \"der\", or \"pem_bundle\". If \"pem_bundle\" any private key and issuing cert will be appended to the certificate pem. Defaults to \"pem\"."},"ip_sans":{"type":"array","description":"The requested IP SANs, if any, in a comma-delimited list","items":{"type":"string"}},"key_bits":{"type":"number","description":"The number of bits to use. You will almost certainly want to change this if you adjust the key_type."},"key_type":{"type":"string","description":"The type of key to use; defaults to RSA. \"rsa\" and \"ec\" are the only valid values."},"locality":{"type":"array","description":"If set, Locality will be set to this value.","items":{"type":"string"}},"max_path_length":{"type":"number","description":"The maximum allowable path length"},"organization":{"type":"array","description":"If set, O (Organization) will be set to this value.","items":{"type":"string"}},"other_sans":{"type":"array","description":"Requested other SANs, in an array with the format \u003coid\u003e;UTF8:\u003cutf8 string value\u003e for each entry.","items":{"type":"string"}},"ou":{"type":"array","description":"If set, OU (OrganizationalUnit) will be set to this value.","items":{"type":"string"}},"permitted_dns_domains":{"type":"array","description":"Domains for which this certificate is allowed to sign or issue child certificates. If set, all DNS names (subject and alt) on child certs must be exact matches or subsets of the given domains (see https://tools.ietf.org/html/rfc5280#section-4.2.1.10).","items":{"type":"string"}},"postal_code":{"type":"array","description":"If set, Postal Code will be set to this value.","items":{"type":"string"}},"private_key_format":{"type":"string","description":"Format for the returned private key. Generally the default will be controlled by the \"format\" parameter as either base64-encoded DER or PEM-encoded DER. However, this can be set to \"pkcs8\" to have the returned private key contain base64-encoded pkcs8 or PEM-encoded pkcs8 instead. Defaults to \"der\"."},"province":{"type":"array","description":"If set, Province will be set to this value.","items":{"type":"string"}},"serial_number":{"type":"string","description":"The requested serial number, if any. If you want more than one, specify alternative names in the alt_names map using OID 2.5.4.5."},"street_address":{"type":"array","description":"If set, Street Address will be set to this value.","items":{"type":"string"}},"ttl":{"type":"number","description":"The requested Time To Live for the certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be larger than the mount max TTL. Note: this only has an effect when generating a CA cert or signing a CA cert, not when generating a CSR for an intermediate CA.","format":"seconds"},"uri_sans":{"type":"array","description":"The requested URI SANs, if any, in a comma-delimited list.","items":{"type":"string"}}}}}}},"responses":{"200":{"description":"OK"}}}},"/pki/root/sign-intermediate":{"description":"Issue an intermediate CA certificate based on the provided CSR.","post":{"summary":"Issue an intermediate CA certificate based on the provided CSR.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"alt_names":{"type":"string","description":"The requested Subject Alternative Names, if any, in a comma-delimited list. May contain both DNS names and email addresses."},"common_name":{"type":"string","description":"The requested common name; if you want more than one, specify the alternative names in the alt_names map. If not specified when signing, the common name will be taken from the CSR; other names must still be specified in alt_names or ip_sans."},"country":{"type":"array","description":"If set, Country will be set to this value.","items":{"type":"string"}},"csr":{"type":"string","description":"PEM-format CSR to be signed."},"exclude_cn_from_sans":{"type":"boolean","description":"If true, the Common Name will not be included in DNS or Email Subject Alternate Names. Defaults to false (CN is included)."},"format":{"type":"string","description":"Format for returned data. Can be \"pem\", \"der\", or \"pem_bundle\". If \"pem_bundle\" any private key and issuing cert will be appended to the certificate pem. Defaults to \"pem\"."},"ip_sans":{"type":"array","description":"The requested IP SANs, if any, in a comma-delimited list","items":{"type":"string"}},"locality":{"type":"array","description":"If set, Locality will be set to this value.","items":{"type":"string"}},"max_path_length":{"type":"number","description":"The maximum allowable path length"},"organization":{"type":"array","description":"If set, O (Organization) will be set to this value.","items":{"type":"string"}},"other_sans":{"type":"array","description":"Requested other SANs, in an array with the format \u003coid\u003e;UTF8:\u003cutf8 string value\u003e for each entry.","items":{"type":"string"}},"ou":{"type":"array","description":"If set, OU (OrganizationalUnit) will be set to this value.","items":{"type":"string"}},"permitted_dns_domains":{"type":"array","description":"Domains for which this certificate is allowed to sign or issue child certificates. If set, all DNS names (subject and alt) on child certs must be exact matches or subsets of the given domains (see https://tools.ietf.org/html/rfc5280#section-4.2.1.10).","items":{"type":"string"}},"postal_code":{"type":"array","description":"If set, Postal Code will be set to this value.","items":{"type":"string"}},"private_key_format":{"type":"string","description":"Format for the returned private key. Generally the default will be controlled by the \"format\" parameter as either base64-encoded DER or PEM-encoded DER. However, this can be set to \"pkcs8\" to have the returned private key contain base64-encoded pkcs8 or PEM-encoded pkcs8 instead. Defaults to \"der\"."},"province":{"type":"array","description":"If set, Province will be set to this value.","items":{"type":"string"}},"serial_number":{"type":"string","description":"The requested serial number, if any. If you want more than one, specify alternative names in the alt_names map using OID 2.5.4.5."},"street_address":{"type":"array","description":"If set, Street Address will be set to this value.","items":{"type":"string"}},"ttl":{"type":"number","description":"The requested Time To Live for the certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be larger than the mount max TTL. Note: this only has an effect when generating a CA cert or signing a CA cert, not when generating a CSR for an intermediate CA.","format":"seconds"},"uri_sans":{"type":"array","description":"The requested URI SANs, if any, in a comma-delimited list.","items":{"type":"string"}},"use_csr_values":{"type":"boolean","description":"If true, then: 1) Subject information, including names and alternate names, will be preserved from the CSR rather than using values provided in the other parameters to this path; 2) Any key usages requested in the CSR will be added to the basic set of key usages used for CA certs signed by this path; for instance, the non-repudiation flag."}}}}}},"responses":{"200":{"description":"OK"}}}},"/pki/root/sign-self-issued":{"description":"Signs another CA's self-issued certificate.","x-vault-sudo":true,"post":{"summary":"Signs another CA's self-issued certificate.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"certificate":{"type":"string","description":"PEM-format self-issued certificate to be signed."}}}}}},"responses":{"200":{"description":"OK"}}}},"/pki/sign-verbatim":{"description":"Request certificates using a certain role with the provided details.","post":{"summary":"Request certificates using a certain role with the provided details.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"alt_names":{"type":"string","description":"The requested Subject Alternative Names, if any, in a comma-delimited list. If email protection is enabled for the role, this may contain email addresses."},"common_name":{"type":"string","description":"The requested common name; if you want more than one, specify the alternative names in the alt_names map. If email protection is enabled in the role, this may be an email address."},"csr":{"type":"string","description":"PEM-format CSR to be signed. Values will be taken verbatim from the CSR, except for basic constraints."},"exclude_cn_from_sans":{"type":"boolean","description":"If true, the Common Name will not be included in DNS or Email Subject Alternate Names. Defaults to false (CN is included)."},"ext_key_usage":{"type":"array","description":"A comma-separated string or list of extended key usages. Valid values can be found at https://golang.org/pkg/crypto/x509/#ExtKeyUsage -- simply drop the \"ExtKeyUsage\" part of the name. To remove all key usages from being set, set this value to an empty list.","items":{"type":"string"}},"ext_key_usage_oids":{"type":"array","description":"A comma-separated string or list of extended key usage oids.","items":{"type":"string"}},"format":{"type":"string","description":"Format for returned data. Can be \"pem\", \"der\", or \"pem_bundle\". If \"pem_bundle\" any private key and issuing cert will be appended to the certificate pem. Defaults to \"pem\"."},"ip_sans":{"type":"array","description":"The requested IP SANs, if any, in a comma-delimited list","items":{"type":"string"}},"key_usage":{"type":"array","description":"A comma-separated string or list of key usages (not extended key usages). Valid values can be found at https://golang.org/pkg/crypto/x509/#KeyUsage -- simply drop the \"KeyUsage\" part of the name. To remove all key usages from being set, set this value to an empty list.","items":{"type":"string"}},"other_sans":{"type":"array","description":"Requested other SANs, in an array with the format \u003coid\u003e;UTF8:\u003cutf8 string value\u003e for each entry.","items":{"type":"string"}},"private_key_format":{"type":"string","description":"Format for the returned private key. Generally the default will be controlled by the \"format\" parameter as either base64-encoded DER or PEM-encoded DER. However, this can be set to \"pkcs8\" to have the returned private key contain base64-encoded pkcs8 or PEM-encoded pkcs8 instead. Defaults to \"der\"."},"role":{"type":"string","description":"The desired role with configuration for this request"},"serial_number":{"type":"string","description":"The requested serial number, if any. If you want more than one, specify alternative names in the alt_names map using OID 2.5.4.5."},"ttl":{"type":"number","description":"The requested Time To Live for the certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be larger than the role max TTL.","format":"seconds"},"uri_sans":{"type":"array","description":"The requested URI SANs, if any, in a comma-delimited list.","items":{"type":"string"}}}}}}},"responses":{"200":{"description":"OK"}}}},"/pki/sign-verbatim/{role}":{"description":"Request certificates using a certain role with the provided details.","parameters":[{"name":"role","description":"The desired role with configuration for this request","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Request certificates using a certain role with the provided details.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"alt_names":{"type":"string","description":"The requested Subject Alternative Names, if any, in a comma-delimited list. If email protection is enabled for the role, this may contain email addresses."},"common_name":{"type":"string","description":"The requested common name; if you want more than one, specify the alternative names in the alt_names map. If email protection is enabled in the role, this may be an email address."},"csr":{"type":"string","description":"PEM-format CSR to be signed. Values will be taken verbatim from the CSR, except for basic constraints."},"exclude_cn_from_sans":{"type":"boolean","description":"If true, the Common Name will not be included in DNS or Email Subject Alternate Names. Defaults to false (CN is included)."},"ext_key_usage":{"type":"array","description":"A comma-separated string or list of extended key usages. Valid values can be found at https://golang.org/pkg/crypto/x509/#ExtKeyUsage -- simply drop the \"ExtKeyUsage\" part of the name. To remove all key usages from being set, set this value to an empty list.","items":{"type":"string"}},"ext_key_usage_oids":{"type":"array","description":"A comma-separated string or list of extended key usage oids.","items":{"type":"string"}},"format":{"type":"string","description":"Format for returned data. Can be \"pem\", \"der\", or \"pem_bundle\". If \"pem_bundle\" any private key and issuing cert will be appended to the certificate pem. Defaults to \"pem\"."},"ip_sans":{"type":"array","description":"The requested IP SANs, if any, in a comma-delimited list","items":{"type":"string"}},"key_usage":{"type":"array","description":"A comma-separated string or list of key usages (not extended key usages). Valid values can be found at https://golang.org/pkg/crypto/x509/#KeyUsage -- simply drop the \"KeyUsage\" part of the name. To remove all key usages from being set, set this value to an empty list.","items":{"type":"string"}},"other_sans":{"type":"array","description":"Requested other SANs, in an array with the format \u003coid\u003e;UTF8:\u003cutf8 string value\u003e for each entry.","items":{"type":"string"}},"private_key_format":{"type":"string","description":"Format for the returned private key. Generally the default will be controlled by the \"format\" parameter as either base64-encoded DER or PEM-encoded DER. However, this can be set to \"pkcs8\" to have the returned private key contain base64-encoded pkcs8 or PEM-encoded pkcs8 instead. Defaults to \"der\"."},"serial_number":{"type":"string","description":"The requested serial number, if any. If you want more than one, specify alternative names in the alt_names map using OID 2.5.4.5."},"ttl":{"type":"number","description":"The requested Time To Live for the certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be larger than the role max TTL.","format":"seconds"},"uri_sans":{"type":"array","description":"The requested URI SANs, if any, in a comma-delimited list.","items":{"type":"string"}}}}}}},"responses":{"200":{"description":"OK"}}}},"/pki/sign/{role}":{"description":"Request certificates using a certain role with the provided details.","parameters":[{"name":"role","description":"The desired role with configuration for this request","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Request certificates using a certain role with the provided details.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"alt_names":{"type":"string","description":"The requested Subject Alternative Names, if any, in a comma-delimited list. If email protection is enabled for the role, this may contain email addresses."},"common_name":{"type":"string","description":"The requested common name; if you want more than one, specify the alternative names in the alt_names map. If email protection is enabled in the role, this may be an email address."},"csr":{"type":"string","description":"PEM-format CSR to be signed."},"exclude_cn_from_sans":{"type":"boolean","description":"If true, the Common Name will not be included in DNS or Email Subject Alternate Names. Defaults to false (CN is included)."},"format":{"type":"string","description":"Format for returned data. Can be \"pem\", \"der\", or \"pem_bundle\". If \"pem_bundle\" any private key and issuing cert will be appended to the certificate pem. Defaults to \"pem\"."},"ip_sans":{"type":"array","description":"The requested IP SANs, if any, in a comma-delimited list","items":{"type":"string"}},"other_sans":{"type":"array","description":"Requested other SANs, in an array with the format \u003coid\u003e;UTF8:\u003cutf8 string value\u003e for each entry.","items":{"type":"string"}},"private_key_format":{"type":"string","description":"Format for the returned private key. Generally the default will be controlled by the \"format\" parameter as either base64-encoded DER or PEM-encoded DER. However, this can be set to \"pkcs8\" to have the returned private key contain base64-encoded pkcs8 or PEM-encoded pkcs8 instead. Defaults to \"der\"."},"serial_number":{"type":"string","description":"The requested serial number, if any. If you want more than one, specify alternative names in the alt_names map using OID 2.5.4.5."},"ttl":{"type":"number","description":"The requested Time To Live for the certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be larger than the role max TTL.","format":"seconds"},"uri_sans":{"type":"array","description":"The requested URI SANs, if any, in a comma-delimited list.","items":{"type":"string"}}}}}}},"responses":{"200":{"description":"OK"}}}},"/pki/tidy":{"description":"Tidy up the backend by removing expired certificates, revocation information, or both.","post":{"summary":"Tidy up the backend by removing expired certificates, revocation information,\nor both.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"safety_buffer":{"type":"number","description":"The amount of extra time that must have passed beyond certificate expiration before it is removed from the backend storage and/or revocation list. Defaults to 72 hours.","format":"seconds"},"tidy_cert_store":{"type":"boolean","description":"Set to true to enable tidying up the certificate store"},"tidy_revocation_list":{"type":"boolean","description":"Deprecated; synonym for 'tidy_revoked_certs"},"tidy_revoked_certs":{"type":"boolean","description":"Set to true to expire all revoked and expired certificates, removing them both from the CRL and from storage. The CRL will be rotated if this causes any values to be removed."}}}}}},"responses":{"200":{"description":"OK"}}}},"/postgresql/config/connection":{"description":"Configure the connection string to talk to PostgreSQL.","get":{"summary":"Configure the connection string to talk to PostgreSQL.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configure the connection string to talk to PostgreSQL.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"connection_url":{"type":"string","description":"DB connection string"},"max_idle_connections":{"type":"number","description":"Maximum number of idle connections to the database; a zero uses the value of max_open_connections and a negative value disables idle connections. If larger than max_open_connections it will be reduced to the same size."},"max_open_connections":{"type":"number","description":"Maximum number of open connections to the database; a zero uses the default value of two and a negative value means unlimited"},"value":{"type":"string","description":"DB connection string. Use 'connection_url' instead. This will be deprecated."},"verify_connection":{"type":"boolean","description":"If set, connection_url is verified by actually connecting to the database"}}}}}},"responses":{"200":{"description":"OK"}}}},"/postgresql/config/lease":{"description":"Configure the default lease information for generated credentials.","get":{"summary":"Configure the default lease information for generated credentials.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configure the default lease information for generated credentials.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"lease":{"type":"string","description":"Default lease for roles."},"lease_max":{"type":"string","description":"Maximum time a credential is valid for."}}}}}},"responses":{"200":{"description":"OK"}}}},"/postgresql/creds/{name}":{"description":"Request database credentials for a certain role.","parameters":[{"name":"name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Request database credentials for a certain role.","tags":["secrets"],"responses":{"200":{"description":"OK"}}}},"/postgresql/roles":{"description":"Manage the roles that can be created with this backend.","get":{"summary":"Manage the roles that can be created with this backend.","tags":["secrets"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/postgresql/roles/{name}":{"description":"Manage the roles that can be created with this backend.","parameters":[{"name":"name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Manage the roles that can be created with this backend.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Manage the roles that can be created with this backend.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"revocation_sql":{"type":"string","description":"SQL statements to be executed to revoke a user. Must be a semicolon-separated string, a base64-encoded semicolon-separated string, a serialized JSON string array, or a base64-encoded serialized JSON string array. The '{{name}}' value will be substituted."},"sql":{"type":"string","description":"SQL string to create a user. See help for more info."}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Manage the roles that can be created with this backend.","tags":["secrets"],"responses":{"204":{"description":"empty body"}}}},"/rabbitmq/config/connection":{"description":"Configure the connection URI, username, and password to talk to RabbitMQ management HTTP API.","post":{"summary":"Configure the connection URI, username, and password to talk to RabbitMQ management HTTP API.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"connection_uri":{"type":"string","description":"RabbitMQ Management URI"},"password":{"type":"string","description":"Password of the provided RabbitMQ management user"},"username":{"type":"string","description":"Username of a RabbitMQ management administrator"},"verify_connection":{"type":"boolean","description":"If set, connection_uri is verified by actually connecting to the RabbitMQ management API"}}}}}},"responses":{"200":{"description":"OK"}}}},"/rabbitmq/config/lease":{"description":"Configure the lease parameters for generated credentials","get":{"summary":"Configure the lease parameters for generated credentials","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configure the lease parameters for generated credentials","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"max_ttl":{"type":"number","description":"Duration after which the issued credentials should not be allowed to be renewed","format":"seconds"},"ttl":{"type":"number","description":"Duration before which the issued credentials needs renewal","format":"seconds"}}}}}},"responses":{"200":{"description":"OK"}}}},"/rabbitmq/creds/{name}":{"description":"Request RabbitMQ credentials for a certain role.","parameters":[{"name":"name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Request RabbitMQ credentials for a certain role.","tags":["secrets"],"responses":{"200":{"description":"OK"}}}},"/rabbitmq/roles":{"description":"Manage the roles that can be created with this backend.","get":{"summary":"Manage the roles that can be created with this backend.","tags":["secrets"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/rabbitmq/roles/{name}":{"description":"Manage the roles that can be created with this backend.","parameters":[{"name":"name","description":"Name of the role.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Manage the roles that can be created with this backend.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Manage the roles that can be created with this backend.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"tags":{"type":"string","description":"Comma-separated list of tags for this role."},"vhosts":{"type":"string","description":"A map of virtual hosts to permissions."}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Manage the roles that can be created with this backend.","tags":["secrets"],"responses":{"204":{"description":"empty body"}}}},"/secret/.*":{},"/secret/config":{"description":"Configures settings for the KV store","x-vault-create-supported":true,"get":{"summary":"Read the backend level settings.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configure backend level settings that are applied to every key in the key-value store.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"cas_required":{"type":"boolean","description":"If true, the backend will require the cas parameter to be set for each write"},"max_versions":{"type":"number","description":"The number of versions to keep for each key. Defaults to 10"}}}}}},"responses":{"200":{"description":"OK"}}}},"/secret/data/{path}":{"description":"Write, Read, and Delete data in the Key-Value Store.","parameters":[{"name":"path","description":"Location of the secret.","in":"path","schema":{"type":"string"},"required":true}],"x-vault-create-supported":true,"get":{"summary":"Write, Read, and Delete data in the Key-Value Store.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Write, Read, and Delete data in the Key-Value Store.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"data":{"type":"object","description":"The contents of the data map will be stored and returned on read.","format":"map"},"options":{"type":"object","description":"Options for writing a KV entry. Set the \"cas\" value to use a Check-And-Set operation. If not set the write will be allowed. If set to 0 a write will only be allowed if the key doesn’t exist. If the index is non-zero the write will only be allowed if the key’s current version matches the version specified in the cas parameter.","format":"map"},"version":{"type":"number","description":"If provided during a read, the value at the version number will be returned"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Write, Read, and Delete data in the Key-Value Store.","tags":["secrets"],"responses":{"204":{"description":"empty body"}}}},"/secret/delete/{path}":{"description":"Marks one or more versions as deleted in the KV store.","parameters":[{"name":"path","description":"Location of the secret.","in":"path","schema":{"type":"string"},"required":true}],"x-vault-create-supported":true,"post":{"summary":"Marks one or more versions as deleted in the KV store.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"versions":{"type":"array","description":"The versions to be archived. The versioned data will not be deleted, but it will no longer be returned in normal get requests.","items":{"type":"number"}}}}}}},"responses":{"200":{"description":"OK"}}}},"/secret/destroy/{path}":{"description":"Permanently removes one or more versions in the KV store","parameters":[{"name":"path","description":"Location of the secret.","in":"path","schema":{"type":"string"},"required":true}],"x-vault-create-supported":true,"post":{"summary":"Permanently removes one or more versions in the KV store","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"versions":{"type":"array","description":"The versions to destroy. Their data will be permanently deleted.","items":{"type":"number"}}}}}}},"responses":{"200":{"description":"OK"}}}},"/secret/metadata/{path}":{"description":"Configures settings for the KV store","parameters":[{"name":"path","description":"Location of the secret.","in":"path","schema":{"type":"string"},"required":true}],"x-vault-create-supported":true,"get":{"summary":"Configures settings for the KV store","tags":["secrets"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configures settings for the KV store","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"cas_required":{"type":"boolean","description":"If true the key will require the cas parameter to be set on all write requests. If false, the backend’s configuration will be used."},"max_versions":{"type":"number","description":"The number of versions to keep. If not set, the backend’s configured max version is used."}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Configures settings for the KV store","tags":["secrets"],"responses":{"204":{"description":"empty body"}}}},"/secret/undelete/{path}":{"description":"Undeletes one or more versions from the KV store.","parameters":[{"name":"path","description":"Location of the secret.","in":"path","schema":{"type":"string"},"required":true}],"x-vault-create-supported":true,"post":{"summary":"Undeletes one or more versions from the KV store.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"versions":{"type":"array","description":"The versions to unarchive. The versions will be restored and their data will be returned on normal get requests.","items":{"type":"number"}}}}}}},"responses":{"200":{"description":"OK"}}}},"/ssh/config/ca":{"description":"Set the SSH private key used for signing certificates.","get":{"summary":"Set the SSH private key used for signing certificates.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Set the SSH private key used for signing certificates.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"generate_signing_key":{"type":"boolean","description":"Generate SSH key pair internally rather than use the private_key and public_key fields."},"private_key":{"type":"string","description":"Private half of the SSH key that will be used to sign certificates."},"public_key":{"type":"string","description":"Public half of the SSH key that will be used to sign certificates."}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Set the SSH private key used for signing certificates.","tags":["secrets"],"responses":{"204":{"description":"empty body"}}}},"/ssh/config/zeroaddress":{"description":"Assign zero address as default CIDR block for select roles.","get":{"summary":"Assign zero address as default CIDR block for select roles.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Assign zero address as default CIDR block for select roles.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"roles":{"type":"array","description":"[Required] Comma separated list of role names which allows credentials to be requested for any IP address. CIDR blocks previously registered under these roles will be ignored.","items":{"type":"string"}}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Assign zero address as default CIDR block for select roles.","tags":["secrets"],"responses":{"204":{"description":"empty body"}}}},"/ssh/creds/{role}":{"description":"Creates a credential for establishing SSH connection with the remote host.","parameters":[{"name":"role","description":"[Required] Name of the role","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Creates a credential for establishing SSH connection with the remote host.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"ip":{"type":"string","description":"[Required] IP of the remote host"},"username":{"type":"string","description":"[Optional] Username in remote host"}}}}}},"responses":{"200":{"description":"OK"}}}},"/ssh/keys/{key_name}":{"description":"Register a shared private key with Vault.","parameters":[{"name":"key_name","description":"[Required] Name of the key","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Register a shared private key with Vault.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"key":{"type":"string","description":"[Required] SSH private key with super user privileges in host"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Register a shared private key with Vault.","tags":["secrets"],"responses":{"204":{"description":"empty body"}}}},"/ssh/lookup":{"description":"List all the roles associated with the given IP address.","post":{"summary":"List all the roles associated with the given IP address.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"ip":{"type":"string","description":"[Required] IP address of remote host"}}}}}},"responses":{"200":{"description":"OK"}}}},"/ssh/public_key":{"description":"Retrieve the public key.","x-vault-unauthenticated":true,"get":{"summary":"Retrieve the public key.","tags":["secrets"],"responses":{"200":{"description":"OK"}}}},"/ssh/roles":{"description":"Manage the 'roles' that can be created with this backend.","get":{"summary":"Manage the 'roles' that can be created with this backend.","tags":["secrets"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/ssh/roles/{role}":{"description":"Manage the 'roles' that can be created with this backend.","parameters":[{"name":"role","description":"[Required for all types] Name of the role being created.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Manage the 'roles' that can be created with this backend.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Manage the 'roles' that can be created with this backend.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"admin_user":{"type":"string","description":"[Required for Dynamic type] [Not applicable for OTP type] [Not applicable for CA type] Admin user at remote host. The shared key being registered should be for this user and should have root privileges. Everytime a dynamic credential is being generated for other users, Vault uses this admin username to login to remote host and install the generated credential for the other user."},"allow_bare_domains":{"type":"boolean","description":"[Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] If set, host certificates that are requested are allowed to use the base domains listed in \"allowed_domains\", e.g. \"example.com\". This is a separate option as in some cases this can be considered a security threat."},"allow_host_certificates":{"type":"boolean","description":"[Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] If set, certificates are allowed to be signed for use as a 'host'."},"allow_subdomains":{"type":"boolean","description":"[Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] If set, host certificates that are requested are allowed to use subdomains of those listed in \"allowed_domains\"."},"allow_user_certificates":{"type":"boolean","description":"[Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] If set, certificates are allowed to be signed for use as a 'user'."},"allow_user_key_ids":{"type":"boolean","description":"[Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] If true, users can override the key ID for a signed certificate with the \"key_id\" field. When false, the key ID will always be the token display name. The key ID is logged by the SSH server and can be useful for auditing."},"allowed_critical_options":{"type":"string","description":"[Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] A comma-separated list of critical options that certificates can have when signed. To allow any critical options, set this to an empty string."},"allowed_domains":{"type":"string","description":"[Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] If this option is not specified, client can request for a signed certificate for any valid host. If only certain domains are allowed, then this list enforces it."},"allowed_extensions":{"type":"string","description":"[Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] A comma-separated list of extensions that certificates can have when signed. To allow any extensions, set this to an empty string."},"allowed_users":{"type":"string","description":"[Optional for all types] [Works differently for CA type] If this option is not specified, or is '*', client can request a credential for any valid user at the remote host, including the admin user. If only certain usernames are to be allowed, then this list enforces it. If this field is set, then credentials can only be created for default_user and usernames present in this list. Setting this option will enable all the users with access to this role to fetch credentials for all other usernames in this list. Use with caution. N.B.: with the CA type, an empty list means that no users are allowed; explicitly specify '*' to allow any user."},"cidr_list":{"type":"string","description":"[Optional for Dynamic type] [Optional for OTP type] [Not applicable for CA type] Comma separated list of CIDR blocks for which the role is applicable for. CIDR blocks can belong to more than one role."},"default_critical_options":{"type":"object","description":"[Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] Critical options certificates should have if none are provided when signing. This field takes in key value pairs in JSON format. Note that these are not restricted by \"allowed_critical_options\". Defaults to none.","format":"map"},"default_extensions":{"type":"object","description":"[Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] Extensions certificates should have if none are provided when signing. This field takes in key value pairs in JSON format. Note that these are not restricted by \"allowed_extensions\". Defaults to none.","format":"map"},"default_user":{"type":"string","description":"[Required for Dynamic type] [Required for OTP type] [Optional for CA type] Default username for which a credential will be generated. When the endpoint 'creds/' is used without a username, this value will be used as default username."},"exclude_cidr_list":{"type":"string","description":"[Optional for Dynamic type] [Optional for OTP type] [Not applicable for CA type] Comma separated list of CIDR blocks. IP addresses belonging to these blocks are not accepted by the role. This is particularly useful when big CIDR blocks are being used by the role and certain parts of it needs to be kept out."},"install_script":{"type":"string","description":"[Optional for Dynamic type] [Not-applicable for OTP type] [Not applicable for CA type] Script used to install and uninstall public keys in the target machine. The inbuilt default install script will be for Linux hosts. For sample script, refer the project documentation website."},"key":{"type":"string","description":"[Required for Dynamic type] [Not applicable for OTP type] [Not applicable for CA type] Name of the registered key in Vault. Before creating the role, use the 'keys/' endpoint to create a named key."},"key_bits":{"type":"number","description":"[Optional for Dynamic type] [Not applicable for OTP type] [Not applicable for CA type] Length of the RSA dynamic key in bits. It is 1024 by default or it can be 2048."},"key_id_format":{"type":"string","description":"[Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] When supplied, this value specifies a custom format for the key id of a signed certificate. The following variables are available for use: '{{token_display_name}}' - The display name of the token used to make the request. '{{role_name}}' - The name of the role signing the request. '{{public_key_hash}}' - A SHA256 checksum of the public key that is being signed."},"key_option_specs":{"type":"string","description":"[Optional for Dynamic type] [Not applicable for OTP type] [Not applicable for CA type] Comma separated option specifications which will be prefixed to RSA key in authorized_keys file. Options should be valid and comply with authorized_keys file format and should not contain spaces."},"key_type":{"type":"string","description":"[Required for all types] Type of key used to login to hosts. It can be either 'otp', 'dynamic' or 'ca'. 'otp' type requires agent to be installed in remote hosts."},"max_ttl":{"type":"number","description":"[Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] The maximum allowed lease duration","format":"seconds"},"port":{"type":"number","description":"[Optional for Dynamic type] [Optional for OTP type] [Not applicable for CA type] Port number for SSH connection. Default is '22'. Port number does not play any role in creation of OTP. For 'otp' type, this is just a way to inform client about the port number to use. Port number will be returned to client by Vault server along with OTP."},"ttl":{"type":"number","description":"[Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] The lease duration if no specific lease duration is requested. The lease duration controls the expiration of certificates issued by this backend. Defaults to the value of max_ttl.","format":"seconds"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Manage the 'roles' that can be created with this backend.","tags":["secrets"],"responses":{"204":{"description":"empty body"}}}},"/ssh/sign/{role}":{"description":"Request signing an SSH key using a certain role with the provided details.","parameters":[{"name":"role","description":"The desired role with configuration for this request.","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Request signing an SSH key using a certain role with the provided details.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"cert_type":{"type":"string","description":"Type of certificate to be created; either \"user\" or \"host\"."},"critical_options":{"type":"object","description":"Critical options that the certificate should be signed for.","format":"map"},"extensions":{"type":"object","description":"Extensions that the certificate should be signed for.","format":"map"},"key_id":{"type":"string","description":"Key id that the created certificate should have. If not specified, the display name of the token will be used."},"public_key":{"type":"string","description":"SSH public key that should be signed."},"ttl":{"type":"number","description":"The requested Time To Live for the SSH certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be later than the role max TTL.","format":"seconds"},"valid_principals":{"type":"string","description":"Valid principals, either usernames or hostnames, that the certificate should be signed for."}}}}}},"responses":{"200":{"description":"OK"}}}},"/ssh/verify":{"description":"Validate the OTP provided by Vault SSH Agent.","x-vault-unauthenticated":true,"post":{"summary":"Validate the OTP provided by Vault SSH Agent.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"otp":{"type":"string","description":"[Required] One-Time-Key that needs to be validated"}}}}}},"responses":{"200":{"description":"OK"}}}},"/sys/audit":{"description":"List the currently enabled audit backends.","x-vault-sudo":true,"get":{"summary":"List the enabled audit devices.","tags":["system"],"responses":{"200":{"description":"OK"}}}},"/sys/audit-hash/{path}":{"description":"The hash of the given string via the given audit backend","parameters":[{"name":"path","description":"The name of the backend. Cannot be delimited. Example: \"mysql\"","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"The hash of the given string via the given audit backend","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"input":{"type":"string"}}}}}},"responses":{"200":{"description":"OK"}}}},"/sys/audit/{path}":{"description":"Enable or disable audit backends.","parameters":[{"name":"path","description":"The name of the backend. Cannot be delimited. Example: \"mysql\"","in":"path","schema":{"type":"string"},"required":true}],"x-vault-sudo":true,"post":{"summary":"Enable a new audit device at the supplied path.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"description":{"type":"string","description":"User-friendly description for this audit backend."},"local":{"type":"boolean","description":"Mark the mount as a local mount, which is not replicated and is unaffected by replication."},"options":{"type":"object","description":"Configuration options for the audit backend.","format":"kvpairs"},"type":{"type":"string","description":"The type of the backend. Example: \"mysql\""}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Disable the audit device at the given path.","tags":["system"],"responses":{"204":{"description":"empty body"}}}},"/sys/auth":{"description":"List the currently enabled credential backends.","get":{"summary":"List the currently enabled credential backends.","tags":["system"],"responses":{"200":{"description":"OK"}}}},"/sys/auth/{path}":{"description":"Enable a new credential backend with a name.","parameters":[{"name":"path","description":"The path to mount to. Cannot be delimited. Example: \"user\"","in":"path","schema":{"type":"string"},"required":true}],"x-vault-sudo":true,"post":{"summary":"Enables a new auth method.","description":"After enabling, the auth method can be accessed and configured via the auth path specified as part of the URL. This auth path will be nested under the auth prefix.\n\nFor example, enable the \"foo\" auth method will make it accessible at /auth/foo.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"config":{"type":"object","description":"Configuration for this mount, such as plugin_name.","format":"map"},"description":{"type":"string","description":"User-friendly description for this credential backend."},"local":{"type":"boolean","description":"Mark the mount as a local mount, which is not replicated and is unaffected by replication."},"options":{"type":"object","description":"The options to pass into the backend. Should be a json object with string keys and values.","format":"kvpairs"},"plugin_name":{"type":"string","description":"Name of the auth plugin to use based from the name in the plugin catalog."},"seal_wrap":{"type":"boolean","description":"Whether to turn on seal wrapping for the mount."},"type":{"type":"string","description":"The type of the backend. Example: \"userpass\""}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Disable the auth method at the given auth path","tags":["system"],"responses":{"204":{"description":"empty body"}}}},"/sys/auth/{path}/tune":{"description":"Tune the configuration parameters for an auth path.","parameters":[{"name":"path","description":"Tune the configuration parameters for an auth path.","in":"path","schema":{"type":"string"},"required":true}],"x-vault-sudo":true,"get":{"summary":"Reads the given auth path's configuration.","description":"This endpoint requires sudo capability on the final path, but the same functionality can be achieved without sudo via `sys/mounts/auth/[auth-path]/tune`.","tags":["system"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Tune configuration parameters for a given auth path.","description":"This endpoint requires sudo capability on the final path, but the same functionality can be achieved without sudo via `sys/mounts/auth/[auth-path]/tune`.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"audit_non_hmac_request_keys":{"type":"array","description":"The list of keys in the request data object that will not be HMAC'ed by audit devices.","items":{"type":"string"}},"audit_non_hmac_response_keys":{"type":"array","description":"The list of keys in the response data object that will not be HMAC'ed by audit devices.","items":{"type":"string"}},"default_lease_ttl":{"type":"string","description":"The default lease TTL for this mount."},"description":{"type":"string","description":"User-friendly description for this credential backend."},"listing_visibility":{"type":"string","description":"Determines the visibility of the mount in the UI-specific listing endpoint. Accepted value are 'unauth' and ''."},"max_lease_ttl":{"type":"string","description":"The max lease TTL for this mount."},"options":{"type":"object","description":"The options to pass into the backend. Should be a json object with string keys and values.","format":"kvpairs"},"passthrough_request_headers":{"type":"array","description":"A list of headers to whitelist and pass from the request to the backend.","items":{"type":"string"}}}}}}},"responses":{"200":{"description":"OK"}}}},"/sys/capabilities":{"description":"Fetches the capabilities of the given token on the given path.","post":{"summary":"Fetches the capabilities of the given token on the given path.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"path":{"type":"array","description":"(DEPRECATED) Path on which capabilities are being queried. Use 'paths' instead.","items":{"type":"string"},"deprecated":true},"paths":{"type":"array","description":"Paths on which capabilities are being queried.","items":{"type":"string"}},"token":{"type":"string","description":"Token for which capabilities are being queried."}}}}}},"responses":{"200":{"description":"OK"}}}},"/sys/capabilities-accessor":{"description":"Fetches the capabilities of the token associated with the given token, on the given path.","post":{"summary":"Fetches the capabilities of the token associated with the given token, on the given path.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"accessor":{"type":"string","description":"Accessor of the token for which capabilities are being queried."},"path":{"type":"array","description":"(DEPRECATED) Path on which capabilities are being queried. Use 'paths' instead.","items":{"type":"string"},"deprecated":true},"paths":{"type":"array","description":"Paths on which capabilities are being queried.","items":{"type":"string"}}}}}}},"responses":{"200":{"description":"OK"}}}},"/sys/capabilities-self":{"description":"Fetches the capabilities of the given token on the given path.","post":{"summary":"Fetches the capabilities of the given token on the given path.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"path":{"type":"array","description":"(DEPRECATED) Path on which capabilities are being queried. Use 'paths' instead.","items":{"type":"string"},"deprecated":true},"paths":{"type":"array","description":"Paths on which capabilities are being queried.","items":{"type":"string"}},"token":{"type":"string","description":"Token for which capabilities are being queried."}}}}}},"responses":{"200":{"description":"OK"}}}},"/sys/config/auditing/request-headers":{"description":"Lists the headers configured to be audited.","x-vault-sudo":true,"get":{"summary":"List the request headers that are configured to be audited.","tags":["system"],"responses":{"200":{"description":"OK"}}}},"/sys/config/auditing/request-headers/{header}":{"description":"Configures the headers sent to the audit logs.","parameters":[{"name":"header","in":"path","schema":{"type":"string"},"required":true}],"x-vault-sudo":true,"get":{"summary":"List the information for the given request header.","tags":["system"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Enable auditing of a header.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"hmac":{"type":"boolean"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Disable auditing of the given request header.","tags":["system"],"responses":{"204":{"description":"empty body"}}}},"/sys/config/cors":{"description":"This path responds to the following HTTP methods. GET / Returns the configuration of the CORS setting. POST / Sets the comma-separated list of origins that can make cross-origin requests. DELETE / Clears the CORS configuration and disables acceptance of CORS requests.","x-vault-sudo":true,"get":{"summary":"Return the current CORS settings.","tags":["system"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configure the CORS settings.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"allowed_headers":{"type":"array","description":"A comma-separated string or array of strings indicating headers that are allowed on cross-origin requests.","items":{"type":"string"}},"allowed_origins":{"type":"array","description":"A comma-separated string or array of strings indicating origins that may make cross-origin requests.","items":{"type":"string"}},"enable":{"type":"boolean","description":"Enables or disables CORS headers on requests."}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Remove any CORS settings.","tags":["system"],"responses":{"204":{"description":"empty body"}}}},"/sys/config/ui/headers/":{"description":"This path responds to the following HTTP methods. GET /\u003cheader\u003e Returns the header value. POST /\u003cheader\u003e Sets the header value for the UI. DELETE /\u003cheader\u003e Clears the header value for UI. LIST / List the headers configured for the UI.","x-vault-sudo":true,"get":{"summary":"Return a list of configured UI headers.","tags":["system"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/sys/config/ui/headers/{header}":{"description":"This path responds to the following HTTP methods. GET /\u003cheader\u003e Returns the header value. POST /\u003cheader\u003e Sets the header value for the UI. DELETE /\u003cheader\u003e Clears the header value for UI. LIST / List the headers configured for the UI.","parameters":[{"name":"header","description":"The name of the header.","in":"path","schema":{"type":"string"},"required":true}],"x-vault-sudo":true,"get":{"summary":"Return the given UI header's configuration","tags":["system"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Configure the values to be returned for the UI header.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"values":{"type":"array","description":"The values to set the header.","items":{"type":"string"}}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Remove a UI header.","tags":["system"],"responses":{"204":{"description":"empty body"}}}},"/sys/generate-root":{"description":"Reads, generates, or deletes a root token regeneration process.","get":{"summary":"Read the configuration and progress of the current root generation attempt.","tags":["system"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Initializes a new root generation attempt.","description":"Only a single root generation attempt can take place at a time. One (and only one) of otp or pgp_key are required.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"pgp_key":{"type":"string","description":"Specifies a base64-encoded PGP public key."}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Cancels any in-progress root generation attempt.","tags":["system"],"responses":{"204":{"description":"empty body"}}}},"/sys/generate-root/attempt":{"description":"Reads, generates, or deletes a root token regeneration process.","get":{"summary":"Read the configuration and progress of the current root generation attempt.","tags":["system"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Initializes a new root generation attempt.","description":"Only a single root generation attempt can take place at a time. One (and only one) of otp or pgp_key are required.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"pgp_key":{"type":"string","description":"Specifies a base64-encoded PGP public key."}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Cancels any in-progress root generation attempt.","tags":["system"],"responses":{"204":{"description":"empty body"}}}},"/sys/generate-root/update":{"description":"Reads, generates, or deletes a root token regeneration process.","post":{"summary":"Enter a single master key share to progress the root generation attempt.","description":"If the threshold number of master key shares is reached, Vault will complete the root generation and issue the new token. Otherwise, this API must be called multiple times until that threshold is met. The attempt nonce must be provided with each call.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"key":{"type":"string","description":"Specifies a single master key share."},"nonce":{"type":"string","description":"Specifies the nonce of the attempt."}}}}}},"responses":{"200":{"description":"OK"}}}},"/sys/health":{"get":{"summary":"Returns the health status of Vault.","tags":["system"],"responses":{"200":{"description":"initialized, unsealed, and active"},"429":{"description":"unsealed and standby"},"472":{"description":"data recovery mode replication secondary and active"},"501":{"description":"not initialized"},"503":{"description":"sealed"}}}},"/sys/init":{"description":"Initializes or returns the initialization status of the Vault.","get":{"summary":"Returns the initialization status of Vault.","tags":["system"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Initialize a new Vault.","description":"The Vault must not have been previously initialized. The recovery options, as well as the stored shares option, are only available when using Vault HSM.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"pgp_keys":{"type":"array","description":"Specifies an array of PGP public keys used to encrypt the output unseal keys. Ordering is preserved. The keys must be base64-encoded from their original binary representation. The size of this array must be the same as `secret_shares`.","items":{"type":"string"}},"recovery_pgp_keys":{"type":"array","description":"Specifies an array of PGP public keys used to encrypt the output recovery keys. Ordering is preserved. The keys must be base64-encoded from their original binary representation. The size of this array must be the same as `recovery_shares`.","items":{"type":"string"}},"recovery_shares":{"type":"number","description":"Specifies the number of shares to split the recovery key into."},"recovery_threshold":{"type":"number","description":"Specifies the number of shares required to reconstruct the recovery key. This must be less than or equal to `recovery_shares`."},"root_token_pgp_key":{"type":"string","description":"Specifies a PGP public key used to encrypt the initial root token. The key must be base64-encoded from its original binary representation."},"secret_shares":{"type":"number","description":"Specifies the number of shares to split the master key into."},"secret_threshold":{"type":"number","description":"Specifies the number of shares required to reconstruct the master key. This must be less than or equal secret_shares. If using Vault HSM with auto-unsealing, this value must be the same as `secret_shares`."},"stored_shares":{"type":"number","description":"Specifies the number of shares that should be encrypted by the HSM and stored for auto-unsealing. Currently must be the same as `secret_shares`."}}}}}},"responses":{"200":{"description":"OK"}}}},"/sys/internal/specs/openapi":{"x-vault-unauthenticated":true,"get":{"summary":"Generate an OpenAPI 3 document of all mounted paths.","tags":["system"],"responses":{"200":{"description":"OK"}}}},"/sys/internal/ui/mounts":{"description":"Information about mounts returned according to their tuned visibility. Internal API; its location, inputs, and outputs may change.","x-vault-unauthenticated":true,"get":{"summary":"Lists all enabled and visible auth and secrets mounts.","tags":["system"],"responses":{"200":{"description":"OK"}}}},"/sys/internal/ui/mounts/{path}":{"description":"Information about mounts returned according to their tuned visibility. Internal API; its location, inputs, and outputs may change.","parameters":[{"name":"path","description":"The path of the mount.","in":"path","schema":{"type":"string"},"required":true}],"x-vault-unauthenticated":true,"get":{"summary":"Return information about the given mount.","tags":["system"],"responses":{"200":{"description":"OK"}}}},"/sys/internal/ui/namespaces":{"description":"Information about visible child namespaces. Internal API; its location, inputs, and outputs may change.","x-vault-unauthenticated":true},"/sys/internal/ui/resultant-acl":{"description":"Information about a token's resultant ACL. Internal API; its location, inputs, and outputs may change."},"/sys/key-status":{"description":"Provides information about the backend encryption key.","get":{"summary":"Provides information about the backend encryption key.","tags":["system"],"responses":{"200":{"description":"OK"}}}},"/sys/leader":{"description":"Check the high availability status and current leader of Vault","get":{"summary":"Returns the high availability status and current leader instance of Vault.","tags":["system"],"responses":{"200":{"description":"OK"}}}},"/sys/leases/lookup":{"description":"View or list lease metadata.","post":{"summary":"Retrieve lease metadata.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"lease_id":{"type":"string","description":"The lease identifier to renew. This is included with a lease."}}}}}},"responses":{"200":{"description":"OK"}}}},"/sys/leases/lookup/":{"description":"View or list lease metadata.","x-vault-sudo":true,"get":{"summary":"Returns a list of lease ids.","tags":["system"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/sys/leases/lookup/{prefix}":{"description":"View or list lease metadata.","parameters":[{"name":"prefix","description":"The path to list leases under. Example: \"aws/creds/deploy\"","in":"path","schema":{"type":"string"},"required":true}],"x-vault-sudo":true,"get":{"summary":"Returns a list of lease ids.","tags":["system"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/sys/leases/renew":{"description":"Renew a lease on a secret","post":{"summary":"Renews a lease, requesting to extend the lease.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"increment":{"type":"number","description":"The desired increment in seconds to the lease","format":"seconds"},"lease_id":{"type":"string","description":"The lease identifier to renew. This is included with a lease."},"url_lease_id":{"type":"string","description":"The lease identifier to renew. This is included with a lease."}}}}}},"responses":{"200":{"description":"OK"}}}},"/sys/leases/renew/{url_lease_id}":{"description":"Renew a lease on a secret","parameters":[{"name":"url_lease_id","description":"The lease identifier to renew. This is included with a lease.","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Renews a lease, requesting to extend the lease.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"increment":{"type":"number","description":"The desired increment in seconds to the lease","format":"seconds"},"lease_id":{"type":"string","description":"The lease identifier to renew. This is included with a lease."}}}}}},"responses":{"200":{"description":"OK"}}}},"/sys/leases/revoke":{"description":"Revoke a leased secret immediately","post":{"summary":"Revokes a lease immediately.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"lease_id":{"type":"string","description":"The lease identifier to renew. This is included with a lease."},"sync":{"type":"boolean","description":"Whether or not to perform the revocation synchronously"},"url_lease_id":{"type":"string","description":"The lease identifier to renew. This is included with a lease."}}}}}},"responses":{"200":{"description":"OK"}}}},"/sys/leases/revoke-force/{prefix}":{"description":"Revoke all secrets generated in a given prefix, ignoring errors.","parameters":[{"name":"prefix","description":"The path to revoke keys under. Example: \"prod/aws/ops\"","in":"path","schema":{"type":"string"},"required":true}],"x-vault-sudo":true,"post":{"summary":"Revokes all secrets or tokens generated under a given prefix immediately","description":"Unlike `/sys/leases/revoke-prefix`, this path ignores backend errors encountered during revocation. This is potentially very dangerous and should only be used in specific emergency situations where errors in the backend or the connected backend service prevent normal revocation.\n\nBy ignoring these errors, Vault abdicates responsibility for ensuring that the issued credentials or secrets are properly revoked and/or cleaned up. Access to this endpoint should be tightly controlled.","tags":["system"],"responses":{"200":{"description":"OK"}}}},"/sys/leases/revoke-prefix/{prefix}":{"description":"Revoke all secrets generated in a given prefix","parameters":[{"name":"prefix","description":"The path to revoke keys under. Example: \"prod/aws/ops\"","in":"path","schema":{"type":"string"},"required":true}],"x-vault-sudo":true,"post":{"summary":"Revokes all secrets (via a lease ID prefix) or tokens (via the tokens' path property) generated under a given prefix immediately.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"sync":{"type":"boolean","description":"Whether or not to perform the revocation synchronously"}}}}}},"responses":{"200":{"description":"OK"}}}},"/sys/leases/revoke/{url_lease_id}":{"description":"Revoke a leased secret immediately","parameters":[{"name":"url_lease_id","description":"The lease identifier to renew. This is included with a lease.","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Revokes a lease immediately.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"lease_id":{"type":"string","description":"The lease identifier to renew. This is included with a lease."},"sync":{"type":"boolean","description":"Whether or not to perform the revocation synchronously"}}}}}},"responses":{"200":{"description":"OK"}}}},"/sys/leases/tidy":{"description":"This endpoint performs cleanup tasks that can be run if certain error conditions have occurred.","post":{"summary":"This endpoint performs cleanup tasks that can be run if certain error\nconditions have occurred.","tags":["system"],"responses":{"200":{"description":"OK"}}}},"/sys/mounts":{"description":"List the currently mounted backends.","get":{"summary":"List the currently mounted backends.","tags":["system"],"responses":{"200":{"description":"OK"}}}},"/sys/mounts/{path}":{"description":"Mount a new backend at a new path.","parameters":[{"name":"path","description":"The path to mount to. Example: \"aws/east\"","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Enable a new secrets engine at the given path.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"config":{"type":"object","description":"Configuration for this mount, such as default_lease_ttl and max_lease_ttl.","format":"map"},"description":{"type":"string","description":"User-friendly description for this mount."},"local":{"type":"boolean","description":"Mark the mount as a local mount, which is not replicated and is unaffected by replication."},"options":{"type":"object","description":"The options to pass into the backend. Should be a json object with string keys and values.","format":"kvpairs"},"plugin_name":{"type":"string","description":"Name of the plugin to mount based from the name registered in the plugin catalog."},"seal_wrap":{"type":"boolean","description":"Whether to turn on seal wrapping for the mount."},"type":{"type":"string","description":"The type of the backend. Example: \"passthrough\""}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Disable the mount point specified at the given path.","tags":["system"],"responses":{"204":{"description":"empty body"}}}},"/sys/mounts/{path}/tune":{"description":"Tune backend configuration parameters for this mount.","parameters":[{"name":"path","description":"The path to mount to. Example: \"aws/east\"","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Tune backend configuration parameters for this mount.","tags":["system"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Tune backend configuration parameters for this mount.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"audit_non_hmac_request_keys":{"type":"array","description":"The list of keys in the request data object that will not be HMAC'ed by audit devices.","items":{"type":"string"}},"audit_non_hmac_response_keys":{"type":"array","description":"The list of keys in the response data object that will not be HMAC'ed by audit devices.","items":{"type":"string"}},"default_lease_ttl":{"type":"string","description":"The default lease TTL for this mount."},"description":{"type":"string","description":"User-friendly description for this credential backend."},"listing_visibility":{"type":"string","description":"Determines the visibility of the mount in the UI-specific listing endpoint. Accepted value are 'unauth' and ''."},"max_lease_ttl":{"type":"string","description":"The max lease TTL for this mount."},"options":{"type":"object","description":"The options to pass into the backend. Should be a json object with string keys and values.","format":"kvpairs"},"passthrough_request_headers":{"type":"array","description":"A list of headers to whitelist and pass from the request to the backend.","items":{"type":"string"}},"token_type":{"type":"string","description":"The type of token to issue (service or batch)."}}}}}},"responses":{"200":{"description":"OK"}}}},"/sys/plugins/catalog":{"description":"Lists all the plugins known to Vault","get":{"summary":"Lists all the plugins known to Vault","tags":["system"],"responses":{"200":{"description":"OK"}}}},"/sys/plugins/catalog/{name}":{"description":"Configures the plugins known to Vault","parameters":[{"name":"name","description":"The name of the plugin","in":"path","schema":{"type":"string"},"required":true}],"x-vault-sudo":true,"get":{"summary":"Return the configuration data for the plugin with the given name.","tags":["system"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Register a new plugin, or updates an existing one with the supplied name.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"args":{"type":"array","description":"The args passed to plugin command.","items":{"type":"string"}},"command":{"type":"string","description":"The command used to start the plugin. The executable defined in this command must exist in vault's plugin directory."},"env":{"type":"array","description":"The environment variables passed to plugin command. Each entry is of the form \"key=value\".","items":{"type":"string"}},"sha256":{"type":"string","description":"The SHA256 sum of the executable used in the command field. This should be HEX encoded."},"sha_256":{"type":"string","description":"The SHA256 sum of the executable used in the command field. This should be HEX encoded."},"type":{"type":"string","description":"The type of the plugin, may be auth, secret, or database"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Remove the plugin with the given name.","tags":["system"],"responses":{"204":{"description":"empty body"}}}},"/sys/plugins/catalog/{type}":{"description":"Configures the plugins known to Vault","parameters":[{"name":"type","description":"The type of the plugin, may be auth, secret, or database","in":"path","schema":{"type":"string"},"required":true}],"x-vault-sudo":true,"get":{"summary":"List the plugins in the catalog.","tags":["system"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/sys/plugins/catalog/{type}/{name}":{"description":"Configures the plugins known to Vault","parameters":[{"name":"name","description":"The name of the plugin","in":"path","schema":{"type":"string"},"required":true},{"name":"type","description":"The type of the plugin, may be auth, secret, or database","in":"path","schema":{"type":"string"},"required":true}],"x-vault-sudo":true,"get":{"summary":"Return the configuration data for the plugin with the given name.","tags":["system"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Register a new plugin, or updates an existing one with the supplied name.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"args":{"type":"array","description":"The args passed to plugin command.","items":{"type":"string"}},"command":{"type":"string","description":"The command used to start the plugin. The executable defined in this command must exist in vault's plugin directory."},"env":{"type":"array","description":"The environment variables passed to plugin command. Each entry is of the form \"key=value\".","items":{"type":"string"}},"sha256":{"type":"string","description":"The SHA256 sum of the executable used in the command field. This should be HEX encoded."},"sha_256":{"type":"string","description":"The SHA256 sum of the executable used in the command field. This should be HEX encoded."}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Remove the plugin with the given name.","tags":["system"],"responses":{"204":{"description":"empty body"}}}},"/sys/plugins/reload/backend":{"description":"Reload mounts that use a particular backend plugin.","post":{"summary":"Reload mounted plugin backends.","description":"Either the plugin name (`plugin`) or the desired plugin backend mounts (`mounts`) must be provided, but not both. In the case that the plugin name is provided, all mounted paths that use that plugin backend will be reloaded.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"mounts":{"type":"array","description":"The mount paths of the plugin backends to reload.","items":{"type":"string"}},"plugin":{"type":"string","description":"The name of the plugin to reload, as registered in the plugin catalog."}}}}}},"responses":{"200":{"description":"OK"}}}},"/sys/policies/acl":{"description":"List the configured access control policies.","get":{"summary":"List the configured access control policies.","tags":["system"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/sys/policies/acl/{name}":{"description":"Read, Modify, or Delete an access control policy.","parameters":[{"name":"name","description":"The name of the policy. Example: \"ops\"","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Retrieve information about the named ACL policy.","tags":["system"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Add a new or update an existing ACL policy.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"policy":{"type":"string","description":"The rules of the policy."}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Delete the ACL policy with the given name.","tags":["system"],"responses":{"204":{"description":"empty body"}}}},"/sys/policy":{"description":"List the configured access control policies.","get":{"summary":"List the configured access control policies.","tags":["system"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/sys/policy/{name}":{"description":"Read, Modify, or Delete an access control policy.","parameters":[{"name":"name","description":"The name of the policy. Example: \"ops\"","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Retrieve the policy body for the named policy.","tags":["system"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Add a new or update an existing policy.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"policy":{"type":"string","description":"The rules of the policy."},"rules":{"type":"string","description":"The rules of the policy.","deprecated":true}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Delete the policy with the given name.","tags":["system"],"responses":{"204":{"description":"empty body"}}}},"/sys/raw":{"description":"Write, Read, and Delete data directly in the Storage backend.","x-vault-sudo":true,"get":{"summary":"Read the value of the key at the given path.","tags":["system"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Update the value of the key at the given path.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"path":{"type":"string"},"value":{"type":"string"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Delete the key with given path.","tags":["system"],"responses":{"204":{"description":"empty body"}}}},"/sys/raw/{path}":{"description":"Write, Read, and Delete data directly in the Storage backend.","parameters":[{"name":"path","in":"path","schema":{"type":"string"},"required":true}],"x-vault-sudo":true,"get":{"summary":"Read the value of the key at the given path.","tags":["system"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Update the value of the key at the given path.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"value":{"type":"string"}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Delete the key with given path.","tags":["system"],"responses":{"204":{"description":"empty body"}}}},"/sys/rekey/backup":{"description":"Allows fetching or deleting the backup of the rotated unseal keys.","get":{"summary":"Return the backup copy of PGP-encrypted unseal keys.","tags":["system"],"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Delete the backup copy of PGP-encrypted unseal keys.","tags":["system"],"responses":{"204":{"description":"empty body"}}}},"/sys/rekey/init":{"get":{"summary":"Reads the configuration and progress of the current rekey attempt.","tags":["system"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Initializes a new rekey attempt.","description":"Only a single rekey attempt can take place at a time, and changing the parameters of a rekey requires canceling and starting a new rekey, which will also provide a new nonce.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"backup":{"type":"boolean","description":"Specifies if using PGP-encrypted keys, whether Vault should also store a plaintext backup of the PGP-encrypted keys."},"pgp_keys":{"type":"array","description":"Specifies an array of PGP public keys used to encrypt the output unseal keys. Ordering is preserved. The keys must be base64-encoded from their original binary representation. The size of this array must be the same as secret_shares.","items":{"type":"string"}},"require_verification":{"type":"boolean","description":"Turns on verification functionality"},"secret_shares":{"type":"number","description":"Specifies the number of shares to split the master key into."},"secret_threshold":{"type":"number","description":"Specifies the number of shares required to reconstruct the master key. This must be less than or equal secret_shares. If using Vault HSM with auto-unsealing, this value must be the same as secret_shares."}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Cancels any in-progress rekey.","description":"This clears the rekey settings as well as any progress made. This must be called to change the parameters of the rekey. Note: verification is still a part of a rekey. If rekeying is canceled during the verification flow, the current unseal keys remain valid.","tags":["system"],"responses":{"204":{"description":"empty body"}}}},"/sys/rekey/recovery-key-backup":{"description":"Allows fetching or deleting the backup of the rotated unseal keys.","get":{"summary":"Allows fetching or deleting the backup of the rotated unseal keys.","tags":["system"],"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Allows fetching or deleting the backup of the rotated unseal keys.","tags":["system"],"responses":{"204":{"description":"empty body"}}}},"/sys/rekey/update":{"post":{"summary":"Enter a single master key share to progress the rekey of the Vault.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"key":{"type":"string","description":"Specifies a single master key share."},"nonce":{"type":"string","description":"Specifies the nonce of the rekey attempt."}}}}}},"responses":{"200":{"description":"OK"}}}},"/sys/rekey/verify":{"get":{"summary":"Read the configuration and progress of the current rekey verification attempt.","tags":["system"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Enter a single new key share to progress the rekey verification operation.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"key":{"type":"string","description":"Specifies a single master share key from the new set of shares."},"nonce":{"type":"string","description":"Specifies the nonce of the rekey verification operation."}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Cancel any in-progress rekey verification operation.","description":"This clears any progress made and resets the nonce. Unlike a `DELETE` against `sys/rekey/init`, this only resets the current verification operation, not the entire rekey atttempt.","tags":["system"],"responses":{"204":{"description":"empty body"}}}},"/sys/remount":{"description":"Move the mount point of an already-mounted backend.","x-vault-sudo":true,"post":{"summary":"Move the mount point of an already-mounted backend.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"from":{"type":"string","description":"The previous mount point."},"to":{"type":"string","description":"The new mount point."}}}}}},"responses":{"200":{"description":"OK"}}}},"/sys/renew":{"description":"Renew a lease on a secret","post":{"summary":"Renews a lease, requesting to extend the lease.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"increment":{"type":"number","description":"The desired increment in seconds to the lease","format":"seconds"},"lease_id":{"type":"string","description":"The lease identifier to renew. This is included with a lease."},"url_lease_id":{"type":"string","description":"The lease identifier to renew. This is included with a lease."}}}}}},"responses":{"200":{"description":"OK"}}}},"/sys/renew/{url_lease_id}":{"description":"Renew a lease on a secret","parameters":[{"name":"url_lease_id","description":"The lease identifier to renew. This is included with a lease.","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Renews a lease, requesting to extend the lease.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"increment":{"type":"number","description":"The desired increment in seconds to the lease","format":"seconds"},"lease_id":{"type":"string","description":"The lease identifier to renew. This is included with a lease."}}}}}},"responses":{"200":{"description":"OK"}}}},"/sys/replication/status":{"x-vault-unauthenticated":true,"get":{"tags":["system"],"responses":{"200":{"description":"OK"}}}},"/sys/revoke":{"description":"Revoke a leased secret immediately","post":{"summary":"Revokes a lease immediately.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"lease_id":{"type":"string","description":"The lease identifier to renew. This is included with a lease."},"sync":{"type":"boolean","description":"Whether or not to perform the revocation synchronously"},"url_lease_id":{"type":"string","description":"The lease identifier to renew. This is included with a lease."}}}}}},"responses":{"200":{"description":"OK"}}}},"/sys/revoke-force/{prefix}":{"description":"Revoke all secrets generated in a given prefix, ignoring errors.","parameters":[{"name":"prefix","description":"The path to revoke keys under. Example: \"prod/aws/ops\"","in":"path","schema":{"type":"string"},"required":true}],"x-vault-sudo":true,"post":{"summary":"Revokes all secrets or tokens generated under a given prefix immediately","description":"Unlike `/sys/leases/revoke-prefix`, this path ignores backend errors encountered during revocation. This is potentially very dangerous and should only be used in specific emergency situations where errors in the backend or the connected backend service prevent normal revocation.\n\nBy ignoring these errors, Vault abdicates responsibility for ensuring that the issued credentials or secrets are properly revoked and/or cleaned up. Access to this endpoint should be tightly controlled.","tags":["system"],"responses":{"200":{"description":"OK"}}}},"/sys/revoke-prefix/{prefix}":{"description":"Revoke all secrets generated in a given prefix","parameters":[{"name":"prefix","description":"The path to revoke keys under. Example: \"prod/aws/ops\"","in":"path","schema":{"type":"string"},"required":true}],"x-vault-sudo":true,"post":{"summary":"Revokes all secrets (via a lease ID prefix) or tokens (via the tokens' path property) generated under a given prefix immediately.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"sync":{"type":"boolean","description":"Whether or not to perform the revocation synchronously"}}}}}},"responses":{"200":{"description":"OK"}}}},"/sys/revoke/{url_lease_id}":{"description":"Revoke a leased secret immediately","parameters":[{"name":"url_lease_id","description":"The lease identifier to renew. This is included with a lease.","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Revokes a lease immediately.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"lease_id":{"type":"string","description":"The lease identifier to renew. This is included with a lease."},"sync":{"type":"boolean","description":"Whether or not to perform the revocation synchronously"}}}}}},"responses":{"200":{"description":"OK"}}}},"/sys/rotate":{"description":"Rotates the backend encryption key used to persist data.","x-vault-sudo":true,"post":{"summary":"Rotates the backend encryption key used to persist data.","tags":["system"],"responses":{"200":{"description":"OK"}}}},"/sys/seal":{"description":"Seals the Vault.","post":{"summary":"Seal the Vault.","tags":["system"],"responses":{"200":{"description":"OK"}}}},"/sys/seal-status":{"description":"Returns the seal status of the Vault.","get":{"summary":"Check the seal status of a Vault.","tags":["system"],"responses":{"200":{"description":"OK"}}}},"/sys/step-down":{"post":{"summary":"Cause the node to give up active status.","description":"This endpoint forces the node to give up active status. If the node does not have active status, this endpoint does nothing. Note that the node will sleep for ten seconds before attempting to grab the active lock again, but if no standby nodes grab the active lock in the interim, the same node may become the active node again.","tags":["system"],"responses":{"204":{"description":"empty body"}}}},"/sys/tools/hash":{"description":"Generate a hash sum for input data","post":{"summary":"Generate a hash sum for input data","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"algorithm":{"type":"string","description":"Algorithm to use (POST body parameter). Valid values are: * sha2-224 * sha2-256 * sha2-384 * sha2-512 Defaults to \"sha2-256\"."},"format":{"type":"string","description":"Encoding format to use. Can be \"hex\" or \"base64\". Defaults to \"hex\"."},"input":{"type":"string","description":"The base64-encoded input data"},"urlalgorithm":{"type":"string","description":"Algorithm to use (POST URL parameter)"}}}}}},"responses":{"200":{"description":"OK"}}}},"/sys/tools/hash/{urlalgorithm}":{"description":"Generate a hash sum for input data","parameters":[{"name":"urlalgorithm","description":"Algorithm to use (POST URL parameter)","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Generate a hash sum for input data","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"algorithm":{"type":"string","description":"Algorithm to use (POST body parameter). Valid values are: * sha2-224 * sha2-256 * sha2-384 * sha2-512 Defaults to \"sha2-256\"."},"format":{"type":"string","description":"Encoding format to use. Can be \"hex\" or \"base64\". Defaults to \"hex\"."},"input":{"type":"string","description":"The base64-encoded input data"}}}}}},"responses":{"200":{"description":"OK"}}}},"/sys/tools/random":{"description":"Generate random bytes","post":{"summary":"Generate random bytes","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"bytes":{"type":"number","description":"The number of bytes to generate (POST body parameter). Defaults to 32 (256 bits)."},"format":{"type":"string","description":"Encoding format to use. Can be \"hex\" or \"base64\". Defaults to \"base64\"."},"urlbytes":{"type":"string","description":"The number of bytes to generate (POST URL parameter)"}}}}}},"responses":{"200":{"description":"OK"}}}},"/sys/tools/random/{urlbytes}":{"description":"Generate random bytes","parameters":[{"name":"urlbytes","description":"The number of bytes to generate (POST URL parameter)","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Generate random bytes","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"bytes":{"type":"number","description":"The number of bytes to generate (POST body parameter). Defaults to 32 (256 bits)."},"format":{"type":"string","description":"Encoding format to use. Can be \"hex\" or \"base64\". Defaults to \"base64\"."}}}}}},"responses":{"200":{"description":"OK"}}}},"/sys/unseal":{"description":"Unseals the Vault.","post":{"summary":"Unseal the Vault.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"key":{"type":"string","description":"Specifies a single master key share. This is required unless reset is true."},"reset":{"type":"boolean","description":"Specifies if previously-provided unseal keys are discarded and the unseal process is reset."}}}}}},"responses":{"200":{"description":"OK"}}}},"/sys/wrapping/lookup":{"description":"Looks up the properties of a response-wrapped token.","x-vault-unauthenticated":true,"get":{"summary":"Look up wrapping properties for the requester's token.","tags":["system"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Look up wrapping properties for the given token.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"token":{"type":"string"}}}}}},"responses":{"200":{"description":"OK"}}}},"/sys/wrapping/rewrap":{"description":"Rotates a response-wrapped token.","post":{"summary":"Rotates a response-wrapped token.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"token":{"type":"string"}}}}}},"responses":{"200":{"description":"OK"}}}},"/sys/wrapping/unwrap":{"description":"Unwraps a response-wrapped token.","post":{"summary":"Unwraps a response-wrapped token.","tags":["system"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"token":{"type":"string"}}}}}},"responses":{"200":{"description":"OK"}}}},"/sys/wrapping/wrap":{"description":"Response-wraps an arbitrary JSON object.","post":{"summary":"Response-wraps an arbitrary JSON object.","tags":["system"],"responses":{"200":{"description":"OK"}}}},"/totp/code/{name}":{"description":"Request time-based one-time use password or validate a password for a certain key .","parameters":[{"name":"name","description":"Name of the key.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Request time-based one-time use password or validate a password for a certain key .","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Request time-based one-time use password or validate a password for a certain key .","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"string","description":"TOTP code to be validated."}}}}}},"responses":{"200":{"description":"OK"}}}},"/totp/keys":{"description":"Manage the keys that can be created with this backend.","get":{"summary":"Manage the keys that can be created with this backend.","tags":["secrets"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/totp/keys/{name}":{"description":"Manage the keys that can be created with this backend.","parameters":[{"name":"name","description":"Name of the key.","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Manage the keys that can be created with this backend.","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Manage the keys that can be created with this backend.","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"account_name":{"type":"string","description":"The name of the account associated with the key. Required if generate is true."},"algorithm":{"type":"string","description":"The hashing algorithm used to generate the TOTP token. Options include SHA1, SHA256 and SHA512."},"digits":{"type":"number","description":"The number of digits in the generated TOTP token. This value can either be 6 or 8."},"exported":{"type":"boolean","description":"Determines if a QR code and url are returned upon generating a key. Only used if generate is true."},"generate":{"type":"boolean","description":"Determines if a key should be generated by Vault or if a key is being passed from another service."},"issuer":{"type":"string","description":"The name of the key's issuing organization. Required if generate is true."},"key":{"type":"string","description":"The shared master key used to generate a TOTP token. Only used if generate is false."},"key_size":{"type":"number","description":"Determines the size in bytes of the generated key. Only used if generate is true."},"period":{"type":"number","description":"The length of time used to generate a counter for the TOTP token calculation.","format":"seconds"},"qr_size":{"type":"number","description":"The pixel size of the generated square QR code. Only used if generate is true and exported is true. If this value is 0, a QR code will not be returned."},"skew":{"type":"number","description":"The number of delay periods that are allowed when validating a TOTP token. This value can either be 0 or 1. Only used if generate is true."},"url":{"type":"string","description":"A TOTP url string containing all of the parameters for key setup. Only used if generate is false."}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Manage the keys that can be created with this backend.","tags":["secrets"],"responses":{"204":{"description":"empty body"}}}},"/transit/backup/{name}":{"description":"Backup the named key","parameters":[{"name":"name","description":"Name of the key","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Backup the named key","tags":["secrets"],"responses":{"200":{"description":"OK"}}}},"/transit/datakey/{plaintext}/{name}":{"description":"Generate a data key","parameters":[{"name":"name","description":"The backend key used for encrypting the data key","in":"path","schema":{"type":"string"},"required":true},{"name":"plaintext","description":"\"plaintext\" will return the key in both plaintext and ciphertext; \"wrapped\" will return the ciphertext only.","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Generate a data key","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"bits":{"type":"number","description":"Number of bits for the key; currently 128, 256, and 512 bits are supported. Defaults to 256."},"context":{"type":"string","description":"Context for key derivation. Required for derived keys."},"key_version":{"type":"number","description":"The version of the Vault key to use for encryption of the data key. Must be 0 (for latest) or a value greater than or equal to the min_encryption_version configured on the key."},"nonce":{"type":"string","description":"Nonce for when convergent encryption v1 is used (only in Vault 0.6.1)"}}}}}},"responses":{"200":{"description":"OK"}}}},"/transit/decrypt/{name}":{"description":"Decrypt a ciphertext value using a named key","parameters":[{"name":"name","description":"Name of the policy","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Decrypt a ciphertext value using a named key","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"ciphertext":{"type":"string","description":"The ciphertext to decrypt, provided as returned by encrypt."},"context":{"type":"string","description":"Base64 encoded context for key derivation. Required if key derivation is enabled."},"nonce":{"type":"string","description":"Base64 encoded nonce value used during encryption. Must be provided if convergent encryption is enabled for this key and the key was generated with Vault 0.6.1. Not required for keys created in 0.6.2+."}}}}}},"responses":{"200":{"description":"OK"}}}},"/transit/encrypt/{name}":{"description":"Encrypt a plaintext value or a batch of plaintext blocks using a named key","parameters":[{"name":"name","description":"Name of the policy","in":"path","schema":{"type":"string"},"required":true}],"x-vault-create-supported":true,"post":{"summary":"Encrypt a plaintext value or a batch of plaintext\nblocks using a named key","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"context":{"type":"string","description":"Base64 encoded context for key derivation. Required if key derivation is enabled"},"convergent_encryption":{"type":"boolean","description":"This parameter will only be used when a key is expected to be created. Whether to support convergent encryption. This is only supported when using a key with key derivation enabled and will require all requests to carry both a context and 96-bit (12-byte) nonce. The given nonce will be used in place of a randomly generated nonce. As a result, when the same context and nonce are supplied, the same ciphertext is generated. It is *very important* when using this mode that you ensure that all nonces are unique for a given context. Failing to do so will severely impact the ciphertext's security."},"key_version":{"type":"number","description":"The version of the key to use for encryption. Must be 0 (for latest) or a value greater than or equal to the min_encryption_version configured on the key."},"nonce":{"type":"string","description":"Base64 encoded nonce value. Must be provided if convergent encryption is enabled for this key and the key was generated with Vault 0.6.1. Not required for keys created in 0.6.2+. The value must be exactly 96 bits (12 bytes) long and the user must ensure that for any given context (and thus, any given encryption key) this nonce value is **never reused**."},"plaintext":{"type":"string","description":"Base64 encoded plaintext value to be encrypted"},"type":{"type":"string","description":"This parameter is required when encryption key is expected to be created. When performing an upsert operation, the type of key to create. Currently, \"aes256-gcm96\" (symmetric) is the only type supported. Defaults to \"aes256-gcm96\"."}}}}}},"responses":{"200":{"description":"OK"}}}},"/transit/export/{type}/{name}":{"description":"Export named encryption or signing key","parameters":[{"name":"name","description":"Name of the key","in":"path","schema":{"type":"string"},"required":true},{"name":"type","description":"Type of key to export (encryption-key, signing-key, hmac-key)","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Export named encryption or signing key","tags":["secrets"],"responses":{"200":{"description":"OK"}}}},"/transit/export/{type}/{name}/{version}":{"description":"Export named encryption or signing key","parameters":[{"name":"name","description":"Name of the key","in":"path","schema":{"type":"string"},"required":true},{"name":"type","description":"Type of key to export (encryption-key, signing-key, hmac-key)","in":"path","schema":{"type":"string"},"required":true},{"name":"version","description":"Version of the key","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Export named encryption or signing key","tags":["secrets"],"responses":{"200":{"description":"OK"}}}},"/transit/hash":{"description":"Generate a hash sum for input data","post":{"summary":"Generate a hash sum for input data","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"algorithm":{"type":"string","description":"Algorithm to use (POST body parameter). Valid values are: * sha2-224 * sha2-256 * sha2-384 * sha2-512 Defaults to \"sha2-256\"."},"format":{"type":"string","description":"Encoding format to use. Can be \"hex\" or \"base64\". Defaults to \"hex\"."},"input":{"type":"string","description":"The base64-encoded input data"},"urlalgorithm":{"type":"string","description":"Algorithm to use (POST URL parameter)"}}}}}},"responses":{"200":{"description":"OK"}}}},"/transit/hash/{urlalgorithm}":{"description":"Generate a hash sum for input data","parameters":[{"name":"urlalgorithm","description":"Algorithm to use (POST URL parameter)","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Generate a hash sum for input data","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"algorithm":{"type":"string","description":"Algorithm to use (POST body parameter). Valid values are: * sha2-224 * sha2-256 * sha2-384 * sha2-512 Defaults to \"sha2-256\"."},"format":{"type":"string","description":"Encoding format to use. Can be \"hex\" or \"base64\". Defaults to \"hex\"."},"input":{"type":"string","description":"The base64-encoded input data"}}}}}},"responses":{"200":{"description":"OK"}}}},"/transit/hmac/{name}":{"description":"Generate an HMAC for input data using the named key","parameters":[{"name":"name","description":"The key to use for the HMAC function","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Generate an HMAC for input data using the named key","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"algorithm":{"type":"string","description":"Algorithm to use (POST body parameter). Valid values are: * sha2-224 * sha2-256 * sha2-384 * sha2-512 Defaults to \"sha2-256\"."},"input":{"type":"string","description":"The base64-encoded input data"},"key_version":{"type":"number","description":"The version of the key to use for generating the HMAC. Must be 0 (for latest) or a value greater than or equal to the min_encryption_version configured on the key."},"urlalgorithm":{"type":"string","description":"Algorithm to use (POST URL parameter)"}}}}}},"responses":{"200":{"description":"OK"}}}},"/transit/hmac/{name}/{urlalgorithm}":{"description":"Generate an HMAC for input data using the named key","parameters":[{"name":"name","description":"The key to use for the HMAC function","in":"path","schema":{"type":"string"},"required":true},{"name":"urlalgorithm","description":"Algorithm to use (POST URL parameter)","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Generate an HMAC for input data using the named key","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"algorithm":{"type":"string","description":"Algorithm to use (POST body parameter). Valid values are: * sha2-224 * sha2-256 * sha2-384 * sha2-512 Defaults to \"sha2-256\"."},"input":{"type":"string","description":"The base64-encoded input data"},"key_version":{"type":"number","description":"The version of the key to use for generating the HMAC. Must be 0 (for latest) or a value greater than or equal to the min_encryption_version configured on the key."}}}}}},"responses":{"200":{"description":"OK"}}}},"/transit/keys":{"description":"Managed named encryption keys","get":{"summary":"Managed named encryption keys","tags":["secrets"],"parameters":[{"name":"list","description":"Return a list if `true`","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/transit/keys/{name}":{"description":"Managed named encryption keys","parameters":[{"name":"name","description":"Name of the key","in":"path","schema":{"type":"string"},"required":true}],"get":{"summary":"Managed named encryption keys","tags":["secrets"],"responses":{"200":{"description":"OK"}}},"post":{"summary":"Managed named encryption keys","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"allow_plaintext_backup":{"type":"boolean","description":"Enables taking a backup of the named key in plaintext format. Once set, this cannot be disabled."},"context":{"type":"string","description":"Base64 encoded context for key derivation. When reading a key with key derivation enabled, if the key type supports public keys, this will return the public key for the given context."},"convergent_encryption":{"type":"boolean","description":"Whether to support convergent encryption. This is only supported when using a key with key derivation enabled and will require all requests to carry both a context and 96-bit (12-byte) nonce. The given nonce will be used in place of a randomly generated nonce. As a result, when the same context and nonce are supplied, the same ciphertext is generated. It is *very important* when using this mode that you ensure that all nonces are unique for a given context. Failing to do so will severely impact the ciphertext's security."},"derived":{"type":"boolean","description":"Enables key derivation mode. This allows for per-transaction unique keys for encryption operations."},"exportable":{"type":"boolean","description":"Enables keys to be exportable. This allows for all the valid keys in the key ring to be exported."},"type":{"type":"string","description":"The type of key to create. Currently, \"aes256-gcm96\" (symmetric), \"ecdsa-p256\" (asymmetric), 'ed25519' (asymmetric), 'rsa-2048' (asymmetric), 'rsa-4096' (asymmetric) are supported. Defaults to \"aes256-gcm96\"."}}}}}},"responses":{"200":{"description":"OK"}}},"delete":{"summary":"Managed named encryption keys","tags":["secrets"],"responses":{"204":{"description":"empty body"}}}},"/transit/keys/{name}/config":{"description":"Configure a named encryption key","parameters":[{"name":"name","description":"Name of the key","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Configure a named encryption key","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"allow_plaintext_backup":{"type":"boolean","description":"Enables taking a backup of the named key in plaintext format. Once set, this cannot be disabled."},"deletion_allowed":{"type":"boolean","description":"Whether to allow deletion of the key"},"exportable":{"type":"boolean","description":"Enables export of the key. Once set, this cannot be disabled."},"min_decryption_version":{"type":"number","description":"If set, the minimum version of the key allowed to be decrypted. For signing keys, the minimum version allowed to be used for verification."},"min_encryption_version":{"type":"number","description":"If set, the minimum version of the key allowed to be used for encryption; or for signing keys, to be used for signing. If set to zero, only the latest version of the key is allowed."}}}}}},"responses":{"200":{"description":"OK"}}}},"/transit/keys/{name}/rotate":{"description":"Rotate named encryption key","parameters":[{"name":"name","description":"Name of the key","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Rotate named encryption key","tags":["secrets"],"responses":{"200":{"description":"OK"}}}},"/transit/keys/{name}/trim":{"description":"Trim key versions of a named key","parameters":[{"name":"name","description":"Name of the key","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Trim key versions of a named key","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"min_available_version":{"type":"number","description":"The minimum available version for the key ring. All versions before this version will be permanently deleted. This value can at most be equal to the lesser of 'min_decryption_version' and 'min_encryption_version'. This is not allowed to be set when either 'min_encryption_version' or 'min_decryption_version' is set to zero."}}}}}},"responses":{"200":{"description":"OK"}}}},"/transit/random":{"description":"Generate random bytes","post":{"summary":"Generate random bytes","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"bytes":{"type":"number","description":"The number of bytes to generate (POST body parameter). Defaults to 32 (256 bits)."},"format":{"type":"string","description":"Encoding format to use. Can be \"hex\" or \"base64\". Defaults to \"base64\"."},"urlbytes":{"type":"string","description":"The number of bytes to generate (POST URL parameter)"}}}}}},"responses":{"200":{"description":"OK"}}}},"/transit/random/{urlbytes}":{"description":"Generate random bytes","parameters":[{"name":"urlbytes","description":"The number of bytes to generate (POST URL parameter)","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Generate random bytes","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"bytes":{"type":"number","description":"The number of bytes to generate (POST body parameter). Defaults to 32 (256 bits)."},"format":{"type":"string","description":"Encoding format to use. Can be \"hex\" or \"base64\". Defaults to \"base64\"."}}}}}},"responses":{"200":{"description":"OK"}}}},"/transit/restore":{"description":"Restore the named key","post":{"summary":"Restore the named key","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"backup":{"type":"string","description":"Backed up key data to be restored. This should be the output from the 'backup/' endpoint."},"force":{"type":"boolean","description":"If set and a key by the given name exists, force the restore operation and override the key."},"name":{"type":"string","description":"If set, this will be the name of the restored key."}}}}}},"responses":{"200":{"description":"OK"}}}},"/transit/restore/{name}":{"description":"Restore the named key","parameters":[{"name":"name","description":"If set, this will be the name of the restored key.","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Restore the named key","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"backup":{"type":"string","description":"Backed up key data to be restored. This should be the output from the 'backup/' endpoint."},"force":{"type":"boolean","description":"If set and a key by the given name exists, force the restore operation and override the key."}}}}}},"responses":{"200":{"description":"OK"}}}},"/transit/rewrap/{name}":{"description":"Rewrap ciphertext","parameters":[{"name":"name","description":"Name of the key","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Rewrap ciphertext","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"ciphertext":{"type":"string","description":"Ciphertext value to rewrap"},"context":{"type":"string","description":"Base64 encoded context for key derivation. Required for derived keys."},"key_version":{"type":"number","description":"The version of the key to use for encryption. Must be 0 (for latest) or a value greater than or equal to the min_encryption_version configured on the key."},"nonce":{"type":"string","description":"Nonce for when convergent encryption is used"}}}}}},"responses":{"200":{"description":"OK"}}}},"/transit/sign/{name}":{"description":"Generate a signature for input data using the named key","parameters":[{"name":"name","description":"The key to use","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Generate a signature for input data using the named key","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"algorithm":{"type":"string","description":"Deprecated: use \"hash_algorithm\" instead."},"context":{"type":"string","description":"Base64 encoded context for key derivation. Required if key derivation is enabled; currently only available with ed25519 keys."},"hash_algorithm":{"type":"string","description":"Hash algorithm to use (POST body parameter). Valid values are: * sha2-224 * sha2-256 * sha2-384 * sha2-512 Defaults to \"sha2-256\". Not valid for all key types, including ed25519."},"input":{"type":"string","description":"The base64-encoded input data"},"key_version":{"type":"number","description":"The version of the key to use for signing. Must be 0 (for latest) or a value greater than or equal to the min_encryption_version configured on the key."},"prehashed":{"type":"boolean","description":"Set to 'true' when the input is already hashed. If the key type is 'rsa-2048' or 'rsa-4096', then the algorithm used to hash the input should be indicated by the 'algorithm' parameter."},"signature_algorithm":{"type":"string","description":"The signature algorithm to use for signing. Currently only applies to RSA key types. Options are 'pss' or 'pkcs1v15'. Defaults to 'pss'"},"urlalgorithm":{"type":"string","description":"Hash algorithm to use (POST URL parameter)"}}}}}},"responses":{"200":{"description":"OK"}}}},"/transit/sign/{name}/{urlalgorithm}":{"description":"Generate a signature for input data using the named key","parameters":[{"name":"name","description":"The key to use","in":"path","schema":{"type":"string"},"required":true},{"name":"urlalgorithm","description":"Hash algorithm to use (POST URL parameter)","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Generate a signature for input data using the named key","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"algorithm":{"type":"string","description":"Deprecated: use \"hash_algorithm\" instead."},"context":{"type":"string","description":"Base64 encoded context for key derivation. Required if key derivation is enabled; currently only available with ed25519 keys."},"hash_algorithm":{"type":"string","description":"Hash algorithm to use (POST body parameter). Valid values are: * sha2-224 * sha2-256 * sha2-384 * sha2-512 Defaults to \"sha2-256\". Not valid for all key types, including ed25519."},"input":{"type":"string","description":"The base64-encoded input data"},"key_version":{"type":"number","description":"The version of the key to use for signing. Must be 0 (for latest) or a value greater than or equal to the min_encryption_version configured on the key."},"prehashed":{"type":"boolean","description":"Set to 'true' when the input is already hashed. If the key type is 'rsa-2048' or 'rsa-4096', then the algorithm used to hash the input should be indicated by the 'algorithm' parameter."},"signature_algorithm":{"type":"string","description":"The signature algorithm to use for signing. Currently only applies to RSA key types. Options are 'pss' or 'pkcs1v15'. Defaults to 'pss'"}}}}}},"responses":{"200":{"description":"OK"}}}},"/transit/verify/{name}":{"description":"Verify a signature or HMAC for input data created using the named key","parameters":[{"name":"name","description":"The key to use","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Verify a signature or HMAC for input data created using the named key","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"algorithm":{"type":"string","description":"Deprecated: use \"hash_algorithm\" instead."},"context":{"type":"string","description":"Base64 encoded context for key derivation. Required if key derivation is enabled; currently only available with ed25519 keys."},"hash_algorithm":{"type":"string","description":"Hash algorithm to use (POST body parameter). Valid values are: * sha2-224 * sha2-256 * sha2-384 * sha2-512 Defaults to \"sha2-256\". Not valid for all key types."},"hmac":{"type":"string","description":"The HMAC, including vault header/key version"},"input":{"type":"string","description":"The base64-encoded input data to verify"},"prehashed":{"type":"boolean","description":"Set to 'true' when the input is already hashed. If the key type is 'rsa-2048' or 'rsa-4096', then the algorithm used to hash the input should be indicated by the 'algorithm' parameter."},"signature":{"type":"string","description":"The signature, including vault header/key version"},"signature_algorithm":{"type":"string","description":"The signature algorithm to use for signature verification. Currently only applies to RSA key types. Options are 'pss' or 'pkcs1v15'. Defaults to 'pss'"},"urlalgorithm":{"type":"string","description":"Hash algorithm to use (POST URL parameter)"}}}}}},"responses":{"200":{"description":"OK"}}}},"/transit/verify/{name}/{urlalgorithm}":{"description":"Verify a signature or HMAC for input data created using the named key","parameters":[{"name":"name","description":"The key to use","in":"path","schema":{"type":"string"},"required":true},{"name":"urlalgorithm","description":"Hash algorithm to use (POST URL parameter)","in":"path","schema":{"type":"string"},"required":true}],"post":{"summary":"Verify a signature or HMAC for input data created using the named key","tags":["secrets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"algorithm":{"type":"string","description":"Deprecated: use \"hash_algorithm\" instead."},"context":{"type":"string","description":"Base64 encoded context for key derivation. Required if key derivation is enabled; currently only available with ed25519 keys."},"hash_algorithm":{"type":"string","description":"Hash algorithm to use (POST body parameter). Valid values are: * sha2-224 * sha2-256 * sha2-384 * sha2-512 Defaults to \"sha2-256\". Not valid for all key types."},"hmac":{"type":"string","description":"The HMAC, including vault header/key version"},"input":{"type":"string","description":"The base64-encoded input data to verify"},"prehashed":{"type":"boolean","description":"Set to 'true' when the input is already hashed. If the key type is 'rsa-2048' or 'rsa-4096', then the algorithm used to hash the input should be indicated by the 'algorithm' parameter."},"signature":{"type":"string","description":"The signature, including vault header/key version"},"signature_algorithm":{"type":"string","description":"The signature algorithm to use for signature verification. Currently only applies to RSA key types. Options are 'pss' or 'pkcs1v15'. Defaults to 'pss'"}}}}}},"responses":{"200":{"description":"OK"}}}}}}